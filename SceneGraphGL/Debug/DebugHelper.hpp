// This file was automatically generated from gl.xml by createDebugHelper.py
// gl.xml was taken from https://cvs.khronos.org/svn/repos/ogl/trunk/doc/registry/public/api/

#define wrapGlFuncNoArgs(glFunc) do { glFunc(); SG::GL::checkGlErrors(__FILE__, __LINE__); } while(0)
#define wrapGlFunc(glFunc, ...) do { glFunc(__VA_ARGS__); SG::GL::checkGlErrors(__FILE__, __LINE__); } while(0)

#define glAccum(op, value) wrapGlFunc(glAccum, op, value)
#define glAccumxOES(op, value) wrapGlFunc(glAccumxOES, op, value)
#define glActiveProgramEXT(program) wrapGlFunc(glActiveProgramEXT, program)
#define glActiveShaderProgram(pipeline, program) wrapGlFunc(glActiveShaderProgram, pipeline, program)
#define glActiveShaderProgramEXT(pipeline, program) wrapGlFunc(glActiveShaderProgramEXT, pipeline, program)
#define glActiveStencilFaceEXT(face) wrapGlFunc(glActiveStencilFaceEXT, face)
#define glActiveTexture(texture) wrapGlFunc(glActiveTexture, texture)
#define glActiveTextureARB(texture) wrapGlFunc(glActiveTextureARB, texture)
#define glActiveVaryingNV(program, name) wrapGlFunc(glActiveVaryingNV, program, name)
#define glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod) wrapGlFunc(glAlphaFragmentOp1ATI, op, dst, dstMod, arg1, arg1Rep, arg1Mod)
#define glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod) wrapGlFunc(glAlphaFragmentOp2ATI, op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
#define glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod) wrapGlFunc(glAlphaFragmentOp3ATI, op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
#define glAlphaFunc(func, ref) wrapGlFunc(glAlphaFunc, func, ref)
#define glAlphaFuncQCOM(func, ref) wrapGlFunc(glAlphaFuncQCOM, func, ref)
#define glAlphaFuncx(func, ref) wrapGlFunc(glAlphaFuncx, func, ref)
#define glAlphaFuncxOES(func, ref) wrapGlFunc(glAlphaFuncxOES, func, ref)
#define glApplyFramebufferAttachmentCMAAINTEL() wrapGlFuncNoArgs(glApplyFramebufferAttachmentCMAAINTEL)
#define glApplyTextureEXT(mode) wrapGlFunc(glApplyTextureEXT, mode)
#define glArrayElement(i) wrapGlFunc(glArrayElement, i)
#define glArrayElementEXT(i) wrapGlFunc(glArrayElementEXT, i)
#define glArrayObjectATI(array, size, type, stride, buffer, offset) wrapGlFunc(glArrayObjectATI, array, size, type, stride, buffer, offset)
#define glAsyncMarkerSGIX(marker) wrapGlFunc(glAsyncMarkerSGIX, marker)
#define glAttachObjectARB(containerObj, obj) wrapGlFunc(glAttachObjectARB, containerObj, obj)
#define glAttachShader(program, shader) wrapGlFunc(glAttachShader, program, shader)
#define glBegin(mode) wrapGlFunc(glBegin, mode)
#define glBeginConditionalRender(id, mode) wrapGlFunc(glBeginConditionalRender, id, mode)
#define glBeginConditionalRenderNV(id, mode) wrapGlFunc(glBeginConditionalRenderNV, id, mode)
#define glBeginConditionalRenderNVX(id) wrapGlFunc(glBeginConditionalRenderNVX, id)
#define glBeginFragmentShaderATI() wrapGlFuncNoArgs(glBeginFragmentShaderATI)
#define glBeginOcclusionQueryNV(id) wrapGlFunc(glBeginOcclusionQueryNV, id)
#define glBeginPerfMonitorAMD(monitor) wrapGlFunc(glBeginPerfMonitorAMD, monitor)
#define glBeginPerfQueryINTEL(queryHandle) wrapGlFunc(glBeginPerfQueryINTEL, queryHandle)
#define glBeginQuery(target, id) wrapGlFunc(glBeginQuery, target, id)
#define glBeginQueryARB(target, id) wrapGlFunc(glBeginQueryARB, target, id)
#define glBeginQueryEXT(target, id) wrapGlFunc(glBeginQueryEXT, target, id)
#define glBeginQueryIndexed(target, index, id) wrapGlFunc(glBeginQueryIndexed, target, index, id)
#define glBeginTransformFeedback(primitiveMode) wrapGlFunc(glBeginTransformFeedback, primitiveMode)
#define glBeginTransformFeedbackEXT(primitiveMode) wrapGlFunc(glBeginTransformFeedbackEXT, primitiveMode)
#define glBeginTransformFeedbackNV(primitiveMode) wrapGlFunc(glBeginTransformFeedbackNV, primitiveMode)
#define glBeginVertexShaderEXT() wrapGlFuncNoArgs(glBeginVertexShaderEXT)
#define glBeginVideoCaptureNV(video_capture_slot) wrapGlFunc(glBeginVideoCaptureNV, video_capture_slot)
#define glBindAttribLocation(program, index, name) wrapGlFunc(glBindAttribLocation, program, index, name)
#define glBindAttribLocationARB(programObj, index, name) wrapGlFunc(glBindAttribLocationARB, programObj, index, name)
#define glBindBuffer(target, buffer) wrapGlFunc(glBindBuffer, target, buffer)
#define glBindBufferARB(target, buffer) wrapGlFunc(glBindBufferARB, target, buffer)
#define glBindBufferBase(target, index, buffer) wrapGlFunc(glBindBufferBase, target, index, buffer)
#define glBindBufferBaseEXT(target, index, buffer) wrapGlFunc(glBindBufferBaseEXT, target, index, buffer)
#define glBindBufferBaseNV(target, index, buffer) wrapGlFunc(glBindBufferBaseNV, target, index, buffer)
#define glBindBufferOffsetEXT(target, index, buffer, offset) wrapGlFunc(glBindBufferOffsetEXT, target, index, buffer, offset)
#define glBindBufferOffsetNV(target, index, buffer, offset) wrapGlFunc(glBindBufferOffsetNV, target, index, buffer, offset)
#define glBindBufferRange(target, index, buffer, offset, size) wrapGlFunc(glBindBufferRange, target, index, buffer, offset, size)
#define glBindBufferRangeEXT(target, index, buffer, offset, size) wrapGlFunc(glBindBufferRangeEXT, target, index, buffer, offset, size)
#define glBindBufferRangeNV(target, index, buffer, offset, size) wrapGlFunc(glBindBufferRangeNV, target, index, buffer, offset, size)
#define glBindBuffersBase(target, first, count, buffers) wrapGlFunc(glBindBuffersBase, target, first, count, buffers)
#define glBindBuffersRange(target, first, count, buffers, offsets, sizes) wrapGlFunc(glBindBuffersRange, target, first, count, buffers, offsets, sizes)
#define glBindFragDataLocation(program, color, name) wrapGlFunc(glBindFragDataLocation, program, color, name)
#define glBindFragDataLocationEXT(program, color, name) wrapGlFunc(glBindFragDataLocationEXT, program, color, name)
#define glBindFragDataLocationIndexed(program, colorNumber, index, name) wrapGlFunc(glBindFragDataLocationIndexed, program, colorNumber, index, name)
#define glBindFragDataLocationIndexedEXT(program, colorNumber, index, name) wrapGlFunc(glBindFragDataLocationIndexedEXT, program, colorNumber, index, name)
#define glBindFragmentShaderATI(id) wrapGlFunc(glBindFragmentShaderATI, id)
#define glBindFramebuffer(target, framebuffer) wrapGlFunc(glBindFramebuffer, target, framebuffer)
#define glBindFramebufferEXT(target, framebuffer) wrapGlFunc(glBindFramebufferEXT, target, framebuffer)
#define glBindFramebufferOES(target, framebuffer) wrapGlFunc(glBindFramebufferOES, target, framebuffer)
#define glBindImageTexture(unit, texture, level, layered, layer, access, format) wrapGlFunc(glBindImageTexture, unit, texture, level, layered, layer, access, format)
#define glBindImageTextureEXT(index, texture, level, layered, layer, access, format) wrapGlFunc(glBindImageTextureEXT, index, texture, level, layered, layer, access, format)
#define glBindImageTextures(first, count, textures) wrapGlFunc(glBindImageTextures, first, count, textures)
#define glBindMultiTextureEXT(texunit, target, texture) wrapGlFunc(glBindMultiTextureEXT, texunit, target, texture)
#define glBindProgramARB(target, program) wrapGlFunc(glBindProgramARB, target, program)
#define glBindProgramNV(target, id) wrapGlFunc(glBindProgramNV, target, id)
#define glBindProgramPipeline(pipeline) wrapGlFunc(glBindProgramPipeline, pipeline)
#define glBindProgramPipelineEXT(pipeline) wrapGlFunc(glBindProgramPipelineEXT, pipeline)
#define glBindRenderbuffer(target, renderbuffer) wrapGlFunc(glBindRenderbuffer, target, renderbuffer)
#define glBindRenderbufferEXT(target, renderbuffer) wrapGlFunc(glBindRenderbufferEXT, target, renderbuffer)
#define glBindRenderbufferOES(target, renderbuffer) wrapGlFunc(glBindRenderbufferOES, target, renderbuffer)
#define glBindSampler(unit, sampler) wrapGlFunc(glBindSampler, unit, sampler)
#define glBindSamplers(first, count, samplers) wrapGlFunc(glBindSamplers, first, count, samplers)
#define glBindTexture(target, texture) wrapGlFunc(glBindTexture, target, texture)
#define glBindTextureEXT(target, texture) wrapGlFunc(glBindTextureEXT, target, texture)
#define glBindTextureUnit(unit, texture) wrapGlFunc(glBindTextureUnit, unit, texture)
#define glBindTextures(first, count, textures) wrapGlFunc(glBindTextures, first, count, textures)
#define glBindTransformFeedback(target, id) wrapGlFunc(glBindTransformFeedback, target, id)
#define glBindTransformFeedbackNV(target, id) wrapGlFunc(glBindTransformFeedbackNV, target, id)
#define glBindVertexArray(array) wrapGlFunc(glBindVertexArray, array)
#define glBindVertexArrayAPPLE(array) wrapGlFunc(glBindVertexArrayAPPLE, array)
#define glBindVertexArrayOES(array) wrapGlFunc(glBindVertexArrayOES, array)
#define glBindVertexBuffer(bindingindex, buffer, offset, stride) wrapGlFunc(glBindVertexBuffer, bindingindex, buffer, offset, stride)
#define glBindVertexBuffers(first, count, buffers, offsets, strides) wrapGlFunc(glBindVertexBuffers, first, count, buffers, offsets, strides)
#define glBindVertexShaderEXT(id) wrapGlFunc(glBindVertexShaderEXT, id)
#define glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset) wrapGlFunc(glBindVideoCaptureStreamBufferNV, video_capture_slot, stream, frame_region, offset)
#define glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture) wrapGlFunc(glBindVideoCaptureStreamTextureNV, video_capture_slot, stream, frame_region, target, texture)
#define glBinormal3bEXT(bx, by, bz) wrapGlFunc(glBinormal3bEXT, bx, by, bz)
#define glBinormal3bvEXT(v) wrapGlFunc(glBinormal3bvEXT, v)
#define glBinormal3dEXT(bx, by, bz) wrapGlFunc(glBinormal3dEXT, bx, by, bz)
#define glBinormal3dvEXT(v) wrapGlFunc(glBinormal3dvEXT, v)
#define glBinormal3fEXT(bx, by, bz) wrapGlFunc(glBinormal3fEXT, bx, by, bz)
#define glBinormal3fvEXT(v) wrapGlFunc(glBinormal3fvEXT, v)
#define glBinormal3iEXT(bx, by, bz) wrapGlFunc(glBinormal3iEXT, bx, by, bz)
#define glBinormal3ivEXT(v) wrapGlFunc(glBinormal3ivEXT, v)
#define glBinormal3sEXT(bx, by, bz) wrapGlFunc(glBinormal3sEXT, bx, by, bz)
#define glBinormal3svEXT(v) wrapGlFunc(glBinormal3svEXT, v)
#define glBinormalPointerEXT(type, stride, pointer) wrapGlFunc(glBinormalPointerEXT, type, stride, pointer)
#define glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap) wrapGlFunc(glBitmap, width, height, xorig, yorig, xmove, ymove, bitmap)
#define glBitmapxOES(width, height, xorig, yorig, xmove, ymove, bitmap) wrapGlFunc(glBitmapxOES, width, height, xorig, yorig, xmove, ymove, bitmap)
#define glBlendBarrier() wrapGlFuncNoArgs(glBlendBarrier)
#define glBlendBarrierKHR() wrapGlFuncNoArgs(glBlendBarrierKHR)
#define glBlendBarrierNV() wrapGlFuncNoArgs(glBlendBarrierNV)
#define glBlendColor(red, green, blue, alpha) wrapGlFunc(glBlendColor, red, green, blue, alpha)
#define glBlendColorEXT(red, green, blue, alpha) wrapGlFunc(glBlendColorEXT, red, green, blue, alpha)
#define glBlendColorxOES(red, green, blue, alpha) wrapGlFunc(glBlendColorxOES, red, green, blue, alpha)
#define glBlendEquation(mode) wrapGlFunc(glBlendEquation, mode)
#define glBlendEquationEXT(mode) wrapGlFunc(glBlendEquationEXT, mode)
#define glBlendEquationIndexedAMD(buf, mode) wrapGlFunc(glBlendEquationIndexedAMD, buf, mode)
#define glBlendEquationOES(mode) wrapGlFunc(glBlendEquationOES, mode)
#define glBlendEquationSeparate(modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparate, modeRGB, modeAlpha)
#define glBlendEquationSeparateEXT(modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateEXT, modeRGB, modeAlpha)
#define glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateIndexedAMD, buf, modeRGB, modeAlpha)
#define glBlendEquationSeparateOES(modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateOES, modeRGB, modeAlpha)
#define glBlendEquationSeparatei(buf, modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparatei, buf, modeRGB, modeAlpha)
#define glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateiARB, buf, modeRGB, modeAlpha)
#define glBlendEquationSeparateiEXT(buf, modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateiEXT, buf, modeRGB, modeAlpha)
#define glBlendEquationSeparateiOES(buf, modeRGB, modeAlpha) wrapGlFunc(glBlendEquationSeparateiOES, buf, modeRGB, modeAlpha)
#define glBlendEquationi(buf, mode) wrapGlFunc(glBlendEquationi, buf, mode)
#define glBlendEquationiARB(buf, mode) wrapGlFunc(glBlendEquationiARB, buf, mode)
#define glBlendEquationiEXT(buf, mode) wrapGlFunc(glBlendEquationiEXT, buf, mode)
#define glBlendEquationiOES(buf, mode) wrapGlFunc(glBlendEquationiOES, buf, mode)
#define glBlendFunc(sfactor, dfactor) wrapGlFunc(glBlendFunc, sfactor, dfactor)
#define glBlendFuncIndexedAMD(buf, src, dst) wrapGlFunc(glBlendFuncIndexedAMD, buf, src, dst)
#define glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) wrapGlFunc(glBlendFuncSeparate, sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
#define glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) wrapGlFunc(glBlendFuncSeparateEXT, sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
#define glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha) wrapGlFunc(glBlendFuncSeparateINGR, sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha)
#define glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparateIndexedAMD, buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFuncSeparateOES(srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparateOES, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparatei, buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparateiARB, buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFuncSeparateiEXT(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparateiEXT, buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFuncSeparateiOES(buf, srcRGB, dstRGB, srcAlpha, dstAlpha) wrapGlFunc(glBlendFuncSeparateiOES, buf, srcRGB, dstRGB, srcAlpha, dstAlpha)
#define glBlendFunci(buf, src, dst) wrapGlFunc(glBlendFunci, buf, src, dst)
#define glBlendFunciARB(buf, src, dst) wrapGlFunc(glBlendFunciARB, buf, src, dst)
#define glBlendFunciEXT(buf, src, dst) wrapGlFunc(glBlendFunciEXT, buf, src, dst)
#define glBlendFunciOES(buf, src, dst) wrapGlFunc(glBlendFunciOES, buf, src, dst)
#define glBlendParameteriNV(pname, value) wrapGlFunc(glBlendParameteriNV, pname, value)
#define glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) wrapGlFunc(glBlitFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#define glBlitFramebufferANGLE(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) wrapGlFunc(glBlitFramebufferANGLE, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#define glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) wrapGlFunc(glBlitFramebufferEXT, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#define glBlitFramebufferNV(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) wrapGlFunc(glBlitFramebufferNV, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#define glBlitNamedFramebuffer(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) wrapGlFunc(glBlitNamedFramebuffer, readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter)
#define glBufferAddressRangeNV(pname, index, address, length) wrapGlFunc(glBufferAddressRangeNV, pname, index, address, length)
#define glBufferData(target, size, data, usage) wrapGlFunc(glBufferData, target, size, data, usage)
#define glBufferDataARB(target, size, data, usage) wrapGlFunc(glBufferDataARB, target, size, data, usage)
#define glBufferPageCommitmentARB(target, offset, size, commit) wrapGlFunc(glBufferPageCommitmentARB, target, offset, size, commit)
#define glBufferParameteriAPPLE(target, pname, param) wrapGlFunc(glBufferParameteriAPPLE, target, pname, param)
#define glBufferStorage(target, size, data, flags) wrapGlFunc(glBufferStorage, target, size, data, flags)
#define glBufferStorageEXT(target, size, data, flags) wrapGlFunc(glBufferStorageEXT, target, size, data, flags)
#define glBufferSubData(target, offset, size, data) wrapGlFunc(glBufferSubData, target, offset, size, data)
#define glBufferSubDataARB(target, offset, size, data) wrapGlFunc(glBufferSubDataARB, target, offset, size, data)
#define glCallCommandListNV(list) wrapGlFunc(glCallCommandListNV, list)
#define glCallList(list) wrapGlFunc(glCallList, list)
#define glCallLists(n, type, lists) wrapGlFunc(glCallLists, n, type, lists)
#define glClampColor(target, clamp) wrapGlFunc(glClampColor, target, clamp)
#define glClampColorARB(target, clamp) wrapGlFunc(glClampColorARB, target, clamp)
#define glClear(mask) wrapGlFunc(glClear, mask)
#define glClearAccum(red, green, blue, alpha) wrapGlFunc(glClearAccum, red, green, blue, alpha)
#define glClearAccumxOES(red, green, blue, alpha) wrapGlFunc(glClearAccumxOES, red, green, blue, alpha)
#define glClearBufferData(target, internalformat, format, type, data) wrapGlFunc(glClearBufferData, target, internalformat, format, type, data)
#define glClearBufferSubData(target, internalformat, offset, size, format, type, data) wrapGlFunc(glClearBufferSubData, target, internalformat, offset, size, format, type, data)
#define glClearBufferfi(buffer, drawbuffer, depth, stencil) wrapGlFunc(glClearBufferfi, buffer, drawbuffer, depth, stencil)
#define glClearBufferfv(buffer, drawbuffer, value) wrapGlFunc(glClearBufferfv, buffer, drawbuffer, value)
#define glClearBufferiv(buffer, drawbuffer, value) wrapGlFunc(glClearBufferiv, buffer, drawbuffer, value)
#define glClearBufferuiv(buffer, drawbuffer, value) wrapGlFunc(glClearBufferuiv, buffer, drawbuffer, value)
#define glClearColor(red, green, blue, alpha) wrapGlFunc(glClearColor, red, green, blue, alpha)
#define glClearColorIiEXT(red, green, blue, alpha) wrapGlFunc(glClearColorIiEXT, red, green, blue, alpha)
#define glClearColorIuiEXT(red, green, blue, alpha) wrapGlFunc(glClearColorIuiEXT, red, green, blue, alpha)
#define glClearColorx(red, green, blue, alpha) wrapGlFunc(glClearColorx, red, green, blue, alpha)
#define glClearColorxOES(red, green, blue, alpha) wrapGlFunc(glClearColorxOES, red, green, blue, alpha)
#define glClearDepth(depth) wrapGlFunc(glClearDepth, depth)
#define glClearDepthdNV(depth) wrapGlFunc(glClearDepthdNV, depth)
#define glClearDepthf(d) wrapGlFunc(glClearDepthf, d)
#define glClearDepthfOES(depth) wrapGlFunc(glClearDepthfOES, depth)
#define glClearDepthx(depth) wrapGlFunc(glClearDepthx, depth)
#define glClearDepthxOES(depth) wrapGlFunc(glClearDepthxOES, depth)
#define glClearIndex(c) wrapGlFunc(glClearIndex, c)
#define glClearNamedBufferData(buffer, internalformat, format, type, data) wrapGlFunc(glClearNamedBufferData, buffer, internalformat, format, type, data)
#define glClearNamedBufferDataEXT(buffer, internalformat, format, type, data) wrapGlFunc(glClearNamedBufferDataEXT, buffer, internalformat, format, type, data)
#define glClearNamedBufferSubData(buffer, internalformat, offset, size, format, type, data) wrapGlFunc(glClearNamedBufferSubData, buffer, internalformat, offset, size, format, type, data)
#define glClearNamedBufferSubDataEXT(buffer, internalformat, offset, size, format, type, data) wrapGlFunc(glClearNamedBufferSubDataEXT, buffer, internalformat, offset, size, format, type, data)
#define glClearNamedFramebufferfi(framebuffer, buffer, drawbuffer, depth, stencil) wrapGlFunc(glClearNamedFramebufferfi, framebuffer, buffer, drawbuffer, depth, stencil)
#define glClearNamedFramebufferfv(framebuffer, buffer, drawbuffer, value) wrapGlFunc(glClearNamedFramebufferfv, framebuffer, buffer, drawbuffer, value)
#define glClearNamedFramebufferiv(framebuffer, buffer, drawbuffer, value) wrapGlFunc(glClearNamedFramebufferiv, framebuffer, buffer, drawbuffer, value)
#define glClearNamedFramebufferuiv(framebuffer, buffer, drawbuffer, value) wrapGlFunc(glClearNamedFramebufferuiv, framebuffer, buffer, drawbuffer, value)
#define glClearPixelLocalStorageuiEXT(offset, n, values) wrapGlFunc(glClearPixelLocalStorageuiEXT, offset, n, values)
#define glClearStencil(s) wrapGlFunc(glClearStencil, s)
#define glClearTexImage(texture, level, format, type, data) wrapGlFunc(glClearTexImage, texture, level, format, type, data)
#define glClearTexImageEXT(texture, level, format, type, data) wrapGlFunc(glClearTexImageEXT, texture, level, format, type, data)
#define glClearTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data) wrapGlFunc(glClearTexSubImage, texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
#define glClearTexSubImageEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data) wrapGlFunc(glClearTexSubImageEXT, texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data)
#define glClientActiveTexture(texture) wrapGlFunc(glClientActiveTexture, texture)
#define glClientActiveTextureARB(texture) wrapGlFunc(glClientActiveTextureARB, texture)
#define glClientActiveVertexStreamATI(stream) wrapGlFunc(glClientActiveVertexStreamATI, stream)
#define glClientAttribDefaultEXT(mask) wrapGlFunc(glClientAttribDefaultEXT, mask)
#define glClipControl(origin, depth) wrapGlFunc(glClipControl, origin, depth)
#define glClipPlane(plane, equation) wrapGlFunc(glClipPlane, plane, equation)
#define glClipPlanef(p, eqn) wrapGlFunc(glClipPlanef, p, eqn)
#define glClipPlanefIMG(p, eqn) wrapGlFunc(glClipPlanefIMG, p, eqn)
#define glClipPlanefOES(plane, equation) wrapGlFunc(glClipPlanefOES, plane, equation)
#define glClipPlanex(plane, equation) wrapGlFunc(glClipPlanex, plane, equation)
#define glClipPlanexIMG(p, eqn) wrapGlFunc(glClipPlanexIMG, p, eqn)
#define glClipPlanexOES(plane, equation) wrapGlFunc(glClipPlanexOES, plane, equation)
#define glColor3b(red, green, blue) wrapGlFunc(glColor3b, red, green, blue)
#define glColor3bv(v) wrapGlFunc(glColor3bv, v)
#define glColor3d(red, green, blue) wrapGlFunc(glColor3d, red, green, blue)
#define glColor3dv(v) wrapGlFunc(glColor3dv, v)
#define glColor3f(red, green, blue) wrapGlFunc(glColor3f, red, green, blue)
#define glColor3fVertex3fSUN(r, g, b, x, y, z) wrapGlFunc(glColor3fVertex3fSUN, r, g, b, x, y, z)
#define glColor3fVertex3fvSUN(c, v) wrapGlFunc(glColor3fVertex3fvSUN, c, v)
#define glColor3fv(v) wrapGlFunc(glColor3fv, v)
#define glColor3hNV(red, green, blue) wrapGlFunc(glColor3hNV, red, green, blue)
#define glColor3hvNV(v) wrapGlFunc(glColor3hvNV, v)
#define glColor3i(red, green, blue) wrapGlFunc(glColor3i, red, green, blue)
#define glColor3iv(v) wrapGlFunc(glColor3iv, v)
#define glColor3s(red, green, blue) wrapGlFunc(glColor3s, red, green, blue)
#define glColor3sv(v) wrapGlFunc(glColor3sv, v)
#define glColor3ub(red, green, blue) wrapGlFunc(glColor3ub, red, green, blue)
#define glColor3ubv(v) wrapGlFunc(glColor3ubv, v)
#define glColor3ui(red, green, blue) wrapGlFunc(glColor3ui, red, green, blue)
#define glColor3uiv(v) wrapGlFunc(glColor3uiv, v)
#define glColor3us(red, green, blue) wrapGlFunc(glColor3us, red, green, blue)
#define glColor3usv(v) wrapGlFunc(glColor3usv, v)
#define glColor3xOES(red, green, blue) wrapGlFunc(glColor3xOES, red, green, blue)
#define glColor3xvOES(components) wrapGlFunc(glColor3xvOES, components)
#define glColor4b(red, green, blue, alpha) wrapGlFunc(glColor4b, red, green, blue, alpha)
#define glColor4bv(v) wrapGlFunc(glColor4bv, v)
#define glColor4d(red, green, blue, alpha) wrapGlFunc(glColor4d, red, green, blue, alpha)
#define glColor4dv(v) wrapGlFunc(glColor4dv, v)
#define glColor4f(red, green, blue, alpha) wrapGlFunc(glColor4f, red, green, blue, alpha)
#define glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z) wrapGlFunc(glColor4fNormal3fVertex3fSUN, r, g, b, a, nx, ny, nz, x, y, z)
#define glColor4fNormal3fVertex3fvSUN(c, n, v) wrapGlFunc(glColor4fNormal3fVertex3fvSUN, c, n, v)
#define glColor4fv(v) wrapGlFunc(glColor4fv, v)
#define glColor4hNV(red, green, blue, alpha) wrapGlFunc(glColor4hNV, red, green, blue, alpha)
#define glColor4hvNV(v) wrapGlFunc(glColor4hvNV, v)
#define glColor4i(red, green, blue, alpha) wrapGlFunc(glColor4i, red, green, blue, alpha)
#define glColor4iv(v) wrapGlFunc(glColor4iv, v)
#define glColor4s(red, green, blue, alpha) wrapGlFunc(glColor4s, red, green, blue, alpha)
#define glColor4sv(v) wrapGlFunc(glColor4sv, v)
#define glColor4ub(red, green, blue, alpha) wrapGlFunc(glColor4ub, red, green, blue, alpha)
#define glColor4ubVertex2fSUN(r, g, b, a, x, y) wrapGlFunc(glColor4ubVertex2fSUN, r, g, b, a, x, y)
#define glColor4ubVertex2fvSUN(c, v) wrapGlFunc(glColor4ubVertex2fvSUN, c, v)
#define glColor4ubVertex3fSUN(r, g, b, a, x, y, z) wrapGlFunc(glColor4ubVertex3fSUN, r, g, b, a, x, y, z)
#define glColor4ubVertex3fvSUN(c, v) wrapGlFunc(glColor4ubVertex3fvSUN, c, v)
#define glColor4ubv(v) wrapGlFunc(glColor4ubv, v)
#define glColor4ui(red, green, blue, alpha) wrapGlFunc(glColor4ui, red, green, blue, alpha)
#define glColor4uiv(v) wrapGlFunc(glColor4uiv, v)
#define glColor4us(red, green, blue, alpha) wrapGlFunc(glColor4us, red, green, blue, alpha)
#define glColor4usv(v) wrapGlFunc(glColor4usv, v)
#define glColor4x(red, green, blue, alpha) wrapGlFunc(glColor4x, red, green, blue, alpha)
#define glColor4xOES(red, green, blue, alpha) wrapGlFunc(glColor4xOES, red, green, blue, alpha)
#define glColor4xvOES(components) wrapGlFunc(glColor4xvOES, components)
#define glColorFormatNV(size, type, stride) wrapGlFunc(glColorFormatNV, size, type, stride)
#define glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod) wrapGlFunc(glColorFragmentOp1ATI, op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod)
#define glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod) wrapGlFunc(glColorFragmentOp2ATI, op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod)
#define glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod) wrapGlFunc(glColorFragmentOp3ATI, op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod)
#define glColorMask(red, green, blue, alpha) wrapGlFunc(glColorMask, red, green, blue, alpha)
#define glColorMaskIndexedEXT(index, r, g, b, a) wrapGlFunc(glColorMaskIndexedEXT, index, r, g, b, a)
#define glColorMaski(index, r, g, b, a) wrapGlFunc(glColorMaski, index, r, g, b, a)
#define glColorMaskiEXT(index, r, g, b, a) wrapGlFunc(glColorMaskiEXT, index, r, g, b, a)
#define glColorMaskiOES(index, r, g, b, a) wrapGlFunc(glColorMaskiOES, index, r, g, b, a)
#define glColorMaterial(face, mode) wrapGlFunc(glColorMaterial, face, mode)
#define glColorP3ui(type, color) wrapGlFunc(glColorP3ui, type, color)
#define glColorP3uiv(type, color) wrapGlFunc(glColorP3uiv, type, color)
#define glColorP4ui(type, color) wrapGlFunc(glColorP4ui, type, color)
#define glColorP4uiv(type, color) wrapGlFunc(glColorP4uiv, type, color)
#define glColorPointer(size, type, stride, pointer) wrapGlFunc(glColorPointer, size, type, stride, pointer)
#define glColorPointerEXT(size, type, stride, count, pointer) wrapGlFunc(glColorPointerEXT, size, type, stride, count, pointer)
#define glColorPointerListIBM(size, type, stride, pointer, ptrstride) wrapGlFunc(glColorPointerListIBM, size, type, stride, pointer, ptrstride)
#define glColorPointervINTEL(size, type, pointer) wrapGlFunc(glColorPointervINTEL, size, type, pointer)
#define glColorSubTable(target, start, count, format, type, data) wrapGlFunc(glColorSubTable, target, start, count, format, type, data)
#define glColorSubTableEXT(target, start, count, format, type, data) wrapGlFunc(glColorSubTableEXT, target, start, count, format, type, data)
#define glColorTable(target, internalformat, width, format, type, table) wrapGlFunc(glColorTable, target, internalformat, width, format, type, table)
#define glColorTableEXT(target, internalFormat, width, format, type, table) wrapGlFunc(glColorTableEXT, target, internalFormat, width, format, type, table)
#define glColorTableParameterfv(target, pname, params) wrapGlFunc(glColorTableParameterfv, target, pname, params)
#define glColorTableParameterfvSGI(target, pname, params) wrapGlFunc(glColorTableParameterfvSGI, target, pname, params)
#define glColorTableParameteriv(target, pname, params) wrapGlFunc(glColorTableParameteriv, target, pname, params)
#define glColorTableParameterivSGI(target, pname, params) wrapGlFunc(glColorTableParameterivSGI, target, pname, params)
#define glColorTableSGI(target, internalformat, width, format, type, table) wrapGlFunc(glColorTableSGI, target, internalformat, width, format, type, table)
#define glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage) wrapGlFunc(glCombinerInputNV, stage, portion, variable, input, mapping, componentUsage)
#define glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum) wrapGlFunc(glCombinerOutputNV, stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum)
#define glCombinerParameterfNV(pname, param) wrapGlFunc(glCombinerParameterfNV, pname, param)
#define glCombinerParameterfvNV(pname, params) wrapGlFunc(glCombinerParameterfvNV, pname, params)
#define glCombinerParameteriNV(pname, param) wrapGlFunc(glCombinerParameteriNV, pname, param)
#define glCombinerParameterivNV(pname, params) wrapGlFunc(glCombinerParameterivNV, pname, params)
#define glCombinerStageParameterfvNV(stage, pname, params) wrapGlFunc(glCombinerStageParameterfvNV, stage, pname, params)
#define glCommandListSegmentsNV(list, segments) wrapGlFunc(glCommandListSegmentsNV, list, segments)
#define glCompileCommandListNV(list) wrapGlFunc(glCompileCommandListNV, list)
#define glCompileShader(shader) wrapGlFunc(glCompileShader, shader)
#define glCompileShaderARB(shaderObj) wrapGlFunc(glCompileShaderARB, shaderObj)
#define glCompileShaderIncludeARB(shader, count, path, length) wrapGlFunc(glCompileShaderIncludeARB, shader, count, path, length)
#define glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, bits) wrapGlFunc(glCompressedMultiTexImage1DEXT, texunit, target, level, internalformat, width, border, imageSize, bits)
#define glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits) wrapGlFunc(glCompressedMultiTexImage2DEXT, texunit, target, level, internalformat, width, height, border, imageSize, bits)
#define glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits) wrapGlFunc(glCompressedMultiTexImage3DEXT, texunit, target, level, internalformat, width, height, depth, border, imageSize, bits)
#define glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, bits) wrapGlFunc(glCompressedMultiTexSubImage1DEXT, texunit, target, level, xoffset, width, format, imageSize, bits)
#define glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits) wrapGlFunc(glCompressedMultiTexSubImage2DEXT, texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
#define glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits) wrapGlFunc(glCompressedMultiTexSubImage3DEXT, texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
#define glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data) wrapGlFunc(glCompressedTexImage1D, target, level, internalformat, width, border, imageSize, data)
#define glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data) wrapGlFunc(glCompressedTexImage1DARB, target, level, internalformat, width, border, imageSize, data)
#define glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data) wrapGlFunc(glCompressedTexImage2D, target, level, internalformat, width, height, border, imageSize, data)
#define glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data) wrapGlFunc(glCompressedTexImage2DARB, target, level, internalformat, width, height, border, imageSize, data)
#define glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data) wrapGlFunc(glCompressedTexImage3D, target, level, internalformat, width, height, depth, border, imageSize, data)
#define glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data) wrapGlFunc(glCompressedTexImage3DARB, target, level, internalformat, width, height, depth, border, imageSize, data)
#define glCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data) wrapGlFunc(glCompressedTexImage3DOES, target, level, internalformat, width, height, depth, border, imageSize, data)
#define glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage1D, target, level, xoffset, width, format, imageSize, data)
#define glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage1DARB, target, level, xoffset, width, format, imageSize, data)
#define glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage2D, target, level, xoffset, yoffset, width, height, format, imageSize, data)
#define glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage2DARB, target, level, xoffset, yoffset, width, height, format, imageSize, data)
#define glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage3D, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
#define glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage3DARB, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
#define glCompressedTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) wrapGlFunc(glCompressedTexSubImage3DOES, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
#define glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits) wrapGlFunc(glCompressedTextureImage1DEXT, texture, target, level, internalformat, width, border, imageSize, bits)
#define glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits) wrapGlFunc(glCompressedTextureImage2DEXT, texture, target, level, internalformat, width, height, border, imageSize, bits)
#define glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits) wrapGlFunc(glCompressedTextureImage3DEXT, texture, target, level, internalformat, width, height, depth, border, imageSize, bits)
#define glCompressedTextureSubImage1D(texture, level, xoffset, width, format, imageSize, data) wrapGlFunc(glCompressedTextureSubImage1D, texture, level, xoffset, width, format, imageSize, data)
#define glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits) wrapGlFunc(glCompressedTextureSubImage1DEXT, texture, target, level, xoffset, width, format, imageSize, bits)
#define glCompressedTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, imageSize, data) wrapGlFunc(glCompressedTextureSubImage2D, texture, level, xoffset, yoffset, width, height, format, imageSize, data)
#define glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits) wrapGlFunc(glCompressedTextureSubImage2DEXT, texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits)
#define glCompressedTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) wrapGlFunc(glCompressedTextureSubImage3D, texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)
#define glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits) wrapGlFunc(glCompressedTextureSubImage3DEXT, texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits)
#define glConservativeRasterParameterfNV(pname, value) wrapGlFunc(glConservativeRasterParameterfNV, pname, value)
#define glConservativeRasterParameteriNV(pname, param) wrapGlFunc(glConservativeRasterParameteriNV, pname, param)
#define glConvolutionFilter1D(target, internalformat, width, format, type, image) wrapGlFunc(glConvolutionFilter1D, target, internalformat, width, format, type, image)
#define glConvolutionFilter1DEXT(target, internalformat, width, format, type, image) wrapGlFunc(glConvolutionFilter1DEXT, target, internalformat, width, format, type, image)
#define glConvolutionFilter2D(target, internalformat, width, height, format, type, image) wrapGlFunc(glConvolutionFilter2D, target, internalformat, width, height, format, type, image)
#define glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image) wrapGlFunc(glConvolutionFilter2DEXT, target, internalformat, width, height, format, type, image)
#define glConvolutionParameterf(target, pname, params) wrapGlFunc(glConvolutionParameterf, target, pname, params)
#define glConvolutionParameterfEXT(target, pname, params) wrapGlFunc(glConvolutionParameterfEXT, target, pname, params)
#define glConvolutionParameterfv(target, pname, params) wrapGlFunc(glConvolutionParameterfv, target, pname, params)
#define glConvolutionParameterfvEXT(target, pname, params) wrapGlFunc(glConvolutionParameterfvEXT, target, pname, params)
#define glConvolutionParameteri(target, pname, params) wrapGlFunc(glConvolutionParameteri, target, pname, params)
#define glConvolutionParameteriEXT(target, pname, params) wrapGlFunc(glConvolutionParameteriEXT, target, pname, params)
#define glConvolutionParameteriv(target, pname, params) wrapGlFunc(glConvolutionParameteriv, target, pname, params)
#define glConvolutionParameterivEXT(target, pname, params) wrapGlFunc(glConvolutionParameterivEXT, target, pname, params)
#define glConvolutionParameterxOES(target, pname, param) wrapGlFunc(glConvolutionParameterxOES, target, pname, param)
#define glConvolutionParameterxvOES(target, pname, params) wrapGlFunc(glConvolutionParameterxvOES, target, pname, params)
#define glCopyBufferSubData(readTarget, writeTarget, readOffset, writeOffset, size) wrapGlFunc(glCopyBufferSubData, readTarget, writeTarget, readOffset, writeOffset, size)
#define glCopyBufferSubDataNV(readTarget, writeTarget, readOffset, writeOffset, size) wrapGlFunc(glCopyBufferSubDataNV, readTarget, writeTarget, readOffset, writeOffset, size)
#define glCopyColorSubTable(target, start, x, y, width) wrapGlFunc(glCopyColorSubTable, target, start, x, y, width)
#define glCopyColorSubTableEXT(target, start, x, y, width) wrapGlFunc(glCopyColorSubTableEXT, target, start, x, y, width)
#define glCopyColorTable(target, internalformat, x, y, width) wrapGlFunc(glCopyColorTable, target, internalformat, x, y, width)
#define glCopyColorTableSGI(target, internalformat, x, y, width) wrapGlFunc(glCopyColorTableSGI, target, internalformat, x, y, width)
#define glCopyConvolutionFilter1D(target, internalformat, x, y, width) wrapGlFunc(glCopyConvolutionFilter1D, target, internalformat, x, y, width)
#define glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width) wrapGlFunc(glCopyConvolutionFilter1DEXT, target, internalformat, x, y, width)
#define glCopyConvolutionFilter2D(target, internalformat, x, y, width, height) wrapGlFunc(glCopyConvolutionFilter2D, target, internalformat, x, y, width, height)
#define glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height) wrapGlFunc(glCopyConvolutionFilter2DEXT, target, internalformat, x, y, width, height)
#define glCopyImageSubData(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth) wrapGlFunc(glCopyImageSubData, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
#define glCopyImageSubDataEXT(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth) wrapGlFunc(glCopyImageSubDataEXT, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
#define glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth) wrapGlFunc(glCopyImageSubDataNV, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth)
#define glCopyImageSubDataOES(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth) wrapGlFunc(glCopyImageSubDataOES, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth)
#define glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border) wrapGlFunc(glCopyMultiTexImage1DEXT, texunit, target, level, internalformat, x, y, width, border)
#define glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border) wrapGlFunc(glCopyMultiTexImage2DEXT, texunit, target, level, internalformat, x, y, width, height, border)
#define glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width) wrapGlFunc(glCopyMultiTexSubImage1DEXT, texunit, target, level, xoffset, x, y, width)
#define glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height) wrapGlFunc(glCopyMultiTexSubImage2DEXT, texunit, target, level, xoffset, yoffset, x, y, width, height)
#define glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyMultiTexSubImage3DEXT, texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCopyNamedBufferSubData(readBuffer, writeBuffer, readOffset, writeOffset, size) wrapGlFunc(glCopyNamedBufferSubData, readBuffer, writeBuffer, readOffset, writeOffset, size)
#define glCopyPathNV(resultPath, srcPath) wrapGlFunc(glCopyPathNV, resultPath, srcPath)
#define glCopyPixels(x, y, width, height, type) wrapGlFunc(glCopyPixels, x, y, width, height, type)
#define glCopyTexImage1D(target, level, internalformat, x, y, width, border) wrapGlFunc(glCopyTexImage1D, target, level, internalformat, x, y, width, border)
#define glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border) wrapGlFunc(glCopyTexImage1DEXT, target, level, internalformat, x, y, width, border)
#define glCopyTexImage2D(target, level, internalformat, x, y, width, height, border) wrapGlFunc(glCopyTexImage2D, target, level, internalformat, x, y, width, height, border)
#define glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border) wrapGlFunc(glCopyTexImage2DEXT, target, level, internalformat, x, y, width, height, border)
#define glCopyTexSubImage1D(target, level, xoffset, x, y, width) wrapGlFunc(glCopyTexSubImage1D, target, level, xoffset, x, y, width)
#define glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width) wrapGlFunc(glCopyTexSubImage1DEXT, target, level, xoffset, x, y, width)
#define glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height) wrapGlFunc(glCopyTexSubImage2D, target, level, xoffset, yoffset, x, y, width, height)
#define glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height) wrapGlFunc(glCopyTexSubImage2DEXT, target, level, xoffset, yoffset, x, y, width, height)
#define glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyTexSubImage3D, target, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyTexSubImage3DEXT, target, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCopyTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyTexSubImage3DOES, target, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border) wrapGlFunc(glCopyTextureImage1DEXT, texture, target, level, internalformat, x, y, width, border)
#define glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border) wrapGlFunc(glCopyTextureImage2DEXT, texture, target, level, internalformat, x, y, width, height, border)
#define glCopyTextureLevelsAPPLE(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount) wrapGlFunc(glCopyTextureLevelsAPPLE, destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount)
#define glCopyTextureSubImage1D(texture, level, xoffset, x, y, width) wrapGlFunc(glCopyTextureSubImage1D, texture, level, xoffset, x, y, width)
#define glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width) wrapGlFunc(glCopyTextureSubImage1DEXT, texture, target, level, xoffset, x, y, width)
#define glCopyTextureSubImage2D(texture, level, xoffset, yoffset, x, y, width, height) wrapGlFunc(glCopyTextureSubImage2D, texture, level, xoffset, yoffset, x, y, width, height)
#define glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height) wrapGlFunc(glCopyTextureSubImage2DEXT, texture, target, level, xoffset, yoffset, x, y, width, height)
#define glCopyTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyTextureSubImage3D, texture, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height) wrapGlFunc(glCopyTextureSubImage3DEXT, texture, target, level, xoffset, yoffset, zoffset, x, y, width, height)
#define glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues) wrapGlFunc(glCoverFillPathInstancedNV, numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
#define glCoverFillPathNV(path, coverMode) wrapGlFunc(glCoverFillPathNV, path, coverMode)
#define glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues) wrapGlFunc(glCoverStrokePathInstancedNV, numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues)
#define glCoverStrokePathNV(path, coverMode) wrapGlFunc(glCoverStrokePathNV, path, coverMode)
#define glCoverageMaskNV(mask) wrapGlFunc(glCoverageMaskNV, mask)
#define glCoverageModulationNV(components) wrapGlFunc(glCoverageModulationNV, components)
#define glCoverageModulationTableNV(n, v) wrapGlFunc(glCoverageModulationTableNV, n, v)
#define glCoverageOperationNV(operation) wrapGlFunc(glCoverageOperationNV, operation)
#define glCreateBuffers(n, buffers) wrapGlFunc(glCreateBuffers, n, buffers)
#define glCreateCommandListsNV(n, lists) wrapGlFunc(glCreateCommandListsNV, n, lists)
#define glCreateFramebuffers(n, framebuffers) wrapGlFunc(glCreateFramebuffers, n, framebuffers)
#define glCreatePerfQueryINTEL(queryId, queryHandle) wrapGlFunc(glCreatePerfQueryINTEL, queryId, queryHandle)
#define glCreateProgramPipelines(n, pipelines) wrapGlFunc(glCreateProgramPipelines, n, pipelines)
#define glCreateQueries(target, n, ids) wrapGlFunc(glCreateQueries, target, n, ids)
#define glCreateRenderbuffers(n, renderbuffers) wrapGlFunc(glCreateRenderbuffers, n, renderbuffers)
#define glCreateSamplers(n, samplers) wrapGlFunc(glCreateSamplers, n, samplers)
#define glCreateStatesNV(n, states) wrapGlFunc(glCreateStatesNV, n, states)
#define glCreateTextures(target, n, textures) wrapGlFunc(glCreateTextures, target, n, textures)
#define glCreateTransformFeedbacks(n, ids) wrapGlFunc(glCreateTransformFeedbacks, n, ids)
#define glCreateVertexArrays(n, arrays) wrapGlFunc(glCreateVertexArrays, n, arrays)
#define glCullFace(mode) wrapGlFunc(glCullFace, mode)
#define glCullParameterdvEXT(pname, params) wrapGlFunc(glCullParameterdvEXT, pname, params)
#define glCullParameterfvEXT(pname, params) wrapGlFunc(glCullParameterfvEXT, pname, params)
#define glCurrentPaletteMatrixARB(index) wrapGlFunc(glCurrentPaletteMatrixARB, index)
#define glCurrentPaletteMatrixOES(matrixpaletteindex) wrapGlFunc(glCurrentPaletteMatrixOES, matrixpaletteindex)
#define glDebugMessageCallback(callback, userParam) wrapGlFunc(glDebugMessageCallback, callback, userParam)
#define glDebugMessageCallbackAMD(callback, userParam) wrapGlFunc(glDebugMessageCallbackAMD, callback, userParam)
#define glDebugMessageCallbackARB(callback, userParam) wrapGlFunc(glDebugMessageCallbackARB, callback, userParam)
#define glDebugMessageCallbackKHR(callback, userParam) wrapGlFunc(glDebugMessageCallbackKHR, callback, userParam)
#define glDebugMessageControl(source, type, severity, count, ids, enabled) wrapGlFunc(glDebugMessageControl, source, type, severity, count, ids, enabled)
#define glDebugMessageControlARB(source, type, severity, count, ids, enabled) wrapGlFunc(glDebugMessageControlARB, source, type, severity, count, ids, enabled)
#define glDebugMessageControlKHR(source, type, severity, count, ids, enabled) wrapGlFunc(glDebugMessageControlKHR, source, type, severity, count, ids, enabled)
#define glDebugMessageEnableAMD(category, severity, count, ids, enabled) wrapGlFunc(glDebugMessageEnableAMD, category, severity, count, ids, enabled)
#define glDebugMessageInsert(source, type, id, severity, length, buf) wrapGlFunc(glDebugMessageInsert, source, type, id, severity, length, buf)
#define glDebugMessageInsertAMD(category, severity, id, length, buf) wrapGlFunc(glDebugMessageInsertAMD, category, severity, id, length, buf)
#define glDebugMessageInsertARB(source, type, id, severity, length, buf) wrapGlFunc(glDebugMessageInsertARB, source, type, id, severity, length, buf)
#define glDebugMessageInsertKHR(source, type, id, severity, length, buf) wrapGlFunc(glDebugMessageInsertKHR, source, type, id, severity, length, buf)
#define glDeformSGIX(mask) wrapGlFunc(glDeformSGIX, mask)
#define glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points) wrapGlFunc(glDeformationMap3dSGIX, target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
#define glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points) wrapGlFunc(glDeformationMap3fSGIX, target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points)
#define glDeleteAsyncMarkersSGIX(marker, range) wrapGlFunc(glDeleteAsyncMarkersSGIX, marker, range)
#define glDeleteBuffers(n, buffers) wrapGlFunc(glDeleteBuffers, n, buffers)
#define glDeleteBuffersARB(n, buffers) wrapGlFunc(glDeleteBuffersARB, n, buffers)
#define glDeleteCommandListsNV(n, lists) wrapGlFunc(glDeleteCommandListsNV, n, lists)
#define glDeleteFencesAPPLE(n, fences) wrapGlFunc(glDeleteFencesAPPLE, n, fences)
#define glDeleteFencesNV(n, fences) wrapGlFunc(glDeleteFencesNV, n, fences)
#define glDeleteFragmentShaderATI(id) wrapGlFunc(glDeleteFragmentShaderATI, id)
#define glDeleteFramebuffers(n, framebuffers) wrapGlFunc(glDeleteFramebuffers, n, framebuffers)
#define glDeleteFramebuffersEXT(n, framebuffers) wrapGlFunc(glDeleteFramebuffersEXT, n, framebuffers)
#define glDeleteFramebuffersOES(n, framebuffers) wrapGlFunc(glDeleteFramebuffersOES, n, framebuffers)
#define glDeleteLists(list, range) wrapGlFunc(glDeleteLists, list, range)
#define glDeleteNamedStringARB(namelen, name) wrapGlFunc(glDeleteNamedStringARB, namelen, name)
#define glDeleteNamesAMD(identifier, num, names) wrapGlFunc(glDeleteNamesAMD, identifier, num, names)
#define glDeleteObjectARB(obj) wrapGlFunc(glDeleteObjectARB, obj)
#define glDeleteOcclusionQueriesNV(n, ids) wrapGlFunc(glDeleteOcclusionQueriesNV, n, ids)
#define glDeletePathsNV(path, range) wrapGlFunc(glDeletePathsNV, path, range)
#define glDeletePerfMonitorsAMD(n, monitors) wrapGlFunc(glDeletePerfMonitorsAMD, n, monitors)
#define glDeletePerfQueryINTEL(queryHandle) wrapGlFunc(glDeletePerfQueryINTEL, queryHandle)
#define glDeleteProgram(program) wrapGlFunc(glDeleteProgram, program)
#define glDeleteProgramPipelines(n, pipelines) wrapGlFunc(glDeleteProgramPipelines, n, pipelines)
#define glDeleteProgramPipelinesEXT(n, pipelines) wrapGlFunc(glDeleteProgramPipelinesEXT, n, pipelines)
#define glDeleteProgramsARB(n, programs) wrapGlFunc(glDeleteProgramsARB, n, programs)
#define glDeleteProgramsNV(n, programs) wrapGlFunc(glDeleteProgramsNV, n, programs)
#define glDeleteQueries(n, ids) wrapGlFunc(glDeleteQueries, n, ids)
#define glDeleteQueriesARB(n, ids) wrapGlFunc(glDeleteQueriesARB, n, ids)
#define glDeleteQueriesEXT(n, ids) wrapGlFunc(glDeleteQueriesEXT, n, ids)
#define glDeleteRenderbuffers(n, renderbuffers) wrapGlFunc(glDeleteRenderbuffers, n, renderbuffers)
#define glDeleteRenderbuffersEXT(n, renderbuffers) wrapGlFunc(glDeleteRenderbuffersEXT, n, renderbuffers)
#define glDeleteRenderbuffersOES(n, renderbuffers) wrapGlFunc(glDeleteRenderbuffersOES, n, renderbuffers)
#define glDeleteSamplers(count, samplers) wrapGlFunc(glDeleteSamplers, count, samplers)
#define glDeleteShader(shader) wrapGlFunc(glDeleteShader, shader)
#define glDeleteStatesNV(n, states) wrapGlFunc(glDeleteStatesNV, n, states)
#define glDeleteSync(sync) wrapGlFunc(glDeleteSync, sync)
#define glDeleteSyncAPPLE(sync) wrapGlFunc(glDeleteSyncAPPLE, sync)
#define glDeleteTextures(n, textures) wrapGlFunc(glDeleteTextures, n, textures)
#define glDeleteTexturesEXT(n, textures) wrapGlFunc(glDeleteTexturesEXT, n, textures)
#define glDeleteTransformFeedbacks(n, ids) wrapGlFunc(glDeleteTransformFeedbacks, n, ids)
#define glDeleteTransformFeedbacksNV(n, ids) wrapGlFunc(glDeleteTransformFeedbacksNV, n, ids)
#define glDeleteVertexArrays(n, arrays) wrapGlFunc(glDeleteVertexArrays, n, arrays)
#define glDeleteVertexArraysAPPLE(n, arrays) wrapGlFunc(glDeleteVertexArraysAPPLE, n, arrays)
#define glDeleteVertexArraysOES(n, arrays) wrapGlFunc(glDeleteVertexArraysOES, n, arrays)
#define glDeleteVertexShaderEXT(id) wrapGlFunc(glDeleteVertexShaderEXT, id)
#define glDepthBoundsEXT(zmin, zmax) wrapGlFunc(glDepthBoundsEXT, zmin, zmax)
#define glDepthBoundsdNV(zmin, zmax) wrapGlFunc(glDepthBoundsdNV, zmin, zmax)
#define glDepthFunc(func) wrapGlFunc(glDepthFunc, func)
#define glDepthMask(flag) wrapGlFunc(glDepthMask, flag)
#define glDepthRange(near, far) wrapGlFunc(glDepthRange, near, far)
#define glDepthRangeArrayfvNV(first, count, v) wrapGlFunc(glDepthRangeArrayfvNV, first, count, v)
#define glDepthRangeArrayfvOES(first, count, v) wrapGlFunc(glDepthRangeArrayfvOES, first, count, v)
#define glDepthRangeArrayv(first, count, v) wrapGlFunc(glDepthRangeArrayv, first, count, v)
#define glDepthRangeIndexed(index, n, f) wrapGlFunc(glDepthRangeIndexed, index, n, f)
#define glDepthRangeIndexedfNV(index, n, f) wrapGlFunc(glDepthRangeIndexedfNV, index, n, f)
#define glDepthRangeIndexedfOES(index, n, f) wrapGlFunc(glDepthRangeIndexedfOES, index, n, f)
#define glDepthRangedNV(zNear, zFar) wrapGlFunc(glDepthRangedNV, zNear, zFar)
#define glDepthRangef(n, f) wrapGlFunc(glDepthRangef, n, f)
#define glDepthRangefOES(n, f) wrapGlFunc(glDepthRangefOES, n, f)
#define glDepthRangex(n, f) wrapGlFunc(glDepthRangex, n, f)
#define glDepthRangexOES(n, f) wrapGlFunc(glDepthRangexOES, n, f)
#define glDetachObjectARB(containerObj, attachedObj) wrapGlFunc(glDetachObjectARB, containerObj, attachedObj)
#define glDetachShader(program, shader) wrapGlFunc(glDetachShader, program, shader)
#define glDetailTexFuncSGIS(target, n, points) wrapGlFunc(glDetailTexFuncSGIS, target, n, points)
#define glDisable(cap) wrapGlFunc(glDisable, cap)
#define glDisableClientState(array) wrapGlFunc(glDisableClientState, array)
#define glDisableClientStateIndexedEXT(array, index) wrapGlFunc(glDisableClientStateIndexedEXT, array, index)
#define glDisableClientStateiEXT(array, index) wrapGlFunc(glDisableClientStateiEXT, array, index)
#define glDisableDriverControlQCOM(driverControl) wrapGlFunc(glDisableDriverControlQCOM, driverControl)
#define glDisableIndexedEXT(target, index) wrapGlFunc(glDisableIndexedEXT, target, index)
#define glDisableVariantClientStateEXT(id) wrapGlFunc(glDisableVariantClientStateEXT, id)
#define glDisableVertexArrayAttrib(vaobj, index) wrapGlFunc(glDisableVertexArrayAttrib, vaobj, index)
#define glDisableVertexArrayAttribEXT(vaobj, index) wrapGlFunc(glDisableVertexArrayAttribEXT, vaobj, index)
#define glDisableVertexArrayEXT(vaobj, array) wrapGlFunc(glDisableVertexArrayEXT, vaobj, array)
#define glDisableVertexAttribAPPLE(index, pname) wrapGlFunc(glDisableVertexAttribAPPLE, index, pname)
#define glDisableVertexAttribArray(index) wrapGlFunc(glDisableVertexAttribArray, index)
#define glDisableVertexAttribArrayARB(index) wrapGlFunc(glDisableVertexAttribArrayARB, index)
#define glDisablei(target, index) wrapGlFunc(glDisablei, target, index)
#define glDisableiEXT(target, index) wrapGlFunc(glDisableiEXT, target, index)
#define glDisableiNV(target, index) wrapGlFunc(glDisableiNV, target, index)
#define glDisableiOES(target, index) wrapGlFunc(glDisableiOES, target, index)
#define glDiscardFramebufferEXT(target, numAttachments, attachments) wrapGlFunc(glDiscardFramebufferEXT, target, numAttachments, attachments)
#define glDispatchCompute(num_groups_x, num_groups_y, num_groups_z) wrapGlFunc(glDispatchCompute, num_groups_x, num_groups_y, num_groups_z)
#define glDispatchComputeGroupSizeARB(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z) wrapGlFunc(glDispatchComputeGroupSizeARB, num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z)
#define glDispatchComputeIndirect(indirect) wrapGlFunc(glDispatchComputeIndirect, indirect)
#define glDrawArrays(mode, first, count) wrapGlFunc(glDrawArrays, mode, first, count)
#define glDrawArraysEXT(mode, first, count) wrapGlFunc(glDrawArraysEXT, mode, first, count)
#define glDrawArraysIndirect(mode, indirect) wrapGlFunc(glDrawArraysIndirect, mode, indirect)
#define glDrawArraysInstanced(mode, first, count, instancecount) wrapGlFunc(glDrawArraysInstanced, mode, first, count, instancecount)
#define glDrawArraysInstancedANGLE(mode, first, count, primcount) wrapGlFunc(glDrawArraysInstancedANGLE, mode, first, count, primcount)
#define glDrawArraysInstancedARB(mode, first, count, primcount) wrapGlFunc(glDrawArraysInstancedARB, mode, first, count, primcount)
#define glDrawArraysInstancedBaseInstance(mode, first, count, instancecount, baseinstance) wrapGlFunc(glDrawArraysInstancedBaseInstance, mode, first, count, instancecount, baseinstance)
#define glDrawArraysInstancedBaseInstanceEXT(mode, first, count, instancecount, baseinstance) wrapGlFunc(glDrawArraysInstancedBaseInstanceEXT, mode, first, count, instancecount, baseinstance)
#define glDrawArraysInstancedEXT(mode, start, count, primcount) wrapGlFunc(glDrawArraysInstancedEXT, mode, start, count, primcount)
#define glDrawArraysInstancedNV(mode, first, count, primcount) wrapGlFunc(glDrawArraysInstancedNV, mode, first, count, primcount)
#define glDrawBuffer(buf) wrapGlFunc(glDrawBuffer, buf)
#define glDrawBuffers(n, bufs) wrapGlFunc(glDrawBuffers, n, bufs)
#define glDrawBuffersARB(n, bufs) wrapGlFunc(glDrawBuffersARB, n, bufs)
#define glDrawBuffersATI(n, bufs) wrapGlFunc(glDrawBuffersATI, n, bufs)
#define glDrawBuffersEXT(n, bufs) wrapGlFunc(glDrawBuffersEXT, n, bufs)
#define glDrawBuffersIndexedEXT(n, location, indices) wrapGlFunc(glDrawBuffersIndexedEXT, n, location, indices)
#define glDrawBuffersNV(n, bufs) wrapGlFunc(glDrawBuffersNV, n, bufs)
#define glDrawCommandsAddressNV(primitiveMode, indirects, sizes, count) wrapGlFunc(glDrawCommandsAddressNV, primitiveMode, indirects, sizes, count)
#define glDrawCommandsNV(primitiveMode, buffer, indirects, sizes, count) wrapGlFunc(glDrawCommandsNV, primitiveMode, buffer, indirects, sizes, count)
#define glDrawCommandsStatesAddressNV(indirects, sizes, states, fbos, count) wrapGlFunc(glDrawCommandsStatesAddressNV, indirects, sizes, states, fbos, count)
#define glDrawCommandsStatesNV(buffer, indirects, sizes, states, fbos, count) wrapGlFunc(glDrawCommandsStatesNV, buffer, indirects, sizes, states, fbos, count)
#define glDrawElementArrayAPPLE(mode, first, count) wrapGlFunc(glDrawElementArrayAPPLE, mode, first, count)
#define glDrawElementArrayATI(mode, count) wrapGlFunc(glDrawElementArrayATI, mode, count)
#define glDrawElements(mode, count, type, indices) wrapGlFunc(glDrawElements, mode, count, type, indices)
#define glDrawElementsBaseVertex(mode, count, type, indices, basevertex) wrapGlFunc(glDrawElementsBaseVertex, mode, count, type, indices, basevertex)
#define glDrawElementsBaseVertexEXT(mode, count, type, indices, basevertex) wrapGlFunc(glDrawElementsBaseVertexEXT, mode, count, type, indices, basevertex)
#define glDrawElementsBaseVertexOES(mode, count, type, indices, basevertex) wrapGlFunc(glDrawElementsBaseVertexOES, mode, count, type, indices, basevertex)
#define glDrawElementsIndirect(mode, type, indirect) wrapGlFunc(glDrawElementsIndirect, mode, type, indirect)
#define glDrawElementsInstanced(mode, count, type, indices, instancecount) wrapGlFunc(glDrawElementsInstanced, mode, count, type, indices, instancecount)
#define glDrawElementsInstancedANGLE(mode, count, type, indices, primcount) wrapGlFunc(glDrawElementsInstancedANGLE, mode, count, type, indices, primcount)
#define glDrawElementsInstancedARB(mode, count, type, indices, primcount) wrapGlFunc(glDrawElementsInstancedARB, mode, count, type, indices, primcount)
#define glDrawElementsInstancedBaseInstance(mode, count, type, indices, instancecount, baseinstance) wrapGlFunc(glDrawElementsInstancedBaseInstance, mode, count, type, indices, instancecount, baseinstance)
#define glDrawElementsInstancedBaseInstanceEXT(mode, count, type, indices, instancecount, baseinstance) wrapGlFunc(glDrawElementsInstancedBaseInstanceEXT, mode, count, type, indices, instancecount, baseinstance)
#define glDrawElementsInstancedBaseVertex(mode, count, type, indices, instancecount, basevertex) wrapGlFunc(glDrawElementsInstancedBaseVertex, mode, count, type, indices, instancecount, basevertex)
#define glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, instancecount, basevertex, baseinstance) wrapGlFunc(glDrawElementsInstancedBaseVertexBaseInstance, mode, count, type, indices, instancecount, basevertex, baseinstance)
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT(mode, count, type, indices, instancecount, basevertex, baseinstance) wrapGlFunc(glDrawElementsInstancedBaseVertexBaseInstanceEXT, mode, count, type, indices, instancecount, basevertex, baseinstance)
#define glDrawElementsInstancedBaseVertexEXT(mode, count, type, indices, instancecount, basevertex) wrapGlFunc(glDrawElementsInstancedBaseVertexEXT, mode, count, type, indices, instancecount, basevertex)
#define glDrawElementsInstancedBaseVertexOES(mode, count, type, indices, instancecount, basevertex) wrapGlFunc(glDrawElementsInstancedBaseVertexOES, mode, count, type, indices, instancecount, basevertex)
#define glDrawElementsInstancedEXT(mode, count, type, indices, primcount) wrapGlFunc(glDrawElementsInstancedEXT, mode, count, type, indices, primcount)
#define glDrawElementsInstancedNV(mode, count, type, indices, primcount) wrapGlFunc(glDrawElementsInstancedNV, mode, count, type, indices, primcount)
#define glDrawMeshArraysSUN(mode, first, count, width) wrapGlFunc(glDrawMeshArraysSUN, mode, first, count, width)
#define glDrawPixels(width, height, format, type, pixels) wrapGlFunc(glDrawPixels, width, height, format, type, pixels)
#define glDrawRangeElementArrayAPPLE(mode, start, end, first, count) wrapGlFunc(glDrawRangeElementArrayAPPLE, mode, start, end, first, count)
#define glDrawRangeElementArrayATI(mode, start, end, count) wrapGlFunc(glDrawRangeElementArrayATI, mode, start, end, count)
#define glDrawRangeElements(mode, start, end, count, type, indices) wrapGlFunc(glDrawRangeElements, mode, start, end, count, type, indices)
#define glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex) wrapGlFunc(glDrawRangeElementsBaseVertex, mode, start, end, count, type, indices, basevertex)
#define glDrawRangeElementsBaseVertexEXT(mode, start, end, count, type, indices, basevertex) wrapGlFunc(glDrawRangeElementsBaseVertexEXT, mode, start, end, count, type, indices, basevertex)
#define glDrawRangeElementsBaseVertexOES(mode, start, end, count, type, indices, basevertex) wrapGlFunc(glDrawRangeElementsBaseVertexOES, mode, start, end, count, type, indices, basevertex)
#define glDrawRangeElementsEXT(mode, start, end, count, type, indices) wrapGlFunc(glDrawRangeElementsEXT, mode, start, end, count, type, indices)
#define glDrawTexfOES(x, y, z, width, height) wrapGlFunc(glDrawTexfOES, x, y, z, width, height)
#define glDrawTexfvOES(coords) wrapGlFunc(glDrawTexfvOES, coords)
#define glDrawTexiOES(x, y, z, width, height) wrapGlFunc(glDrawTexiOES, x, y, z, width, height)
#define glDrawTexivOES(coords) wrapGlFunc(glDrawTexivOES, coords)
#define glDrawTexsOES(x, y, z, width, height) wrapGlFunc(glDrawTexsOES, x, y, z, width, height)
#define glDrawTexsvOES(coords) wrapGlFunc(glDrawTexsvOES, coords)
#define glDrawTextureNV(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1) wrapGlFunc(glDrawTextureNV, texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1)
#define glDrawTexxOES(x, y, z, width, height) wrapGlFunc(glDrawTexxOES, x, y, z, width, height)
#define glDrawTexxvOES(coords) wrapGlFunc(glDrawTexxvOES, coords)
#define glDrawTransformFeedback(mode, id) wrapGlFunc(glDrawTransformFeedback, mode, id)
#define glDrawTransformFeedbackEXT(mode, id) wrapGlFunc(glDrawTransformFeedbackEXT, mode, id)
#define glDrawTransformFeedbackInstanced(mode, id, instancecount) wrapGlFunc(glDrawTransformFeedbackInstanced, mode, id, instancecount)
#define glDrawTransformFeedbackInstancedEXT(mode, id, instancecount) wrapGlFunc(glDrawTransformFeedbackInstancedEXT, mode, id, instancecount)
#define glDrawTransformFeedbackNV(mode, id) wrapGlFunc(glDrawTransformFeedbackNV, mode, id)
#define glDrawTransformFeedbackStream(mode, id, stream) wrapGlFunc(glDrawTransformFeedbackStream, mode, id, stream)
#define glDrawTransformFeedbackStreamInstanced(mode, id, stream, instancecount) wrapGlFunc(glDrawTransformFeedbackStreamInstanced, mode, id, stream, instancecount)
#define glEGLImageTargetRenderbufferStorageOES(target, image) wrapGlFunc(glEGLImageTargetRenderbufferStorageOES, target, image)
#define glEGLImageTargetTexture2DOES(target, image) wrapGlFunc(glEGLImageTargetTexture2DOES, target, image)
#define glEdgeFlag(flag) wrapGlFunc(glEdgeFlag, flag)
#define glEdgeFlagFormatNV(stride) wrapGlFunc(glEdgeFlagFormatNV, stride)
#define glEdgeFlagPointer(stride, pointer) wrapGlFunc(glEdgeFlagPointer, stride, pointer)
#define glEdgeFlagPointerEXT(stride, count, pointer) wrapGlFunc(glEdgeFlagPointerEXT, stride, count, pointer)
#define glEdgeFlagPointerListIBM(stride, pointer, ptrstride) wrapGlFunc(glEdgeFlagPointerListIBM, stride, pointer, ptrstride)
#define glEdgeFlagv(flag) wrapGlFunc(glEdgeFlagv, flag)
#define glElementPointerAPPLE(type, pointer) wrapGlFunc(glElementPointerAPPLE, type, pointer)
#define glElementPointerATI(type, pointer) wrapGlFunc(glElementPointerATI, type, pointer)
#define glEnable(cap) wrapGlFunc(glEnable, cap)
#define glEnableClientState(array) wrapGlFunc(glEnableClientState, array)
#define glEnableClientStateIndexedEXT(array, index) wrapGlFunc(glEnableClientStateIndexedEXT, array, index)
#define glEnableClientStateiEXT(array, index) wrapGlFunc(glEnableClientStateiEXT, array, index)
#define glEnableDriverControlQCOM(driverControl) wrapGlFunc(glEnableDriverControlQCOM, driverControl)
#define glEnableIndexedEXT(target, index) wrapGlFunc(glEnableIndexedEXT, target, index)
#define glEnableVariantClientStateEXT(id) wrapGlFunc(glEnableVariantClientStateEXT, id)
#define glEnableVertexArrayAttrib(vaobj, index) wrapGlFunc(glEnableVertexArrayAttrib, vaobj, index)
#define glEnableVertexArrayAttribEXT(vaobj, index) wrapGlFunc(glEnableVertexArrayAttribEXT, vaobj, index)
#define glEnableVertexArrayEXT(vaobj, array) wrapGlFunc(glEnableVertexArrayEXT, vaobj, array)
#define glEnableVertexAttribAPPLE(index, pname) wrapGlFunc(glEnableVertexAttribAPPLE, index, pname)
#define glEnableVertexAttribArray(index) wrapGlFunc(glEnableVertexAttribArray, index)
#define glEnableVertexAttribArrayARB(index) wrapGlFunc(glEnableVertexAttribArrayARB, index)
#define glEnablei(target, index) wrapGlFunc(glEnablei, target, index)
#define glEnableiEXT(target, index) wrapGlFunc(glEnableiEXT, target, index)
#define glEnableiNV(target, index) wrapGlFunc(glEnableiNV, target, index)
#define glEnableiOES(target, index) wrapGlFunc(glEnableiOES, target, index)
#define glEnd() wrapGlFuncNoArgs(glEnd)
#define glEndConditionalRender() wrapGlFuncNoArgs(glEndConditionalRender)
#define glEndConditionalRenderNV() wrapGlFuncNoArgs(glEndConditionalRenderNV)
#define glEndConditionalRenderNVX() wrapGlFuncNoArgs(glEndConditionalRenderNVX)
#define glEndFragmentShaderATI() wrapGlFuncNoArgs(glEndFragmentShaderATI)
#define glEndList() wrapGlFuncNoArgs(glEndList)
#define glEndOcclusionQueryNV() wrapGlFuncNoArgs(glEndOcclusionQueryNV)
#define glEndPerfMonitorAMD(monitor) wrapGlFunc(glEndPerfMonitorAMD, monitor)
#define glEndPerfQueryINTEL(queryHandle) wrapGlFunc(glEndPerfQueryINTEL, queryHandle)
#define glEndQuery(target) wrapGlFunc(glEndQuery, target)
#define glEndQueryARB(target) wrapGlFunc(glEndQueryARB, target)
#define glEndQueryEXT(target) wrapGlFunc(glEndQueryEXT, target)
#define glEndQueryIndexed(target, index) wrapGlFunc(glEndQueryIndexed, target, index)
#define glEndTilingQCOM(preserveMask) wrapGlFunc(glEndTilingQCOM, preserveMask)
#define glEndTransformFeedback() wrapGlFuncNoArgs(glEndTransformFeedback)
#define glEndTransformFeedbackEXT() wrapGlFuncNoArgs(glEndTransformFeedbackEXT)
#define glEndTransformFeedbackNV() wrapGlFuncNoArgs(glEndTransformFeedbackNV)
#define glEndVertexShaderEXT() wrapGlFuncNoArgs(glEndVertexShaderEXT)
#define glEndVideoCaptureNV(video_capture_slot) wrapGlFunc(glEndVideoCaptureNV, video_capture_slot)
#define glEvalCoord1d(u) wrapGlFunc(glEvalCoord1d, u)
#define glEvalCoord1dv(u) wrapGlFunc(glEvalCoord1dv, u)
#define glEvalCoord1f(u) wrapGlFunc(glEvalCoord1f, u)
#define glEvalCoord1fv(u) wrapGlFunc(glEvalCoord1fv, u)
#define glEvalCoord1xOES(u) wrapGlFunc(glEvalCoord1xOES, u)
#define glEvalCoord1xvOES(coords) wrapGlFunc(glEvalCoord1xvOES, coords)
#define glEvalCoord2d(u, v) wrapGlFunc(glEvalCoord2d, u, v)
#define glEvalCoord2dv(u) wrapGlFunc(glEvalCoord2dv, u)
#define glEvalCoord2f(u, v) wrapGlFunc(glEvalCoord2f, u, v)
#define glEvalCoord2fv(u) wrapGlFunc(glEvalCoord2fv, u)
#define glEvalCoord2xOES(u, v) wrapGlFunc(glEvalCoord2xOES, u, v)
#define glEvalCoord2xvOES(coords) wrapGlFunc(glEvalCoord2xvOES, coords)
#define glEvalMapsNV(target, mode) wrapGlFunc(glEvalMapsNV, target, mode)
#define glEvalMesh1(mode, i1, i2) wrapGlFunc(glEvalMesh1, mode, i1, i2)
#define glEvalMesh2(mode, i1, i2, j1, j2) wrapGlFunc(glEvalMesh2, mode, i1, i2, j1, j2)
#define glEvalPoint1(i) wrapGlFunc(glEvalPoint1, i)
#define glEvalPoint2(i, j) wrapGlFunc(glEvalPoint2, i, j)
#define glEvaluateDepthValuesARB() wrapGlFuncNoArgs(glEvaluateDepthValuesARB)
#define glExecuteProgramNV(target, id, params) wrapGlFunc(glExecuteProgramNV, target, id, params)
#define glExtGetBufferPointervQCOM(target, params) wrapGlFunc(glExtGetBufferPointervQCOM, target, params)
#define glExtGetBuffersQCOM(buffers, maxBuffers, numBuffers) wrapGlFunc(glExtGetBuffersQCOM, buffers, maxBuffers, numBuffers)
#define glExtGetFramebuffersQCOM(framebuffers, maxFramebuffers, numFramebuffers) wrapGlFunc(glExtGetFramebuffersQCOM, framebuffers, maxFramebuffers, numFramebuffers)
#define glExtGetProgramBinarySourceQCOM(program, shadertype, source, length) wrapGlFunc(glExtGetProgramBinarySourceQCOM, program, shadertype, source, length)
#define glExtGetProgramsQCOM(programs, maxPrograms, numPrograms) wrapGlFunc(glExtGetProgramsQCOM, programs, maxPrograms, numPrograms)
#define glExtGetRenderbuffersQCOM(renderbuffers, maxRenderbuffers, numRenderbuffers) wrapGlFunc(glExtGetRenderbuffersQCOM, renderbuffers, maxRenderbuffers, numRenderbuffers)
#define glExtGetShadersQCOM(shaders, maxShaders, numShaders) wrapGlFunc(glExtGetShadersQCOM, shaders, maxShaders, numShaders)
#define glExtGetTexLevelParameterivQCOM(texture, face, level, pname, params) wrapGlFunc(glExtGetTexLevelParameterivQCOM, texture, face, level, pname, params)
#define glExtGetTexSubImageQCOM(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels) wrapGlFunc(glExtGetTexSubImageQCOM, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels)
#define glExtGetTexturesQCOM(textures, maxTextures, numTextures) wrapGlFunc(glExtGetTexturesQCOM, textures, maxTextures, numTextures)
#define glExtTexObjectStateOverrideiQCOM(target, pname, param) wrapGlFunc(glExtTexObjectStateOverrideiQCOM, target, pname, param)
#define glExtractComponentEXT(res, src, num) wrapGlFunc(glExtractComponentEXT, res, src, num)
#define glFeedbackBuffer(size, type, buffer) wrapGlFunc(glFeedbackBuffer, size, type, buffer)
#define glFeedbackBufferxOES(n, type, buffer) wrapGlFunc(glFeedbackBufferxOES, n, type, buffer)
#define glFinalCombinerInputNV(variable, input, mapping, componentUsage) wrapGlFunc(glFinalCombinerInputNV, variable, input, mapping, componentUsage)
#define glFinish() wrapGlFuncNoArgs(glFinish)
#define glFinishFenceAPPLE(fence) wrapGlFunc(glFinishFenceAPPLE, fence)
#define glFinishFenceNV(fence) wrapGlFunc(glFinishFenceNV, fence)
#define glFinishObjectAPPLE(object, name) wrapGlFunc(glFinishObjectAPPLE, object, name)
#define glFinishTextureSUNX() wrapGlFuncNoArgs(glFinishTextureSUNX)
#define glFlush() wrapGlFuncNoArgs(glFlush)
#define glFlushMappedBufferRange(target, offset, length) wrapGlFunc(glFlushMappedBufferRange, target, offset, length)
#define glFlushMappedBufferRangeAPPLE(target, offset, size) wrapGlFunc(glFlushMappedBufferRangeAPPLE, target, offset, size)
#define glFlushMappedBufferRangeEXT(target, offset, length) wrapGlFunc(glFlushMappedBufferRangeEXT, target, offset, length)
#define glFlushMappedNamedBufferRange(buffer, offset, length) wrapGlFunc(glFlushMappedNamedBufferRange, buffer, offset, length)
#define glFlushMappedNamedBufferRangeEXT(buffer, offset, length) wrapGlFunc(glFlushMappedNamedBufferRangeEXT, buffer, offset, length)
#define glFlushPixelDataRangeNV(target) wrapGlFunc(glFlushPixelDataRangeNV, target)
#define glFlushRasterSGIX() wrapGlFuncNoArgs(glFlushRasterSGIX)
#define glFlushStaticDataIBM(target) wrapGlFunc(glFlushStaticDataIBM, target)
#define glFlushVertexArrayRangeAPPLE(length, pointer) wrapGlFunc(glFlushVertexArrayRangeAPPLE, length, pointer)
#define glFlushVertexArrayRangeNV() wrapGlFuncNoArgs(glFlushVertexArrayRangeNV)
#define glFogCoordFormatNV(type, stride) wrapGlFunc(glFogCoordFormatNV, type, stride)
#define glFogCoordPointer(type, stride, pointer) wrapGlFunc(glFogCoordPointer, type, stride, pointer)
#define glFogCoordPointerEXT(type, stride, pointer) wrapGlFunc(glFogCoordPointerEXT, type, stride, pointer)
#define glFogCoordPointerListIBM(type, stride, pointer, ptrstride) wrapGlFunc(glFogCoordPointerListIBM, type, stride, pointer, ptrstride)
#define glFogCoordd(coord) wrapGlFunc(glFogCoordd, coord)
#define glFogCoorddEXT(coord) wrapGlFunc(glFogCoorddEXT, coord)
#define glFogCoorddv(coord) wrapGlFunc(glFogCoorddv, coord)
#define glFogCoorddvEXT(coord) wrapGlFunc(glFogCoorddvEXT, coord)
#define glFogCoordf(coord) wrapGlFunc(glFogCoordf, coord)
#define glFogCoordfEXT(coord) wrapGlFunc(glFogCoordfEXT, coord)
#define glFogCoordfv(coord) wrapGlFunc(glFogCoordfv, coord)
#define glFogCoordfvEXT(coord) wrapGlFunc(glFogCoordfvEXT, coord)
#define glFogCoordhNV(fog) wrapGlFunc(glFogCoordhNV, fog)
#define glFogCoordhvNV(fog) wrapGlFunc(glFogCoordhvNV, fog)
#define glFogFuncSGIS(n, points) wrapGlFunc(glFogFuncSGIS, n, points)
#define glFogf(pname, param) wrapGlFunc(glFogf, pname, param)
#define glFogfv(pname, params) wrapGlFunc(glFogfv, pname, params)
#define glFogi(pname, param) wrapGlFunc(glFogi, pname, param)
#define glFogiv(pname, params) wrapGlFunc(glFogiv, pname, params)
#define glFogx(pname, param) wrapGlFunc(glFogx, pname, param)
#define glFogxOES(pname, param) wrapGlFunc(glFogxOES, pname, param)
#define glFogxv(pname, param) wrapGlFunc(glFogxv, pname, param)
#define glFogxvOES(pname, param) wrapGlFunc(glFogxvOES, pname, param)
#define glFragmentColorMaterialSGIX(face, mode) wrapGlFunc(glFragmentColorMaterialSGIX, face, mode)
#define glFragmentCoverageColorNV(color) wrapGlFunc(glFragmentCoverageColorNV, color)
#define glFragmentLightModelfSGIX(pname, param) wrapGlFunc(glFragmentLightModelfSGIX, pname, param)
#define glFragmentLightModelfvSGIX(pname, params) wrapGlFunc(glFragmentLightModelfvSGIX, pname, params)
#define glFragmentLightModeliSGIX(pname, param) wrapGlFunc(glFragmentLightModeliSGIX, pname, param)
#define glFragmentLightModelivSGIX(pname, params) wrapGlFunc(glFragmentLightModelivSGIX, pname, params)
#define glFragmentLightfSGIX(light, pname, param) wrapGlFunc(glFragmentLightfSGIX, light, pname, param)
#define glFragmentLightfvSGIX(light, pname, params) wrapGlFunc(glFragmentLightfvSGIX, light, pname, params)
#define glFragmentLightiSGIX(light, pname, param) wrapGlFunc(glFragmentLightiSGIX, light, pname, param)
#define glFragmentLightivSGIX(light, pname, params) wrapGlFunc(glFragmentLightivSGIX, light, pname, params)
#define glFragmentMaterialfSGIX(face, pname, param) wrapGlFunc(glFragmentMaterialfSGIX, face, pname, param)
#define glFragmentMaterialfvSGIX(face, pname, params) wrapGlFunc(glFragmentMaterialfvSGIX, face, pname, params)
#define glFragmentMaterialiSGIX(face, pname, param) wrapGlFunc(glFragmentMaterialiSGIX, face, pname, param)
#define glFragmentMaterialivSGIX(face, pname, params) wrapGlFunc(glFragmentMaterialivSGIX, face, pname, params)
#define glFrameTerminatorGREMEDY() wrapGlFuncNoArgs(glFrameTerminatorGREMEDY)
#define glFrameZoomSGIX(factor) wrapGlFunc(glFrameZoomSGIX, factor)
#define glFramebufferDrawBufferEXT(framebuffer, mode) wrapGlFunc(glFramebufferDrawBufferEXT, framebuffer, mode)
#define glFramebufferDrawBuffersEXT(framebuffer, n, bufs) wrapGlFunc(glFramebufferDrawBuffersEXT, framebuffer, n, bufs)
#define glFramebufferParameteri(target, pname, param) wrapGlFunc(glFramebufferParameteri, target, pname, param)
#define glFramebufferPixelLocalStorageSizeEXT(target, size) wrapGlFunc(glFramebufferPixelLocalStorageSizeEXT, target, size)
#define glFramebufferReadBufferEXT(framebuffer, mode) wrapGlFunc(glFramebufferReadBufferEXT, framebuffer, mode)
#define glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) wrapGlFunc(glFramebufferRenderbuffer, target, attachment, renderbuffertarget, renderbuffer)
#define glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer) wrapGlFunc(glFramebufferRenderbufferEXT, target, attachment, renderbuffertarget, renderbuffer)
#define glFramebufferRenderbufferOES(target, attachment, renderbuffertarget, renderbuffer) wrapGlFunc(glFramebufferRenderbufferOES, target, attachment, renderbuffertarget, renderbuffer)
#define glFramebufferSampleLocationsfvARB(target, start, count, v) wrapGlFunc(glFramebufferSampleLocationsfvARB, target, start, count, v)
#define glFramebufferSampleLocationsfvNV(target, start, count, v) wrapGlFunc(glFramebufferSampleLocationsfvNV, target, start, count, v)
#define glFramebufferSamplePositionsfvAMD(target, numsamples, pixelindex, values) wrapGlFunc(glFramebufferSamplePositionsfvAMD, target, numsamples, pixelindex, values)
#define glFramebufferTexture(target, attachment, texture, level) wrapGlFunc(glFramebufferTexture, target, attachment, texture, level)
#define glFramebufferTexture1D(target, attachment, textarget, texture, level) wrapGlFunc(glFramebufferTexture1D, target, attachment, textarget, texture, level)
#define glFramebufferTexture1DEXT(target, attachment, textarget, texture, level) wrapGlFunc(glFramebufferTexture1DEXT, target, attachment, textarget, texture, level)
#define glFramebufferTexture2D(target, attachment, textarget, texture, level) wrapGlFunc(glFramebufferTexture2D, target, attachment, textarget, texture, level)
#define glFramebufferTexture2DEXT(target, attachment, textarget, texture, level) wrapGlFunc(glFramebufferTexture2DEXT, target, attachment, textarget, texture, level)
#define glFramebufferTexture2DDownsampleIMG(target, attachment, textarget, texture, level, xscale, yscale) wrapGlFunc(glFramebufferTexture2DDownsampleIMG, target, attachment, textarget, texture, level, xscale, yscale)
#define glFramebufferTexture2DMultisampleEXT(target, attachment, textarget, texture, level, samples) wrapGlFunc(glFramebufferTexture2DMultisampleEXT, target, attachment, textarget, texture, level, samples)
#define glFramebufferTexture2DMultisampleIMG(target, attachment, textarget, texture, level, samples) wrapGlFunc(glFramebufferTexture2DMultisampleIMG, target, attachment, textarget, texture, level, samples)
#define glFramebufferTexture2DOES(target, attachment, textarget, texture, level) wrapGlFunc(glFramebufferTexture2DOES, target, attachment, textarget, texture, level)
#define glFramebufferTexture3D(target, attachment, textarget, texture, level, zoffset) wrapGlFunc(glFramebufferTexture3D, target, attachment, textarget, texture, level, zoffset)
#define glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset) wrapGlFunc(glFramebufferTexture3DEXT, target, attachment, textarget, texture, level, zoffset)
#define glFramebufferTexture3DOES(target, attachment, textarget, texture, level, zoffset) wrapGlFunc(glFramebufferTexture3DOES, target, attachment, textarget, texture, level, zoffset)
#define glFramebufferTextureARB(target, attachment, texture, level) wrapGlFunc(glFramebufferTextureARB, target, attachment, texture, level)
#define glFramebufferTextureEXT(target, attachment, texture, level) wrapGlFunc(glFramebufferTextureEXT, target, attachment, texture, level)
#define glFramebufferTextureFaceARB(target, attachment, texture, level, face) wrapGlFunc(glFramebufferTextureFaceARB, target, attachment, texture, level, face)
#define glFramebufferTextureFaceEXT(target, attachment, texture, level, face) wrapGlFunc(glFramebufferTextureFaceEXT, target, attachment, texture, level, face)
#define glFramebufferTextureLayer(target, attachment, texture, level, layer) wrapGlFunc(glFramebufferTextureLayer, target, attachment, texture, level, layer)
#define glFramebufferTextureLayerARB(target, attachment, texture, level, layer) wrapGlFunc(glFramebufferTextureLayerARB, target, attachment, texture, level, layer)
#define glFramebufferTextureLayerEXT(target, attachment, texture, level, layer) wrapGlFunc(glFramebufferTextureLayerEXT, target, attachment, texture, level, layer)
#define glFramebufferTextureLayerDownsampleIMG(target, attachment, texture, level, layer, xscale, yscale) wrapGlFunc(glFramebufferTextureLayerDownsampleIMG, target, attachment, texture, level, layer, xscale, yscale)
#define glFramebufferTextureMultisampleMultiviewOVR(target, attachment, texture, level, samples, baseViewIndex, numViews) wrapGlFunc(glFramebufferTextureMultisampleMultiviewOVR, target, attachment, texture, level, samples, baseViewIndex, numViews)
#define glFramebufferTextureMultiviewOVR(target, attachment, texture, level, baseViewIndex, numViews) wrapGlFunc(glFramebufferTextureMultiviewOVR, target, attachment, texture, level, baseViewIndex, numViews)
#define glFramebufferTextureOES(target, attachment, texture, level) wrapGlFunc(glFramebufferTextureOES, target, attachment, texture, level)
#define glFreeObjectBufferATI(buffer) wrapGlFunc(glFreeObjectBufferATI, buffer)
#define glFrontFace(mode) wrapGlFunc(glFrontFace, mode)
#define glFrustum(left, right, bottom, top, zNear, zFar) wrapGlFunc(glFrustum, left, right, bottom, top, zNear, zFar)
#define glFrustumf(l, r, b, t, n, f) wrapGlFunc(glFrustumf, l, r, b, t, n, f)
#define glFrustumfOES(l, r, b, t, n, f) wrapGlFunc(glFrustumfOES, l, r, b, t, n, f)
#define glFrustumx(l, r, b, t, n, f) wrapGlFunc(glFrustumx, l, r, b, t, n, f)
#define glFrustumxOES(l, r, b, t, n, f) wrapGlFunc(glFrustumxOES, l, r, b, t, n, f)
#define glGenBuffers(n, buffers) wrapGlFunc(glGenBuffers, n, buffers)
#define glGenBuffersARB(n, buffers) wrapGlFunc(glGenBuffersARB, n, buffers)
#define glGenFencesAPPLE(n, fences) wrapGlFunc(glGenFencesAPPLE, n, fences)
#define glGenFencesNV(n, fences) wrapGlFunc(glGenFencesNV, n, fences)
#define glGenFramebuffers(n, framebuffers) wrapGlFunc(glGenFramebuffers, n, framebuffers)
#define glGenFramebuffersEXT(n, framebuffers) wrapGlFunc(glGenFramebuffersEXT, n, framebuffers)
#define glGenFramebuffersOES(n, framebuffers) wrapGlFunc(glGenFramebuffersOES, n, framebuffers)
#define glGenNamesAMD(identifier, num, names) wrapGlFunc(glGenNamesAMD, identifier, num, names)
#define glGenOcclusionQueriesNV(n, ids) wrapGlFunc(glGenOcclusionQueriesNV, n, ids)
#define glGenPerfMonitorsAMD(n, monitors) wrapGlFunc(glGenPerfMonitorsAMD, n, monitors)
#define glGenProgramPipelines(n, pipelines) wrapGlFunc(glGenProgramPipelines, n, pipelines)
#define glGenProgramPipelinesEXT(n, pipelines) wrapGlFunc(glGenProgramPipelinesEXT, n, pipelines)
#define glGenProgramsARB(n, programs) wrapGlFunc(glGenProgramsARB, n, programs)
#define glGenProgramsNV(n, programs) wrapGlFunc(glGenProgramsNV, n, programs)
#define glGenQueries(n, ids) wrapGlFunc(glGenQueries, n, ids)
#define glGenQueriesARB(n, ids) wrapGlFunc(glGenQueriesARB, n, ids)
#define glGenQueriesEXT(n, ids) wrapGlFunc(glGenQueriesEXT, n, ids)
#define glGenRenderbuffers(n, renderbuffers) wrapGlFunc(glGenRenderbuffers, n, renderbuffers)
#define glGenRenderbuffersEXT(n, renderbuffers) wrapGlFunc(glGenRenderbuffersEXT, n, renderbuffers)
#define glGenRenderbuffersOES(n, renderbuffers) wrapGlFunc(glGenRenderbuffersOES, n, renderbuffers)
#define glGenSamplers(count, samplers) wrapGlFunc(glGenSamplers, count, samplers)
#define glGenTextures(n, textures) wrapGlFunc(glGenTextures, n, textures)
#define glGenTexturesEXT(n, textures) wrapGlFunc(glGenTexturesEXT, n, textures)
#define glGenTransformFeedbacks(n, ids) wrapGlFunc(glGenTransformFeedbacks, n, ids)
#define glGenTransformFeedbacksNV(n, ids) wrapGlFunc(glGenTransformFeedbacksNV, n, ids)
#define glGenVertexArrays(n, arrays) wrapGlFunc(glGenVertexArrays, n, arrays)
#define glGenVertexArraysAPPLE(n, arrays) wrapGlFunc(glGenVertexArraysAPPLE, n, arrays)
#define glGenVertexArraysOES(n, arrays) wrapGlFunc(glGenVertexArraysOES, n, arrays)
#define glGenerateMipmap(target) wrapGlFunc(glGenerateMipmap, target)
#define glGenerateMipmapEXT(target) wrapGlFunc(glGenerateMipmapEXT, target)
#define glGenerateMipmapOES(target) wrapGlFunc(glGenerateMipmapOES, target)
#define glGenerateMultiTexMipmapEXT(texunit, target) wrapGlFunc(glGenerateMultiTexMipmapEXT, texunit, target)
#define glGenerateTextureMipmap(texture) wrapGlFunc(glGenerateTextureMipmap, texture)
#define glGenerateTextureMipmapEXT(texture, target) wrapGlFunc(glGenerateTextureMipmapEXT, texture, target)
#define glGetActiveAtomicCounterBufferiv(program, bufferIndex, pname, params) wrapGlFunc(glGetActiveAtomicCounterBufferiv, program, bufferIndex, pname, params)
#define glGetActiveAttrib(program, index, bufSize, length, size, type, name) wrapGlFunc(glGetActiveAttrib, program, index, bufSize, length, size, type, name)
#define glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name) wrapGlFunc(glGetActiveAttribARB, programObj, index, maxLength, length, size, type, name)
#define glGetActiveSubroutineName(program, shadertype, index, bufsize, length, name) wrapGlFunc(glGetActiveSubroutineName, program, shadertype, index, bufsize, length, name)
#define glGetActiveSubroutineUniformName(program, shadertype, index, bufsize, length, name) wrapGlFunc(glGetActiveSubroutineUniformName, program, shadertype, index, bufsize, length, name)
#define glGetActiveSubroutineUniformiv(program, shadertype, index, pname, values) wrapGlFunc(glGetActiveSubroutineUniformiv, program, shadertype, index, pname, values)
#define glGetActiveUniform(program, index, bufSize, length, size, type, name) wrapGlFunc(glGetActiveUniform, program, index, bufSize, length, size, type, name)
#define glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name) wrapGlFunc(glGetActiveUniformARB, programObj, index, maxLength, length, size, type, name)
#define glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName) wrapGlFunc(glGetActiveUniformBlockName, program, uniformBlockIndex, bufSize, length, uniformBlockName)
#define glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params) wrapGlFunc(glGetActiveUniformBlockiv, program, uniformBlockIndex, pname, params)
#define glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName) wrapGlFunc(glGetActiveUniformName, program, uniformIndex, bufSize, length, uniformName)
#define glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params) wrapGlFunc(glGetActiveUniformsiv, program, uniformCount, uniformIndices, pname, params)
#define glGetActiveVaryingNV(program, index, bufSize, length, size, type, name) wrapGlFunc(glGetActiveVaryingNV, program, index, bufSize, length, size, type, name)
#define glGetArrayObjectfvATI(array, pname, params) wrapGlFunc(glGetArrayObjectfvATI, array, pname, params)
#define glGetArrayObjectivATI(array, pname, params) wrapGlFunc(glGetArrayObjectivATI, array, pname, params)
#define glGetAttachedObjectsARB(containerObj, maxCount, count, obj) wrapGlFunc(glGetAttachedObjectsARB, containerObj, maxCount, count, obj)
#define glGetAttachedShaders(program, maxCount, count, shaders) wrapGlFunc(glGetAttachedShaders, program, maxCount, count, shaders)
#define glGetBooleanIndexedvEXT(target, index, data) wrapGlFunc(glGetBooleanIndexedvEXT, target, index, data)
#define glGetBooleani_v(target, index, data) wrapGlFunc(glGetBooleani_v, target, index, data)
#define glGetBufferParameteri64v(target, pname, params) wrapGlFunc(glGetBufferParameteri64v, target, pname, params)
#define glGetBufferParameteriv(target, pname, params) wrapGlFunc(glGetBufferParameteriv, target, pname, params)
#define glGetBufferParameterivARB(target, pname, params) wrapGlFunc(glGetBufferParameterivARB, target, pname, params)
#define glGetBufferParameterui64vNV(target, pname, params) wrapGlFunc(glGetBufferParameterui64vNV, target, pname, params)
#define glGetBufferPointerv(target, pname, params) wrapGlFunc(glGetBufferPointerv, target, pname, params)
#define glGetBufferPointervARB(target, pname, params) wrapGlFunc(glGetBufferPointervARB, target, pname, params)
#define glGetBufferPointervOES(target, pname, params) wrapGlFunc(glGetBufferPointervOES, target, pname, params)
#define glGetBufferSubData(target, offset, size, data) wrapGlFunc(glGetBufferSubData, target, offset, size, data)
#define glGetBufferSubDataARB(target, offset, size, data) wrapGlFunc(glGetBufferSubDataARB, target, offset, size, data)
#define glGetClipPlane(plane, equation) wrapGlFunc(glGetClipPlane, plane, equation)
#define glGetClipPlanef(plane, equation) wrapGlFunc(glGetClipPlanef, plane, equation)
#define glGetClipPlanefOES(plane, equation) wrapGlFunc(glGetClipPlanefOES, plane, equation)
#define glGetClipPlanex(plane, equation) wrapGlFunc(glGetClipPlanex, plane, equation)
#define glGetClipPlanexOES(plane, equation) wrapGlFunc(glGetClipPlanexOES, plane, equation)
#define glGetColorTable(target, format, type, table) wrapGlFunc(glGetColorTable, target, format, type, table)
#define glGetColorTableEXT(target, format, type, data) wrapGlFunc(glGetColorTableEXT, target, format, type, data)
#define glGetColorTableParameterfv(target, pname, params) wrapGlFunc(glGetColorTableParameterfv, target, pname, params)
#define glGetColorTableParameterfvEXT(target, pname, params) wrapGlFunc(glGetColorTableParameterfvEXT, target, pname, params)
#define glGetColorTableParameterfvSGI(target, pname, params) wrapGlFunc(glGetColorTableParameterfvSGI, target, pname, params)
#define glGetColorTableParameteriv(target, pname, params) wrapGlFunc(glGetColorTableParameteriv, target, pname, params)
#define glGetColorTableParameterivEXT(target, pname, params) wrapGlFunc(glGetColorTableParameterivEXT, target, pname, params)
#define glGetColorTableParameterivSGI(target, pname, params) wrapGlFunc(glGetColorTableParameterivSGI, target, pname, params)
#define glGetColorTableSGI(target, format, type, table) wrapGlFunc(glGetColorTableSGI, target, format, type, table)
#define glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params) wrapGlFunc(glGetCombinerInputParameterfvNV, stage, portion, variable, pname, params)
#define glGetCombinerInputParameterivNV(stage, portion, variable, pname, params) wrapGlFunc(glGetCombinerInputParameterivNV, stage, portion, variable, pname, params)
#define glGetCombinerOutputParameterfvNV(stage, portion, pname, params) wrapGlFunc(glGetCombinerOutputParameterfvNV, stage, portion, pname, params)
#define glGetCombinerOutputParameterivNV(stage, portion, pname, params) wrapGlFunc(glGetCombinerOutputParameterivNV, stage, portion, pname, params)
#define glGetCombinerStageParameterfvNV(stage, pname, params) wrapGlFunc(glGetCombinerStageParameterfvNV, stage, pname, params)
#define glGetCompressedMultiTexImageEXT(texunit, target, lod, img) wrapGlFunc(glGetCompressedMultiTexImageEXT, texunit, target, lod, img)
#define glGetCompressedTexImage(target, level, img) wrapGlFunc(glGetCompressedTexImage, target, level, img)
#define glGetCompressedTexImageARB(target, level, img) wrapGlFunc(glGetCompressedTexImageARB, target, level, img)
#define glGetCompressedTextureImage(texture, level, bufSize, pixels) wrapGlFunc(glGetCompressedTextureImage, texture, level, bufSize, pixels)
#define glGetCompressedTextureImageEXT(texture, target, lod, img) wrapGlFunc(glGetCompressedTextureImageEXT, texture, target, lod, img)
#define glGetCompressedTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels) wrapGlFunc(glGetCompressedTextureSubImage, texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels)
#define glGetConvolutionFilter(target, format, type, image) wrapGlFunc(glGetConvolutionFilter, target, format, type, image)
#define glGetConvolutionFilterEXT(target, format, type, image) wrapGlFunc(glGetConvolutionFilterEXT, target, format, type, image)
#define glGetConvolutionParameterfv(target, pname, params) wrapGlFunc(glGetConvolutionParameterfv, target, pname, params)
#define glGetConvolutionParameterfvEXT(target, pname, params) wrapGlFunc(glGetConvolutionParameterfvEXT, target, pname, params)
#define glGetConvolutionParameteriv(target, pname, params) wrapGlFunc(glGetConvolutionParameteriv, target, pname, params)
#define glGetConvolutionParameterivEXT(target, pname, params) wrapGlFunc(glGetConvolutionParameterivEXT, target, pname, params)
#define glGetConvolutionParameterxvOES(target, pname, params) wrapGlFunc(glGetConvolutionParameterxvOES, target, pname, params)
#define glGetCoverageModulationTableNV(bufsize, v) wrapGlFunc(glGetCoverageModulationTableNV, bufsize, v)
#define glGetDetailTexFuncSGIS(target, points) wrapGlFunc(glGetDetailTexFuncSGIS, target, points)
#define glGetDoubleIndexedvEXT(target, index, data) wrapGlFunc(glGetDoubleIndexedvEXT, target, index, data)
#define glGetDoublei_v(target, index, data) wrapGlFunc(glGetDoublei_v, target, index, data)
#define glGetDoublei_vEXT(pname, index, params) wrapGlFunc(glGetDoublei_vEXT, pname, index, params)
#define glGetDriverControlStringQCOM(driverControl, bufSize, length, driverControlString) wrapGlFunc(glGetDriverControlStringQCOM, driverControl, bufSize, length, driverControlString)
#define glGetDriverControlsQCOM(num, size, driverControls) wrapGlFunc(glGetDriverControlsQCOM, num, size, driverControls)
#define glGetFenceivNV(fence, pname, params) wrapGlFunc(glGetFenceivNV, fence, pname, params)
#define glGetFinalCombinerInputParameterfvNV(variable, pname, params) wrapGlFunc(glGetFinalCombinerInputParameterfvNV, variable, pname, params)
#define glGetFinalCombinerInputParameterivNV(variable, pname, params) wrapGlFunc(glGetFinalCombinerInputParameterivNV, variable, pname, params)
#define glGetFirstPerfQueryIdINTEL(queryId) wrapGlFunc(glGetFirstPerfQueryIdINTEL, queryId)
#define glGetFixedv(pname, params) wrapGlFunc(glGetFixedv, pname, params)
#define glGetFixedvOES(pname, params) wrapGlFunc(glGetFixedvOES, pname, params)
#define glGetFloatIndexedvEXT(target, index, data) wrapGlFunc(glGetFloatIndexedvEXT, target, index, data)
#define glGetFloati_v(target, index, data) wrapGlFunc(glGetFloati_v, target, index, data)
#define glGetFloati_vEXT(pname, index, params) wrapGlFunc(glGetFloati_vEXT, pname, index, params)
#define glGetFloati_vNV(target, index, data) wrapGlFunc(glGetFloati_vNV, target, index, data)
#define glGetFloati_vOES(target, index, data) wrapGlFunc(glGetFloati_vOES, target, index, data)
#define glGetFogFuncSGIS(points) wrapGlFunc(glGetFogFuncSGIS, points)
#define glGetFragmentLightfvSGIX(light, pname, params) wrapGlFunc(glGetFragmentLightfvSGIX, light, pname, params)
#define glGetFragmentLightivSGIX(light, pname, params) wrapGlFunc(glGetFragmentLightivSGIX, light, pname, params)
#define glGetFragmentMaterialfvSGIX(face, pname, params) wrapGlFunc(glGetFragmentMaterialfvSGIX, face, pname, params)
#define glGetFragmentMaterialivSGIX(face, pname, params) wrapGlFunc(glGetFragmentMaterialivSGIX, face, pname, params)
#define glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) wrapGlFunc(glGetFramebufferAttachmentParameteriv, target, attachment, pname, params)
#define glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params) wrapGlFunc(glGetFramebufferAttachmentParameterivEXT, target, attachment, pname, params)
#define glGetFramebufferAttachmentParameterivOES(target, attachment, pname, params) wrapGlFunc(glGetFramebufferAttachmentParameterivOES, target, attachment, pname, params)
#define glGetFramebufferParameterfvAMD(target, pname, numsamples, pixelindex, size, values) wrapGlFunc(glGetFramebufferParameterfvAMD, target, pname, numsamples, pixelindex, size, values)
#define glGetFramebufferParameteriv(target, pname, params) wrapGlFunc(glGetFramebufferParameteriv, target, pname, params)
#define glGetFramebufferParameterivEXT(framebuffer, pname, params) wrapGlFunc(glGetFramebufferParameterivEXT, framebuffer, pname, params)
#define glGetHistogram(target, reset, format, type, values) wrapGlFunc(glGetHistogram, target, reset, format, type, values)
#define glGetHistogramEXT(target, reset, format, type, values) wrapGlFunc(glGetHistogramEXT, target, reset, format, type, values)
#define glGetHistogramParameterfv(target, pname, params) wrapGlFunc(glGetHistogramParameterfv, target, pname, params)
#define glGetHistogramParameterfvEXT(target, pname, params) wrapGlFunc(glGetHistogramParameterfvEXT, target, pname, params)
#define glGetHistogramParameteriv(target, pname, params) wrapGlFunc(glGetHistogramParameteriv, target, pname, params)
#define glGetHistogramParameterivEXT(target, pname, params) wrapGlFunc(glGetHistogramParameterivEXT, target, pname, params)
#define glGetHistogramParameterxvOES(target, pname, params) wrapGlFunc(glGetHistogramParameterxvOES, target, pname, params)
#define glGetImageTransformParameterfvHP(target, pname, params) wrapGlFunc(glGetImageTransformParameterfvHP, target, pname, params)
#define glGetImageTransformParameterivHP(target, pname, params) wrapGlFunc(glGetImageTransformParameterivHP, target, pname, params)
#define glGetInfoLogARB(obj, maxLength, length, infoLog) wrapGlFunc(glGetInfoLogARB, obj, maxLength, length, infoLog)
#define glGetInteger64i_v(target, index, data) wrapGlFunc(glGetInteger64i_v, target, index, data)
#define glGetInteger64v(pname, data) wrapGlFunc(glGetInteger64v, pname, data)
#define glGetInteger64vAPPLE(pname, params) wrapGlFunc(glGetInteger64vAPPLE, pname, params)
#define glGetIntegerIndexedvEXT(target, index, data) wrapGlFunc(glGetIntegerIndexedvEXT, target, index, data)
#define glGetIntegeri_v(target, index, data) wrapGlFunc(glGetIntegeri_v, target, index, data)
#define glGetIntegeri_vEXT(target, index, data) wrapGlFunc(glGetIntegeri_vEXT, target, index, data)
#define glGetIntegerui64i_vNV(value, index, result) wrapGlFunc(glGetIntegerui64i_vNV, value, index, result)
#define glGetIntegerui64vNV(value, result) wrapGlFunc(glGetIntegerui64vNV, value, result)
#define glGetInternalformatSampleivNV(target, internalformat, samples, pname, bufSize, params) wrapGlFunc(glGetInternalformatSampleivNV, target, internalformat, samples, pname, bufSize, params)
#define glGetInternalformati64v(target, internalformat, pname, bufSize, params) wrapGlFunc(glGetInternalformati64v, target, internalformat, pname, bufSize, params)
#define glGetInternalformativ(target, internalformat, pname, bufSize, params) wrapGlFunc(glGetInternalformativ, target, internalformat, pname, bufSize, params)
#define glGetInvariantBooleanvEXT(id, value, data) wrapGlFunc(glGetInvariantBooleanvEXT, id, value, data)
#define glGetInvariantFloatvEXT(id, value, data) wrapGlFunc(glGetInvariantFloatvEXT, id, value, data)
#define glGetInvariantIntegervEXT(id, value, data) wrapGlFunc(glGetInvariantIntegervEXT, id, value, data)
#define glGetLightfv(light, pname, params) wrapGlFunc(glGetLightfv, light, pname, params)
#define glGetLightiv(light, pname, params) wrapGlFunc(glGetLightiv, light, pname, params)
#define glGetLightxOES(light, pname, params) wrapGlFunc(glGetLightxOES, light, pname, params)
#define glGetLightxv(light, pname, params) wrapGlFunc(glGetLightxv, light, pname, params)
#define glGetLightxvOES(light, pname, params) wrapGlFunc(glGetLightxvOES, light, pname, params)
#define glGetListParameterfvSGIX(list, pname, params) wrapGlFunc(glGetListParameterfvSGIX, list, pname, params)
#define glGetListParameterivSGIX(list, pname, params) wrapGlFunc(glGetListParameterivSGIX, list, pname, params)
#define glGetLocalConstantBooleanvEXT(id, value, data) wrapGlFunc(glGetLocalConstantBooleanvEXT, id, value, data)
#define glGetLocalConstantFloatvEXT(id, value, data) wrapGlFunc(glGetLocalConstantFloatvEXT, id, value, data)
#define glGetLocalConstantIntegervEXT(id, value, data) wrapGlFunc(glGetLocalConstantIntegervEXT, id, value, data)
#define glGetMapAttribParameterfvNV(target, index, pname, params) wrapGlFunc(glGetMapAttribParameterfvNV, target, index, pname, params)
#define glGetMapAttribParameterivNV(target, index, pname, params) wrapGlFunc(glGetMapAttribParameterivNV, target, index, pname, params)
#define glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points) wrapGlFunc(glGetMapControlPointsNV, target, index, type, ustride, vstride, packed, points)
#define glGetMapParameterfvNV(target, pname, params) wrapGlFunc(glGetMapParameterfvNV, target, pname, params)
#define glGetMapParameterivNV(target, pname, params) wrapGlFunc(glGetMapParameterivNV, target, pname, params)
#define glGetMapdv(target, query, v) wrapGlFunc(glGetMapdv, target, query, v)
#define glGetMapfv(target, query, v) wrapGlFunc(glGetMapfv, target, query, v)
#define glGetMapiv(target, query, v) wrapGlFunc(glGetMapiv, target, query, v)
#define glGetMapxvOES(target, query, v) wrapGlFunc(glGetMapxvOES, target, query, v)
#define glGetMaterialfv(face, pname, params) wrapGlFunc(glGetMaterialfv, face, pname, params)
#define glGetMaterialiv(face, pname, params) wrapGlFunc(glGetMaterialiv, face, pname, params)
#define glGetMaterialxOES(face, pname, param) wrapGlFunc(glGetMaterialxOES, face, pname, param)
#define glGetMaterialxv(face, pname, params) wrapGlFunc(glGetMaterialxv, face, pname, params)
#define glGetMaterialxvOES(face, pname, params) wrapGlFunc(glGetMaterialxvOES, face, pname, params)
#define glGetMinmax(target, reset, format, type, values) wrapGlFunc(glGetMinmax, target, reset, format, type, values)
#define glGetMinmaxEXT(target, reset, format, type, values) wrapGlFunc(glGetMinmaxEXT, target, reset, format, type, values)
#define glGetMinmaxParameterfv(target, pname, params) wrapGlFunc(glGetMinmaxParameterfv, target, pname, params)
#define glGetMinmaxParameterfvEXT(target, pname, params) wrapGlFunc(glGetMinmaxParameterfvEXT, target, pname, params)
#define glGetMinmaxParameteriv(target, pname, params) wrapGlFunc(glGetMinmaxParameteriv, target, pname, params)
#define glGetMinmaxParameterivEXT(target, pname, params) wrapGlFunc(glGetMinmaxParameterivEXT, target, pname, params)
#define glGetMultiTexEnvfvEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexEnvfvEXT, texunit, target, pname, params)
#define glGetMultiTexEnvivEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexEnvivEXT, texunit, target, pname, params)
#define glGetMultiTexGendvEXT(texunit, coord, pname, params) wrapGlFunc(glGetMultiTexGendvEXT, texunit, coord, pname, params)
#define glGetMultiTexGenfvEXT(texunit, coord, pname, params) wrapGlFunc(glGetMultiTexGenfvEXT, texunit, coord, pname, params)
#define glGetMultiTexGenivEXT(texunit, coord, pname, params) wrapGlFunc(glGetMultiTexGenivEXT, texunit, coord, pname, params)
#define glGetMultiTexImageEXT(texunit, target, level, format, type, pixels) wrapGlFunc(glGetMultiTexImageEXT, texunit, target, level, format, type, pixels)
#define glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params) wrapGlFunc(glGetMultiTexLevelParameterfvEXT, texunit, target, level, pname, params)
#define glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params) wrapGlFunc(glGetMultiTexLevelParameterivEXT, texunit, target, level, pname, params)
#define glGetMultiTexParameterIivEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexParameterIivEXT, texunit, target, pname, params)
#define glGetMultiTexParameterIuivEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexParameterIuivEXT, texunit, target, pname, params)
#define glGetMultiTexParameterfvEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexParameterfvEXT, texunit, target, pname, params)
#define glGetMultiTexParameterivEXT(texunit, target, pname, params) wrapGlFunc(glGetMultiTexParameterivEXT, texunit, target, pname, params)
#define glGetMultisamplefv(pname, index, val) wrapGlFunc(glGetMultisamplefv, pname, index, val)
#define glGetMultisamplefvNV(pname, index, val) wrapGlFunc(glGetMultisamplefvNV, pname, index, val)
#define glGetNamedBufferParameteri64v(buffer, pname, params) wrapGlFunc(glGetNamedBufferParameteri64v, buffer, pname, params)
#define glGetNamedBufferParameteriv(buffer, pname, params) wrapGlFunc(glGetNamedBufferParameteriv, buffer, pname, params)
#define glGetNamedBufferParameterivEXT(buffer, pname, params) wrapGlFunc(glGetNamedBufferParameterivEXT, buffer, pname, params)
#define glGetNamedBufferParameterui64vNV(buffer, pname, params) wrapGlFunc(glGetNamedBufferParameterui64vNV, buffer, pname, params)
#define glGetNamedBufferPointerv(buffer, pname, params) wrapGlFunc(glGetNamedBufferPointerv, buffer, pname, params)
#define glGetNamedBufferPointervEXT(buffer, pname, params) wrapGlFunc(glGetNamedBufferPointervEXT, buffer, pname, params)
#define glGetNamedBufferSubData(buffer, offset, size, data) wrapGlFunc(glGetNamedBufferSubData, buffer, offset, size, data)
#define glGetNamedBufferSubDataEXT(buffer, offset, size, data) wrapGlFunc(glGetNamedBufferSubDataEXT, buffer, offset, size, data)
#define glGetNamedFramebufferParameterfvAMD(framebuffer, pname, numsamples, pixelindex, size, values) wrapGlFunc(glGetNamedFramebufferParameterfvAMD, framebuffer, pname, numsamples, pixelindex, size, values)
#define glGetNamedFramebufferAttachmentParameteriv(framebuffer, attachment, pname, params) wrapGlFunc(glGetNamedFramebufferAttachmentParameteriv, framebuffer, attachment, pname, params)
#define glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params) wrapGlFunc(glGetNamedFramebufferAttachmentParameterivEXT, framebuffer, attachment, pname, params)
#define glGetNamedFramebufferParameteriv(framebuffer, pname, param) wrapGlFunc(glGetNamedFramebufferParameteriv, framebuffer, pname, param)
#define glGetNamedFramebufferParameterivEXT(framebuffer, pname, params) wrapGlFunc(glGetNamedFramebufferParameterivEXT, framebuffer, pname, params)
#define glGetNamedProgramLocalParameterIivEXT(program, target, index, params) wrapGlFunc(glGetNamedProgramLocalParameterIivEXT, program, target, index, params)
#define glGetNamedProgramLocalParameterIuivEXT(program, target, index, params) wrapGlFunc(glGetNamedProgramLocalParameterIuivEXT, program, target, index, params)
#define glGetNamedProgramLocalParameterdvEXT(program, target, index, params) wrapGlFunc(glGetNamedProgramLocalParameterdvEXT, program, target, index, params)
#define glGetNamedProgramLocalParameterfvEXT(program, target, index, params) wrapGlFunc(glGetNamedProgramLocalParameterfvEXT, program, target, index, params)
#define glGetNamedProgramStringEXT(program, target, pname, string) wrapGlFunc(glGetNamedProgramStringEXT, program, target, pname, string)
#define glGetNamedProgramivEXT(program, target, pname, params) wrapGlFunc(glGetNamedProgramivEXT, program, target, pname, params)
#define glGetNamedRenderbufferParameteriv(renderbuffer, pname, params) wrapGlFunc(glGetNamedRenderbufferParameteriv, renderbuffer, pname, params)
#define glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params) wrapGlFunc(glGetNamedRenderbufferParameterivEXT, renderbuffer, pname, params)
#define glGetNamedStringARB(namelen, name, bufSize, stringlen, string) wrapGlFunc(glGetNamedStringARB, namelen, name, bufSize, stringlen, string)
#define glGetNamedStringivARB(namelen, name, pname, params) wrapGlFunc(glGetNamedStringivARB, namelen, name, pname, params)
#define glGetNextPerfQueryIdINTEL(queryId, nextQueryId) wrapGlFunc(glGetNextPerfQueryIdINTEL, queryId, nextQueryId)
#define glGetObjectBufferfvATI(buffer, pname, params) wrapGlFunc(glGetObjectBufferfvATI, buffer, pname, params)
#define glGetObjectBufferivATI(buffer, pname, params) wrapGlFunc(glGetObjectBufferivATI, buffer, pname, params)
#define glGetObjectLabel(identifier, name, bufSize, length, label) wrapGlFunc(glGetObjectLabel, identifier, name, bufSize, length, label)
#define glGetObjectLabelEXT(type, object, bufSize, length, label) wrapGlFunc(glGetObjectLabelEXT, type, object, bufSize, length, label)
#define glGetObjectLabelKHR(identifier, name, bufSize, length, label) wrapGlFunc(glGetObjectLabelKHR, identifier, name, bufSize, length, label)
#define glGetObjectParameterfvARB(obj, pname, params) wrapGlFunc(glGetObjectParameterfvARB, obj, pname, params)
#define glGetObjectParameterivAPPLE(objectType, name, pname, params) wrapGlFunc(glGetObjectParameterivAPPLE, objectType, name, pname, params)
#define glGetObjectParameterivARB(obj, pname, params) wrapGlFunc(glGetObjectParameterivARB, obj, pname, params)
#define glGetObjectPtrLabel(ptr, bufSize, length, label) wrapGlFunc(glGetObjectPtrLabel, ptr, bufSize, length, label)
#define glGetObjectPtrLabelKHR(ptr, bufSize, length, label) wrapGlFunc(glGetObjectPtrLabelKHR, ptr, bufSize, length, label)
#define glGetOcclusionQueryivNV(id, pname, params) wrapGlFunc(glGetOcclusionQueryivNV, id, pname, params)
#define glGetOcclusionQueryuivNV(id, pname, params) wrapGlFunc(glGetOcclusionQueryuivNV, id, pname, params)
#define glGetPathColorGenfvNV(color, pname, value) wrapGlFunc(glGetPathColorGenfvNV, color, pname, value)
#define glGetPathColorGenivNV(color, pname, value) wrapGlFunc(glGetPathColorGenivNV, color, pname, value)
#define glGetPathCommandsNV(path, commands) wrapGlFunc(glGetPathCommandsNV, path, commands)
#define glGetPathCoordsNV(path, coords) wrapGlFunc(glGetPathCoordsNV, path, coords)
#define glGetPathDashArrayNV(path, dashArray) wrapGlFunc(glGetPathDashArrayNV, path, dashArray)
#define glGetPathMetricRangeNV(metricQueryMask, firstPathName, numPaths, stride, metrics) wrapGlFunc(glGetPathMetricRangeNV, metricQueryMask, firstPathName, numPaths, stride, metrics)
#define glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics) wrapGlFunc(glGetPathMetricsNV, metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics)
#define glGetPathParameterfvNV(path, pname, value) wrapGlFunc(glGetPathParameterfvNV, path, pname, value)
#define glGetPathParameterivNV(path, pname, value) wrapGlFunc(glGetPathParameterivNV, path, pname, value)
#define glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing) wrapGlFunc(glGetPathSpacingNV, pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing)
#define glGetPathTexGenfvNV(texCoordSet, pname, value) wrapGlFunc(glGetPathTexGenfvNV, texCoordSet, pname, value)
#define glGetPathTexGenivNV(texCoordSet, pname, value) wrapGlFunc(glGetPathTexGenivNV, texCoordSet, pname, value)
#define glGetPerfCounterInfoINTEL(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue) wrapGlFunc(glGetPerfCounterInfoINTEL, queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue)
#define glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten) wrapGlFunc(glGetPerfMonitorCounterDataAMD, monitor, pname, dataSize, data, bytesWritten)
#define glGetPerfMonitorCounterInfoAMD(group, counter, pname, data) wrapGlFunc(glGetPerfMonitorCounterInfoAMD, group, counter, pname, data)
#define glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString) wrapGlFunc(glGetPerfMonitorCounterStringAMD, group, counter, bufSize, length, counterString)
#define glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, counterSize, counters) wrapGlFunc(glGetPerfMonitorCountersAMD, group, numCounters, maxActiveCounters, counterSize, counters)
#define glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString) wrapGlFunc(glGetPerfMonitorGroupStringAMD, group, bufSize, length, groupString)
#define glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups) wrapGlFunc(glGetPerfMonitorGroupsAMD, numGroups, groupsSize, groups)
#define glGetPerfQueryDataINTEL(queryHandle, flags, dataSize, data, bytesWritten) wrapGlFunc(glGetPerfQueryDataINTEL, queryHandle, flags, dataSize, data, bytesWritten)
#define glGetPerfQueryIdByNameINTEL(queryName, queryId) wrapGlFunc(glGetPerfQueryIdByNameINTEL, queryName, queryId)
#define glGetPerfQueryInfoINTEL(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask) wrapGlFunc(glGetPerfQueryInfoINTEL, queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask)
#define glGetPixelMapfv(map, values) wrapGlFunc(glGetPixelMapfv, map, values)
#define glGetPixelMapuiv(map, values) wrapGlFunc(glGetPixelMapuiv, map, values)
#define glGetPixelMapusv(map, values) wrapGlFunc(glGetPixelMapusv, map, values)
#define glGetPixelMapxv(map, size, values) wrapGlFunc(glGetPixelMapxv, map, size, values)
#define glGetPixelTexGenParameterfvSGIS(pname, params) wrapGlFunc(glGetPixelTexGenParameterfvSGIS, pname, params)
#define glGetPixelTexGenParameterivSGIS(pname, params) wrapGlFunc(glGetPixelTexGenParameterivSGIS, pname, params)
#define glGetPixelTransformParameterfvEXT(target, pname, params) wrapGlFunc(glGetPixelTransformParameterfvEXT, target, pname, params)
#define glGetPixelTransformParameterivEXT(target, pname, params) wrapGlFunc(glGetPixelTransformParameterivEXT, target, pname, params)
#define glGetPointerIndexedvEXT(target, index, data) wrapGlFunc(glGetPointerIndexedvEXT, target, index, data)
#define glGetPointeri_vEXT(pname, index, params) wrapGlFunc(glGetPointeri_vEXT, pname, index, params)
#define glGetPointerv(pname, params) wrapGlFunc(glGetPointerv, pname, params)
#define glGetPointervEXT(pname, params) wrapGlFunc(glGetPointervEXT, pname, params)
#define glGetPointervKHR(pname, params) wrapGlFunc(glGetPointervKHR, pname, params)
#define glGetPolygonStipple(mask) wrapGlFunc(glGetPolygonStipple, mask)
#define glGetProgramBinary(program, bufSize, length, binaryFormat, binary) wrapGlFunc(glGetProgramBinary, program, bufSize, length, binaryFormat, binary)
#define glGetProgramBinaryOES(program, bufSize, length, binaryFormat, binary) wrapGlFunc(glGetProgramBinaryOES, program, bufSize, length, binaryFormat, binary)
#define glGetProgramEnvParameterIivNV(target, index, params) wrapGlFunc(glGetProgramEnvParameterIivNV, target, index, params)
#define glGetProgramEnvParameterIuivNV(target, index, params) wrapGlFunc(glGetProgramEnvParameterIuivNV, target, index, params)
#define glGetProgramEnvParameterdvARB(target, index, params) wrapGlFunc(glGetProgramEnvParameterdvARB, target, index, params)
#define glGetProgramEnvParameterfvARB(target, index, params) wrapGlFunc(glGetProgramEnvParameterfvARB, target, index, params)
#define glGetProgramInfoLog(program, bufSize, length, infoLog) wrapGlFunc(glGetProgramInfoLog, program, bufSize, length, infoLog)
#define glGetProgramInterfaceiv(program, programInterface, pname, params) wrapGlFunc(glGetProgramInterfaceiv, program, programInterface, pname, params)
#define glGetProgramLocalParameterIivNV(target, index, params) wrapGlFunc(glGetProgramLocalParameterIivNV, target, index, params)
#define glGetProgramLocalParameterIuivNV(target, index, params) wrapGlFunc(glGetProgramLocalParameterIuivNV, target, index, params)
#define glGetProgramLocalParameterdvARB(target, index, params) wrapGlFunc(glGetProgramLocalParameterdvARB, target, index, params)
#define glGetProgramLocalParameterfvARB(target, index, params) wrapGlFunc(glGetProgramLocalParameterfvARB, target, index, params)
#define glGetProgramNamedParameterdvNV(id, len, name, params) wrapGlFunc(glGetProgramNamedParameterdvNV, id, len, name, params)
#define glGetProgramNamedParameterfvNV(id, len, name, params) wrapGlFunc(glGetProgramNamedParameterfvNV, id, len, name, params)
#define glGetProgramParameterdvNV(target, index, pname, params) wrapGlFunc(glGetProgramParameterdvNV, target, index, pname, params)
#define glGetProgramParameterfvNV(target, index, pname, params) wrapGlFunc(glGetProgramParameterfvNV, target, index, pname, params)
#define glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog) wrapGlFunc(glGetProgramPipelineInfoLog, pipeline, bufSize, length, infoLog)
#define glGetProgramPipelineInfoLogEXT(pipeline, bufSize, length, infoLog) wrapGlFunc(glGetProgramPipelineInfoLogEXT, pipeline, bufSize, length, infoLog)
#define glGetProgramPipelineiv(pipeline, pname, params) wrapGlFunc(glGetProgramPipelineiv, pipeline, pname, params)
#define glGetProgramPipelineivEXT(pipeline, pname, params) wrapGlFunc(glGetProgramPipelineivEXT, pipeline, pname, params)
#define glGetProgramResourceName(program, programInterface, index, bufSize, length, name) wrapGlFunc(glGetProgramResourceName, program, programInterface, index, bufSize, length, name)
#define glGetProgramResourcefvNV(program, programInterface, index, propCount, props, bufSize, length, params) wrapGlFunc(glGetProgramResourcefvNV, program, programInterface, index, propCount, props, bufSize, length, params)
#define glGetProgramResourceiv(program, programInterface, index, propCount, props, bufSize, length, params) wrapGlFunc(glGetProgramResourceiv, program, programInterface, index, propCount, props, bufSize, length, params)
#define glGetProgramStageiv(program, shadertype, pname, values) wrapGlFunc(glGetProgramStageiv, program, shadertype, pname, values)
#define glGetProgramStringARB(target, pname, string) wrapGlFunc(glGetProgramStringARB, target, pname, string)
#define glGetProgramStringNV(id, pname, program) wrapGlFunc(glGetProgramStringNV, id, pname, program)
#define glGetProgramSubroutineParameteruivNV(target, index, param) wrapGlFunc(glGetProgramSubroutineParameteruivNV, target, index, param)
#define glGetProgramiv(program, pname, params) wrapGlFunc(glGetProgramiv, program, pname, params)
#define glGetProgramivARB(target, pname, params) wrapGlFunc(glGetProgramivARB, target, pname, params)
#define glGetProgramivNV(id, pname, params) wrapGlFunc(glGetProgramivNV, id, pname, params)
#define glGetQueryBufferObjecti64v(id, buffer, pname, offset) wrapGlFunc(glGetQueryBufferObjecti64v, id, buffer, pname, offset)
#define glGetQueryBufferObjectiv(id, buffer, pname, offset) wrapGlFunc(glGetQueryBufferObjectiv, id, buffer, pname, offset)
#define glGetQueryBufferObjectui64v(id, buffer, pname, offset) wrapGlFunc(glGetQueryBufferObjectui64v, id, buffer, pname, offset)
#define glGetQueryBufferObjectuiv(id, buffer, pname, offset) wrapGlFunc(glGetQueryBufferObjectuiv, id, buffer, pname, offset)
#define glGetQueryIndexediv(target, index, pname, params) wrapGlFunc(glGetQueryIndexediv, target, index, pname, params)
#define glGetQueryObjecti64v(id, pname, params) wrapGlFunc(glGetQueryObjecti64v, id, pname, params)
#define glGetQueryObjecti64vEXT(id, pname, params) wrapGlFunc(glGetQueryObjecti64vEXT, id, pname, params)
#define glGetQueryObjectiv(id, pname, params) wrapGlFunc(glGetQueryObjectiv, id, pname, params)
#define glGetQueryObjectivARB(id, pname, params) wrapGlFunc(glGetQueryObjectivARB, id, pname, params)
#define glGetQueryObjectivEXT(id, pname, params) wrapGlFunc(glGetQueryObjectivEXT, id, pname, params)
#define glGetQueryObjectui64v(id, pname, params) wrapGlFunc(glGetQueryObjectui64v, id, pname, params)
#define glGetQueryObjectui64vEXT(id, pname, params) wrapGlFunc(glGetQueryObjectui64vEXT, id, pname, params)
#define glGetQueryObjectuiv(id, pname, params) wrapGlFunc(glGetQueryObjectuiv, id, pname, params)
#define glGetQueryObjectuivARB(id, pname, params) wrapGlFunc(glGetQueryObjectuivARB, id, pname, params)
#define glGetQueryObjectuivEXT(id, pname, params) wrapGlFunc(glGetQueryObjectuivEXT, id, pname, params)
#define glGetQueryiv(target, pname, params) wrapGlFunc(glGetQueryiv, target, pname, params)
#define glGetQueryivARB(target, pname, params) wrapGlFunc(glGetQueryivARB, target, pname, params)
#define glGetQueryivEXT(target, pname, params) wrapGlFunc(glGetQueryivEXT, target, pname, params)
#define glGetRenderbufferParameteriv(target, pname, params) wrapGlFunc(glGetRenderbufferParameteriv, target, pname, params)
#define glGetRenderbufferParameterivEXT(target, pname, params) wrapGlFunc(glGetRenderbufferParameterivEXT, target, pname, params)
#define glGetRenderbufferParameterivOES(target, pname, params) wrapGlFunc(glGetRenderbufferParameterivOES, target, pname, params)
#define glGetSamplerParameterIiv(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIiv, sampler, pname, params)
#define glGetSamplerParameterIivEXT(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIivEXT, sampler, pname, params)
#define glGetSamplerParameterIivOES(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIivOES, sampler, pname, params)
#define glGetSamplerParameterIuiv(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIuiv, sampler, pname, params)
#define glGetSamplerParameterIuivEXT(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIuivEXT, sampler, pname, params)
#define glGetSamplerParameterIuivOES(sampler, pname, params) wrapGlFunc(glGetSamplerParameterIuivOES, sampler, pname, params)
#define glGetSamplerParameterfv(sampler, pname, params) wrapGlFunc(glGetSamplerParameterfv, sampler, pname, params)
#define glGetSamplerParameteriv(sampler, pname, params) wrapGlFunc(glGetSamplerParameteriv, sampler, pname, params)
#define glGetSeparableFilter(target, format, type, row, column, span) wrapGlFunc(glGetSeparableFilter, target, format, type, row, column, span)
#define glGetSeparableFilterEXT(target, format, type, row, column, span) wrapGlFunc(glGetSeparableFilterEXT, target, format, type, row, column, span)
#define glGetShaderInfoLog(shader, bufSize, length, infoLog) wrapGlFunc(glGetShaderInfoLog, shader, bufSize, length, infoLog)
#define glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision) wrapGlFunc(glGetShaderPrecisionFormat, shadertype, precisiontype, range, precision)
#define glGetShaderSource(shader, bufSize, length, source) wrapGlFunc(glGetShaderSource, shader, bufSize, length, source)
#define glGetShaderSourceARB(obj, maxLength, length, source) wrapGlFunc(glGetShaderSourceARB, obj, maxLength, length, source)
#define glGetShaderiv(shader, pname, params) wrapGlFunc(glGetShaderiv, shader, pname, params)
#define glGetSharpenTexFuncSGIS(target, points) wrapGlFunc(glGetSharpenTexFuncSGIS, target, points)
#define glGetSynciv(sync, pname, bufSize, length, values) wrapGlFunc(glGetSynciv, sync, pname, bufSize, length, values)
#define glGetSyncivAPPLE(sync, pname, bufSize, length, values) wrapGlFunc(glGetSyncivAPPLE, sync, pname, bufSize, length, values)
#define glGetTexBumpParameterfvATI(pname, param) wrapGlFunc(glGetTexBumpParameterfvATI, pname, param)
#define glGetTexBumpParameterivATI(pname, param) wrapGlFunc(glGetTexBumpParameterivATI, pname, param)
#define glGetTexEnvfv(target, pname, params) wrapGlFunc(glGetTexEnvfv, target, pname, params)
#define glGetTexEnviv(target, pname, params) wrapGlFunc(glGetTexEnviv, target, pname, params)
#define glGetTexEnvxv(target, pname, params) wrapGlFunc(glGetTexEnvxv, target, pname, params)
#define glGetTexEnvxvOES(target, pname, params) wrapGlFunc(glGetTexEnvxvOES, target, pname, params)
#define glGetTexFilterFuncSGIS(target, filter, weights) wrapGlFunc(glGetTexFilterFuncSGIS, target, filter, weights)
#define glGetTexGendv(coord, pname, params) wrapGlFunc(glGetTexGendv, coord, pname, params)
#define glGetTexGenfv(coord, pname, params) wrapGlFunc(glGetTexGenfv, coord, pname, params)
#define glGetTexGenfvOES(coord, pname, params) wrapGlFunc(glGetTexGenfvOES, coord, pname, params)
#define glGetTexGeniv(coord, pname, params) wrapGlFunc(glGetTexGeniv, coord, pname, params)
#define glGetTexGenivOES(coord, pname, params) wrapGlFunc(glGetTexGenivOES, coord, pname, params)
#define glGetTexGenxvOES(coord, pname, params) wrapGlFunc(glGetTexGenxvOES, coord, pname, params)
#define glGetTexImage(target, level, format, type, pixels) wrapGlFunc(glGetTexImage, target, level, format, type, pixels)
#define glGetTexLevelParameterfv(target, level, pname, params) wrapGlFunc(glGetTexLevelParameterfv, target, level, pname, params)
#define glGetTexLevelParameteriv(target, level, pname, params) wrapGlFunc(glGetTexLevelParameteriv, target, level, pname, params)
#define glGetTexLevelParameterxvOES(target, level, pname, params) wrapGlFunc(glGetTexLevelParameterxvOES, target, level, pname, params)
#define glGetTexParameterIiv(target, pname, params) wrapGlFunc(glGetTexParameterIiv, target, pname, params)
#define glGetTexParameterIivEXT(target, pname, params) wrapGlFunc(glGetTexParameterIivEXT, target, pname, params)
#define glGetTexParameterIivOES(target, pname, params) wrapGlFunc(glGetTexParameterIivOES, target, pname, params)
#define glGetTexParameterIuiv(target, pname, params) wrapGlFunc(glGetTexParameterIuiv, target, pname, params)
#define glGetTexParameterIuivEXT(target, pname, params) wrapGlFunc(glGetTexParameterIuivEXT, target, pname, params)
#define glGetTexParameterIuivOES(target, pname, params) wrapGlFunc(glGetTexParameterIuivOES, target, pname, params)
#define glGetTexParameterPointervAPPLE(target, pname, params) wrapGlFunc(glGetTexParameterPointervAPPLE, target, pname, params)
#define glGetTexParameterfv(target, pname, params) wrapGlFunc(glGetTexParameterfv, target, pname, params)
#define glGetTexParameteriv(target, pname, params) wrapGlFunc(glGetTexParameteriv, target, pname, params)
#define glGetTexParameterxv(target, pname, params) wrapGlFunc(glGetTexParameterxv, target, pname, params)
#define glGetTexParameterxvOES(target, pname, params) wrapGlFunc(glGetTexParameterxvOES, target, pname, params)
#define glGetTextureImage(texture, level, format, type, bufSize, pixels) wrapGlFunc(glGetTextureImage, texture, level, format, type, bufSize, pixels)
#define glGetTextureImageEXT(texture, target, level, format, type, pixels) wrapGlFunc(glGetTextureImageEXT, texture, target, level, format, type, pixels)
#define glGetTextureLevelParameterfv(texture, level, pname, params) wrapGlFunc(glGetTextureLevelParameterfv, texture, level, pname, params)
#define glGetTextureLevelParameterfvEXT(texture, target, level, pname, params) wrapGlFunc(glGetTextureLevelParameterfvEXT, texture, target, level, pname, params)
#define glGetTextureLevelParameteriv(texture, level, pname, params) wrapGlFunc(glGetTextureLevelParameteriv, texture, level, pname, params)
#define glGetTextureLevelParameterivEXT(texture, target, level, pname, params) wrapGlFunc(glGetTextureLevelParameterivEXT, texture, target, level, pname, params)
#define glGetTextureParameterIiv(texture, pname, params) wrapGlFunc(glGetTextureParameterIiv, texture, pname, params)
#define glGetTextureParameterIivEXT(texture, target, pname, params) wrapGlFunc(glGetTextureParameterIivEXT, texture, target, pname, params)
#define glGetTextureParameterIuiv(texture, pname, params) wrapGlFunc(glGetTextureParameterIuiv, texture, pname, params)
#define glGetTextureParameterIuivEXT(texture, target, pname, params) wrapGlFunc(glGetTextureParameterIuivEXT, texture, target, pname, params)
#define glGetTextureParameterfv(texture, pname, params) wrapGlFunc(glGetTextureParameterfv, texture, pname, params)
#define glGetTextureParameterfvEXT(texture, target, pname, params) wrapGlFunc(glGetTextureParameterfvEXT, texture, target, pname, params)
#define glGetTextureParameteriv(texture, pname, params) wrapGlFunc(glGetTextureParameteriv, texture, pname, params)
#define glGetTextureParameterivEXT(texture, target, pname, params) wrapGlFunc(glGetTextureParameterivEXT, texture, target, pname, params)
#define glGetTextureSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels) wrapGlFunc(glGetTextureSubImage, texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels)
#define glGetTrackMatrixivNV(target, address, pname, params) wrapGlFunc(glGetTrackMatrixivNV, target, address, pname, params)
#define glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name) wrapGlFunc(glGetTransformFeedbackVarying, program, index, bufSize, length, size, type, name)
#define glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name) wrapGlFunc(glGetTransformFeedbackVaryingEXT, program, index, bufSize, length, size, type, name)
#define glGetTransformFeedbackVaryingNV(program, index, location) wrapGlFunc(glGetTransformFeedbackVaryingNV, program, index, location)
#define glGetTransformFeedbacki64_v(xfb, pname, index, param) wrapGlFunc(glGetTransformFeedbacki64_v, xfb, pname, index, param)
#define glGetTransformFeedbacki_v(xfb, pname, index, param) wrapGlFunc(glGetTransformFeedbacki_v, xfb, pname, index, param)
#define glGetTransformFeedbackiv(xfb, pname, param) wrapGlFunc(glGetTransformFeedbackiv, xfb, pname, param)
#define glGetTranslatedShaderSourceANGLE(shader, bufsize, length, source) wrapGlFunc(glGetTranslatedShaderSourceANGLE, shader, bufsize, length, source)
#define glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices) wrapGlFunc(glGetUniformIndices, program, uniformCount, uniformNames, uniformIndices)
#define glGetUniformSubroutineuiv(shadertype, location, params) wrapGlFunc(glGetUniformSubroutineuiv, shadertype, location, params)
#define glGetUniformdv(program, location, params) wrapGlFunc(glGetUniformdv, program, location, params)
#define glGetUniformfv(program, location, params) wrapGlFunc(glGetUniformfv, program, location, params)
#define glGetUniformfvARB(programObj, location, params) wrapGlFunc(glGetUniformfvARB, programObj, location, params)
#define glGetUniformi64vARB(program, location, params) wrapGlFunc(glGetUniformi64vARB, program, location, params)
#define glGetUniformi64vNV(program, location, params) wrapGlFunc(glGetUniformi64vNV, program, location, params)
#define glGetUniformiv(program, location, params) wrapGlFunc(glGetUniformiv, program, location, params)
#define glGetUniformivARB(programObj, location, params) wrapGlFunc(glGetUniformivARB, programObj, location, params)
#define glGetUniformui64vARB(program, location, params) wrapGlFunc(glGetUniformui64vARB, program, location, params)
#define glGetUniformui64vNV(program, location, params) wrapGlFunc(glGetUniformui64vNV, program, location, params)
#define glGetUniformuiv(program, location, params) wrapGlFunc(glGetUniformuiv, program, location, params)
#define glGetUniformuivEXT(program, location, params) wrapGlFunc(glGetUniformuivEXT, program, location, params)
#define glGetVariantArrayObjectfvATI(id, pname, params) wrapGlFunc(glGetVariantArrayObjectfvATI, id, pname, params)
#define glGetVariantArrayObjectivATI(id, pname, params) wrapGlFunc(glGetVariantArrayObjectivATI, id, pname, params)
#define glGetVariantBooleanvEXT(id, value, data) wrapGlFunc(glGetVariantBooleanvEXT, id, value, data)
#define glGetVariantFloatvEXT(id, value, data) wrapGlFunc(glGetVariantFloatvEXT, id, value, data)
#define glGetVariantIntegervEXT(id, value, data) wrapGlFunc(glGetVariantIntegervEXT, id, value, data)
#define glGetVariantPointervEXT(id, value, data) wrapGlFunc(glGetVariantPointervEXT, id, value, data)
#define glGetVertexArrayIndexed64iv(vaobj, index, pname, param) wrapGlFunc(glGetVertexArrayIndexed64iv, vaobj, index, pname, param)
#define glGetVertexArrayIndexediv(vaobj, index, pname, param) wrapGlFunc(glGetVertexArrayIndexediv, vaobj, index, pname, param)
#define glGetVertexArrayIntegeri_vEXT(vaobj, index, pname, param) wrapGlFunc(glGetVertexArrayIntegeri_vEXT, vaobj, index, pname, param)
#define glGetVertexArrayIntegervEXT(vaobj, pname, param) wrapGlFunc(glGetVertexArrayIntegervEXT, vaobj, pname, param)
#define glGetVertexArrayPointeri_vEXT(vaobj, index, pname, param) wrapGlFunc(glGetVertexArrayPointeri_vEXT, vaobj, index, pname, param)
#define glGetVertexArrayPointervEXT(vaobj, pname, param) wrapGlFunc(glGetVertexArrayPointervEXT, vaobj, pname, param)
#define glGetVertexArrayiv(vaobj, pname, param) wrapGlFunc(glGetVertexArrayiv, vaobj, pname, param)
#define glGetVertexAttribArrayObjectfvATI(index, pname, params) wrapGlFunc(glGetVertexAttribArrayObjectfvATI, index, pname, params)
#define glGetVertexAttribArrayObjectivATI(index, pname, params) wrapGlFunc(glGetVertexAttribArrayObjectivATI, index, pname, params)
#define glGetVertexAttribIiv(index, pname, params) wrapGlFunc(glGetVertexAttribIiv, index, pname, params)
#define glGetVertexAttribIivEXT(index, pname, params) wrapGlFunc(glGetVertexAttribIivEXT, index, pname, params)
#define glGetVertexAttribIuiv(index, pname, params) wrapGlFunc(glGetVertexAttribIuiv, index, pname, params)
#define glGetVertexAttribIuivEXT(index, pname, params) wrapGlFunc(glGetVertexAttribIuivEXT, index, pname, params)
#define glGetVertexAttribLdv(index, pname, params) wrapGlFunc(glGetVertexAttribLdv, index, pname, params)
#define glGetVertexAttribLdvEXT(index, pname, params) wrapGlFunc(glGetVertexAttribLdvEXT, index, pname, params)
#define glGetVertexAttribLi64vNV(index, pname, params) wrapGlFunc(glGetVertexAttribLi64vNV, index, pname, params)
#define glGetVertexAttribLui64vARB(index, pname, params) wrapGlFunc(glGetVertexAttribLui64vARB, index, pname, params)
#define glGetVertexAttribLui64vNV(index, pname, params) wrapGlFunc(glGetVertexAttribLui64vNV, index, pname, params)
#define glGetVertexAttribPointerv(index, pname, pointer) wrapGlFunc(glGetVertexAttribPointerv, index, pname, pointer)
#define glGetVertexAttribPointervARB(index, pname, pointer) wrapGlFunc(glGetVertexAttribPointervARB, index, pname, pointer)
#define glGetVertexAttribPointervNV(index, pname, pointer) wrapGlFunc(glGetVertexAttribPointervNV, index, pname, pointer)
#define glGetVertexAttribdv(index, pname, params) wrapGlFunc(glGetVertexAttribdv, index, pname, params)
#define glGetVertexAttribdvARB(index, pname, params) wrapGlFunc(glGetVertexAttribdvARB, index, pname, params)
#define glGetVertexAttribdvNV(index, pname, params) wrapGlFunc(glGetVertexAttribdvNV, index, pname, params)
#define glGetVertexAttribfv(index, pname, params) wrapGlFunc(glGetVertexAttribfv, index, pname, params)
#define glGetVertexAttribfvARB(index, pname, params) wrapGlFunc(glGetVertexAttribfvARB, index, pname, params)
#define glGetVertexAttribfvNV(index, pname, params) wrapGlFunc(glGetVertexAttribfvNV, index, pname, params)
#define glGetVertexAttribiv(index, pname, params) wrapGlFunc(glGetVertexAttribiv, index, pname, params)
#define glGetVertexAttribivARB(index, pname, params) wrapGlFunc(glGetVertexAttribivARB, index, pname, params)
#define glGetVertexAttribivNV(index, pname, params) wrapGlFunc(glGetVertexAttribivNV, index, pname, params)
#define glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params) wrapGlFunc(glGetVideoCaptureStreamdvNV, video_capture_slot, stream, pname, params)
#define glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params) wrapGlFunc(glGetVideoCaptureStreamfvNV, video_capture_slot, stream, pname, params)
#define glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params) wrapGlFunc(glGetVideoCaptureStreamivNV, video_capture_slot, stream, pname, params)
#define glGetVideoCaptureivNV(video_capture_slot, pname, params) wrapGlFunc(glGetVideoCaptureivNV, video_capture_slot, pname, params)
#define glGetVideoi64vNV(video_slot, pname, params) wrapGlFunc(glGetVideoi64vNV, video_slot, pname, params)
#define glGetVideoivNV(video_slot, pname, params) wrapGlFunc(glGetVideoivNV, video_slot, pname, params)
#define glGetVideoui64vNV(video_slot, pname, params) wrapGlFunc(glGetVideoui64vNV, video_slot, pname, params)
#define glGetVideouivNV(video_slot, pname, params) wrapGlFunc(glGetVideouivNV, video_slot, pname, params)
#define glGetnColorTable(target, format, type, bufSize, table) wrapGlFunc(glGetnColorTable, target, format, type, bufSize, table)
#define glGetnColorTableARB(target, format, type, bufSize, table) wrapGlFunc(glGetnColorTableARB, target, format, type, bufSize, table)
#define glGetnCompressedTexImage(target, lod, bufSize, pixels) wrapGlFunc(glGetnCompressedTexImage, target, lod, bufSize, pixels)
#define glGetnCompressedTexImageARB(target, lod, bufSize, img) wrapGlFunc(glGetnCompressedTexImageARB, target, lod, bufSize, img)
#define glGetnConvolutionFilter(target, format, type, bufSize, image) wrapGlFunc(glGetnConvolutionFilter, target, format, type, bufSize, image)
#define glGetnConvolutionFilterARB(target, format, type, bufSize, image) wrapGlFunc(glGetnConvolutionFilterARB, target, format, type, bufSize, image)
#define glGetnHistogram(target, reset, format, type, bufSize, values) wrapGlFunc(glGetnHistogram, target, reset, format, type, bufSize, values)
#define glGetnHistogramARB(target, reset, format, type, bufSize, values) wrapGlFunc(glGetnHistogramARB, target, reset, format, type, bufSize, values)
#define glGetnMapdv(target, query, bufSize, v) wrapGlFunc(glGetnMapdv, target, query, bufSize, v)
#define glGetnMapdvARB(target, query, bufSize, v) wrapGlFunc(glGetnMapdvARB, target, query, bufSize, v)
#define glGetnMapfv(target, query, bufSize, v) wrapGlFunc(glGetnMapfv, target, query, bufSize, v)
#define glGetnMapfvARB(target, query, bufSize, v) wrapGlFunc(glGetnMapfvARB, target, query, bufSize, v)
#define glGetnMapiv(target, query, bufSize, v) wrapGlFunc(glGetnMapiv, target, query, bufSize, v)
#define glGetnMapivARB(target, query, bufSize, v) wrapGlFunc(glGetnMapivARB, target, query, bufSize, v)
#define glGetnMinmax(target, reset, format, type, bufSize, values) wrapGlFunc(glGetnMinmax, target, reset, format, type, bufSize, values)
#define glGetnMinmaxARB(target, reset, format, type, bufSize, values) wrapGlFunc(glGetnMinmaxARB, target, reset, format, type, bufSize, values)
#define glGetnPixelMapfv(map, bufSize, values) wrapGlFunc(glGetnPixelMapfv, map, bufSize, values)
#define glGetnPixelMapfvARB(map, bufSize, values) wrapGlFunc(glGetnPixelMapfvARB, map, bufSize, values)
#define glGetnPixelMapuiv(map, bufSize, values) wrapGlFunc(glGetnPixelMapuiv, map, bufSize, values)
#define glGetnPixelMapuivARB(map, bufSize, values) wrapGlFunc(glGetnPixelMapuivARB, map, bufSize, values)
#define glGetnPixelMapusv(map, bufSize, values) wrapGlFunc(glGetnPixelMapusv, map, bufSize, values)
#define glGetnPixelMapusvARB(map, bufSize, values) wrapGlFunc(glGetnPixelMapusvARB, map, bufSize, values)
#define glGetnPolygonStipple(bufSize, pattern) wrapGlFunc(glGetnPolygonStipple, bufSize, pattern)
#define glGetnPolygonStippleARB(bufSize, pattern) wrapGlFunc(glGetnPolygonStippleARB, bufSize, pattern)
#define glGetnSeparableFilter(target, format, type, rowBufSize, row, columnBufSize, column, span) wrapGlFunc(glGetnSeparableFilter, target, format, type, rowBufSize, row, columnBufSize, column, span)
#define glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span) wrapGlFunc(glGetnSeparableFilterARB, target, format, type, rowBufSize, row, columnBufSize, column, span)
#define glGetnTexImage(target, level, format, type, bufSize, pixels) wrapGlFunc(glGetnTexImage, target, level, format, type, bufSize, pixels)
#define glGetnTexImageARB(target, level, format, type, bufSize, img) wrapGlFunc(glGetnTexImageARB, target, level, format, type, bufSize, img)
#define glGetnUniformdv(program, location, bufSize, params) wrapGlFunc(glGetnUniformdv, program, location, bufSize, params)
#define glGetnUniformdvARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformdvARB, program, location, bufSize, params)
#define glGetnUniformfv(program, location, bufSize, params) wrapGlFunc(glGetnUniformfv, program, location, bufSize, params)
#define glGetnUniformfvARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformfvARB, program, location, bufSize, params)
#define glGetnUniformfvEXT(program, location, bufSize, params) wrapGlFunc(glGetnUniformfvEXT, program, location, bufSize, params)
#define glGetnUniformfvKHR(program, location, bufSize, params) wrapGlFunc(glGetnUniformfvKHR, program, location, bufSize, params)
#define glGetnUniformi64vARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformi64vARB, program, location, bufSize, params)
#define glGetnUniformiv(program, location, bufSize, params) wrapGlFunc(glGetnUniformiv, program, location, bufSize, params)
#define glGetnUniformivARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformivARB, program, location, bufSize, params)
#define glGetnUniformivEXT(program, location, bufSize, params) wrapGlFunc(glGetnUniformivEXT, program, location, bufSize, params)
#define glGetnUniformivKHR(program, location, bufSize, params) wrapGlFunc(glGetnUniformivKHR, program, location, bufSize, params)
#define glGetnUniformui64vARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformui64vARB, program, location, bufSize, params)
#define glGetnUniformuiv(program, location, bufSize, params) wrapGlFunc(glGetnUniformuiv, program, location, bufSize, params)
#define glGetnUniformuivARB(program, location, bufSize, params) wrapGlFunc(glGetnUniformuivARB, program, location, bufSize, params)
#define glGetnUniformuivKHR(program, location, bufSize, params) wrapGlFunc(glGetnUniformuivKHR, program, location, bufSize, params)
#define glGlobalAlphaFactorbSUN(factor) wrapGlFunc(glGlobalAlphaFactorbSUN, factor)
#define glGlobalAlphaFactordSUN(factor) wrapGlFunc(glGlobalAlphaFactordSUN, factor)
#define glGlobalAlphaFactorfSUN(factor) wrapGlFunc(glGlobalAlphaFactorfSUN, factor)
#define glGlobalAlphaFactoriSUN(factor) wrapGlFunc(glGlobalAlphaFactoriSUN, factor)
#define glGlobalAlphaFactorsSUN(factor) wrapGlFunc(glGlobalAlphaFactorsSUN, factor)
#define glGlobalAlphaFactorubSUN(factor) wrapGlFunc(glGlobalAlphaFactorubSUN, factor)
#define glGlobalAlphaFactoruiSUN(factor) wrapGlFunc(glGlobalAlphaFactoruiSUN, factor)
#define glGlobalAlphaFactorusSUN(factor) wrapGlFunc(glGlobalAlphaFactorusSUN, factor)
#define glHint(target, mode) wrapGlFunc(glHint, target, mode)
#define glHintPGI(target, mode) wrapGlFunc(glHintPGI, target, mode)
#define glHistogram(target, width, internalformat, sink) wrapGlFunc(glHistogram, target, width, internalformat, sink)
#define glHistogramEXT(target, width, internalformat, sink) wrapGlFunc(glHistogramEXT, target, width, internalformat, sink)
#define glIglooInterfaceSGIX(pname, params) wrapGlFunc(glIglooInterfaceSGIX, pname, params)
#define glImageTransformParameterfHP(target, pname, param) wrapGlFunc(glImageTransformParameterfHP, target, pname, param)
#define glImageTransformParameterfvHP(target, pname, params) wrapGlFunc(glImageTransformParameterfvHP, target, pname, params)
#define glImageTransformParameteriHP(target, pname, param) wrapGlFunc(glImageTransformParameteriHP, target, pname, param)
#define glImageTransformParameterivHP(target, pname, params) wrapGlFunc(glImageTransformParameterivHP, target, pname, params)
#define glIndexFormatNV(type, stride) wrapGlFunc(glIndexFormatNV, type, stride)
#define glIndexFuncEXT(func, ref) wrapGlFunc(glIndexFuncEXT, func, ref)
#define glIndexMask(mask) wrapGlFunc(glIndexMask, mask)
#define glIndexMaterialEXT(face, mode) wrapGlFunc(glIndexMaterialEXT, face, mode)
#define glIndexPointer(type, stride, pointer) wrapGlFunc(glIndexPointer, type, stride, pointer)
#define glIndexPointerEXT(type, stride, count, pointer) wrapGlFunc(glIndexPointerEXT, type, stride, count, pointer)
#define glIndexPointerListIBM(type, stride, pointer, ptrstride) wrapGlFunc(glIndexPointerListIBM, type, stride, pointer, ptrstride)
#define glIndexd(c) wrapGlFunc(glIndexd, c)
#define glIndexdv(c) wrapGlFunc(glIndexdv, c)
#define glIndexf(c) wrapGlFunc(glIndexf, c)
#define glIndexfv(c) wrapGlFunc(glIndexfv, c)
#define glIndexi(c) wrapGlFunc(glIndexi, c)
#define glIndexiv(c) wrapGlFunc(glIndexiv, c)
#define glIndexs(c) wrapGlFunc(glIndexs, c)
#define glIndexsv(c) wrapGlFunc(glIndexsv, c)
#define glIndexub(c) wrapGlFunc(glIndexub, c)
#define glIndexubv(c) wrapGlFunc(glIndexubv, c)
#define glIndexxOES(component) wrapGlFunc(glIndexxOES, component)
#define glIndexxvOES(component) wrapGlFunc(glIndexxvOES, component)
#define glInitNames() wrapGlFuncNoArgs(glInitNames)
#define glInsertComponentEXT(res, src, num) wrapGlFunc(glInsertComponentEXT, res, src, num)
#define glInsertEventMarkerEXT(length, marker) wrapGlFunc(glInsertEventMarkerEXT, length, marker)
#define glInstrumentsBufferSGIX(size, buffer) wrapGlFunc(glInstrumentsBufferSGIX, size, buffer)
#define glInterleavedArrays(format, stride, pointer) wrapGlFunc(glInterleavedArrays, format, stride, pointer)
#define glInterpolatePathsNV(resultPath, pathA, pathB, weight) wrapGlFunc(glInterpolatePathsNV, resultPath, pathA, pathB, weight)
#define glInvalidateBufferData(buffer) wrapGlFunc(glInvalidateBufferData, buffer)
#define glInvalidateBufferSubData(buffer, offset, length) wrapGlFunc(glInvalidateBufferSubData, buffer, offset, length)
#define glInvalidateFramebuffer(target, numAttachments, attachments) wrapGlFunc(glInvalidateFramebuffer, target, numAttachments, attachments)
#define glInvalidateNamedFramebufferData(framebuffer, numAttachments, attachments) wrapGlFunc(glInvalidateNamedFramebufferData, framebuffer, numAttachments, attachments)
#define glInvalidateNamedFramebufferSubData(framebuffer, numAttachments, attachments, x, y, width, height) wrapGlFunc(glInvalidateNamedFramebufferSubData, framebuffer, numAttachments, attachments, x, y, width, height)
#define glInvalidateSubFramebuffer(target, numAttachments, attachments, x, y, width, height) wrapGlFunc(glInvalidateSubFramebuffer, target, numAttachments, attachments, x, y, width, height)
#define glInvalidateTexImage(texture, level) wrapGlFunc(glInvalidateTexImage, texture, level)
#define glInvalidateTexSubImage(texture, level, xoffset, yoffset, zoffset, width, height, depth) wrapGlFunc(glInvalidateTexSubImage, texture, level, xoffset, yoffset, zoffset, width, height, depth)
#define glLabelObjectEXT(type, object, length, label) wrapGlFunc(glLabelObjectEXT, type, object, length, label)
#define glLightEnviSGIX(pname, param) wrapGlFunc(glLightEnviSGIX, pname, param)
#define glLightModelf(pname, param) wrapGlFunc(glLightModelf, pname, param)
#define glLightModelfv(pname, params) wrapGlFunc(glLightModelfv, pname, params)
#define glLightModeli(pname, param) wrapGlFunc(glLightModeli, pname, param)
#define glLightModeliv(pname, params) wrapGlFunc(glLightModeliv, pname, params)
#define glLightModelx(pname, param) wrapGlFunc(glLightModelx, pname, param)
#define glLightModelxOES(pname, param) wrapGlFunc(glLightModelxOES, pname, param)
#define glLightModelxv(pname, param) wrapGlFunc(glLightModelxv, pname, param)
#define glLightModelxvOES(pname, param) wrapGlFunc(glLightModelxvOES, pname, param)
#define glLightf(light, pname, param) wrapGlFunc(glLightf, light, pname, param)
#define glLightfv(light, pname, params) wrapGlFunc(glLightfv, light, pname, params)
#define glLighti(light, pname, param) wrapGlFunc(glLighti, light, pname, param)
#define glLightiv(light, pname, params) wrapGlFunc(glLightiv, light, pname, params)
#define glLightx(light, pname, param) wrapGlFunc(glLightx, light, pname, param)
#define glLightxOES(light, pname, param) wrapGlFunc(glLightxOES, light, pname, param)
#define glLightxv(light, pname, params) wrapGlFunc(glLightxv, light, pname, params)
#define glLightxvOES(light, pname, params) wrapGlFunc(glLightxvOES, light, pname, params)
#define glLineStipple(factor, pattern) wrapGlFunc(glLineStipple, factor, pattern)
#define glLineWidth(width) wrapGlFunc(glLineWidth, width)
#define glLineWidthx(width) wrapGlFunc(glLineWidthx, width)
#define glLineWidthxOES(width) wrapGlFunc(glLineWidthxOES, width)
#define glLinkProgram(program) wrapGlFunc(glLinkProgram, program)
#define glLinkProgramARB(programObj) wrapGlFunc(glLinkProgramARB, programObj)
#define glListBase(base) wrapGlFunc(glListBase, base)
#define glListDrawCommandsStatesClientNV(list, segment, indirects, sizes, states, fbos, count) wrapGlFunc(glListDrawCommandsStatesClientNV, list, segment, indirects, sizes, states, fbos, count)
#define glListParameterfSGIX(list, pname, param) wrapGlFunc(glListParameterfSGIX, list, pname, param)
#define glListParameterfvSGIX(list, pname, params) wrapGlFunc(glListParameterfvSGIX, list, pname, params)
#define glListParameteriSGIX(list, pname, param) wrapGlFunc(glListParameteriSGIX, list, pname, param)
#define glListParameterivSGIX(list, pname, params) wrapGlFunc(glListParameterivSGIX, list, pname, params)
#define glLoadIdentity() wrapGlFuncNoArgs(glLoadIdentity)
#define glLoadIdentityDeformationMapSGIX(mask) wrapGlFunc(glLoadIdentityDeformationMapSGIX, mask)
#define glLoadMatrixd(m) wrapGlFunc(glLoadMatrixd, m)
#define glLoadMatrixf(m) wrapGlFunc(glLoadMatrixf, m)
#define glLoadMatrixx(m) wrapGlFunc(glLoadMatrixx, m)
#define glLoadMatrixxOES(m) wrapGlFunc(glLoadMatrixxOES, m)
#define glLoadName(name) wrapGlFunc(glLoadName, name)
#define glLoadPaletteFromModelViewMatrixOES() wrapGlFuncNoArgs(glLoadPaletteFromModelViewMatrixOES)
#define glLoadProgramNV(target, id, len, program) wrapGlFunc(glLoadProgramNV, target, id, len, program)
#define glLoadTransposeMatrixd(m) wrapGlFunc(glLoadTransposeMatrixd, m)
#define glLoadTransposeMatrixdARB(m) wrapGlFunc(glLoadTransposeMatrixdARB, m)
#define glLoadTransposeMatrixf(m) wrapGlFunc(glLoadTransposeMatrixf, m)
#define glLoadTransposeMatrixfARB(m) wrapGlFunc(glLoadTransposeMatrixfARB, m)
#define glLoadTransposeMatrixxOES(m) wrapGlFunc(glLoadTransposeMatrixxOES, m)
#define glLockArraysEXT(first, count) wrapGlFunc(glLockArraysEXT, first, count)
#define glLogicOp(opcode) wrapGlFunc(glLogicOp, opcode)
#define glMakeBufferNonResidentNV(target) wrapGlFunc(glMakeBufferNonResidentNV, target)
#define glMakeBufferResidentNV(target, access) wrapGlFunc(glMakeBufferResidentNV, target, access)
#define glMakeImageHandleNonResidentARB(handle) wrapGlFunc(glMakeImageHandleNonResidentARB, handle)
#define glMakeImageHandleNonResidentNV(handle) wrapGlFunc(glMakeImageHandleNonResidentNV, handle)
#define glMakeImageHandleResidentARB(handle, access) wrapGlFunc(glMakeImageHandleResidentARB, handle, access)
#define glMakeImageHandleResidentNV(handle, access) wrapGlFunc(glMakeImageHandleResidentNV, handle, access)
#define glMakeNamedBufferNonResidentNV(buffer) wrapGlFunc(glMakeNamedBufferNonResidentNV, buffer)
#define glMakeNamedBufferResidentNV(buffer, access) wrapGlFunc(glMakeNamedBufferResidentNV, buffer, access)
#define glMakeTextureHandleNonResidentARB(handle) wrapGlFunc(glMakeTextureHandleNonResidentARB, handle)
#define glMakeTextureHandleNonResidentNV(handle) wrapGlFunc(glMakeTextureHandleNonResidentNV, handle)
#define glMakeTextureHandleResidentARB(handle) wrapGlFunc(glMakeTextureHandleResidentARB, handle)
#define glMakeTextureHandleResidentNV(handle) wrapGlFunc(glMakeTextureHandleResidentNV, handle)
#define glMap1d(target, u1, u2, stride, order, points) wrapGlFunc(glMap1d, target, u1, u2, stride, order, points)
#define glMap1f(target, u1, u2, stride, order, points) wrapGlFunc(glMap1f, target, u1, u2, stride, order, points)
#define glMap1xOES(target, u1, u2, stride, order, points) wrapGlFunc(glMap1xOES, target, u1, u2, stride, order, points)
#define glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) wrapGlFunc(glMap2d, target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
#define glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) wrapGlFunc(glMap2f, target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
#define glMap2xOES(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) wrapGlFunc(glMap2xOES, target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
#define glMapBuffer(target, access) wrapGlFunc(glMapBuffer, target, access)
#define glMapBufferARB(target, access) wrapGlFunc(glMapBufferARB, target, access)
#define glMapBufferOES(target, access) wrapGlFunc(glMapBufferOES, target, access)
#define glMapBufferRange(target, offset, length, access) wrapGlFunc(glMapBufferRange, target, offset, length, access)
#define glMapBufferRangeEXT(target, offset, length, access) wrapGlFunc(glMapBufferRangeEXT, target, offset, length, access)
#define glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points) wrapGlFunc(glMapControlPointsNV, target, index, type, ustride, vstride, uorder, vorder, packed, points)
#define glMapGrid1d(un, u1, u2) wrapGlFunc(glMapGrid1d, un, u1, u2)
#define glMapGrid1f(un, u1, u2) wrapGlFunc(glMapGrid1f, un, u1, u2)
#define glMapGrid1xOES(n, u1, u2) wrapGlFunc(glMapGrid1xOES, n, u1, u2)
#define glMapGrid2d(un, u1, u2, vn, v1, v2) wrapGlFunc(glMapGrid2d, un, u1, u2, vn, v1, v2)
#define glMapGrid2f(un, u1, u2, vn, v1, v2) wrapGlFunc(glMapGrid2f, un, u1, u2, vn, v1, v2)
#define glMapGrid2xOES(n, u1, u2, v1, v2) wrapGlFunc(glMapGrid2xOES, n, u1, u2, v1, v2)
#define glMapNamedBuffer(buffer, access) wrapGlFunc(glMapNamedBuffer, buffer, access)
#define glMapNamedBufferEXT(buffer, access) wrapGlFunc(glMapNamedBufferEXT, buffer, access)
#define glMapNamedBufferRange(buffer, offset, length, access) wrapGlFunc(glMapNamedBufferRange, buffer, offset, length, access)
#define glMapNamedBufferRangeEXT(buffer, offset, length, access) wrapGlFunc(glMapNamedBufferRangeEXT, buffer, offset, length, access)
#define glMapObjectBufferATI(buffer) wrapGlFunc(glMapObjectBufferATI, buffer)
#define glMapParameterfvNV(target, pname, params) wrapGlFunc(glMapParameterfvNV, target, pname, params)
#define glMapParameterivNV(target, pname, params) wrapGlFunc(glMapParameterivNV, target, pname, params)
#define glMapTexture2DINTEL(texture, level, access, stride, layout) wrapGlFunc(glMapTexture2DINTEL, texture, level, access, stride, layout)
#define glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points) wrapGlFunc(glMapVertexAttrib1dAPPLE, index, size, u1, u2, stride, order, points)
#define glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points) wrapGlFunc(glMapVertexAttrib1fAPPLE, index, size, u1, u2, stride, order, points)
#define glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) wrapGlFunc(glMapVertexAttrib2dAPPLE, index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
#define glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points) wrapGlFunc(glMapVertexAttrib2fAPPLE, index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)
#define glMaterialf(face, pname, param) wrapGlFunc(glMaterialf, face, pname, param)
#define glMaterialfv(face, pname, params) wrapGlFunc(glMaterialfv, face, pname, params)
#define glMateriali(face, pname, param) wrapGlFunc(glMateriali, face, pname, param)
#define glMaterialiv(face, pname, params) wrapGlFunc(glMaterialiv, face, pname, params)
#define glMaterialx(face, pname, param) wrapGlFunc(glMaterialx, face, pname, param)
#define glMaterialxOES(face, pname, param) wrapGlFunc(glMaterialxOES, face, pname, param)
#define glMaterialxv(face, pname, param) wrapGlFunc(glMaterialxv, face, pname, param)
#define glMaterialxvOES(face, pname, param) wrapGlFunc(glMaterialxvOES, face, pname, param)
#define glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar) wrapGlFunc(glMatrixFrustumEXT, mode, left, right, bottom, top, zNear, zFar)
#define glMatrixIndexPointerARB(size, type, stride, pointer) wrapGlFunc(glMatrixIndexPointerARB, size, type, stride, pointer)
#define glMatrixIndexPointerOES(size, type, stride, pointer) wrapGlFunc(glMatrixIndexPointerOES, size, type, stride, pointer)
#define glMatrixIndexubvARB(size, indices) wrapGlFunc(glMatrixIndexubvARB, size, indices)
#define glMatrixIndexuivARB(size, indices) wrapGlFunc(glMatrixIndexuivARB, size, indices)
#define glMatrixIndexusvARB(size, indices) wrapGlFunc(glMatrixIndexusvARB, size, indices)
#define glMatrixLoad3x2fNV(matrixMode, m) wrapGlFunc(glMatrixLoad3x2fNV, matrixMode, m)
#define glMatrixLoad3x3fNV(matrixMode, m) wrapGlFunc(glMatrixLoad3x3fNV, matrixMode, m)
#define glMatrixLoadIdentityEXT(mode) wrapGlFunc(glMatrixLoadIdentityEXT, mode)
#define glMatrixLoadTranspose3x3fNV(matrixMode, m) wrapGlFunc(glMatrixLoadTranspose3x3fNV, matrixMode, m)
#define glMatrixLoadTransposedEXT(mode, m) wrapGlFunc(glMatrixLoadTransposedEXT, mode, m)
#define glMatrixLoadTransposefEXT(mode, m) wrapGlFunc(glMatrixLoadTransposefEXT, mode, m)
#define glMatrixLoaddEXT(mode, m) wrapGlFunc(glMatrixLoaddEXT, mode, m)
#define glMatrixLoadfEXT(mode, m) wrapGlFunc(glMatrixLoadfEXT, mode, m)
#define glMatrixMode(mode) wrapGlFunc(glMatrixMode, mode)
#define glMatrixMult3x2fNV(matrixMode, m) wrapGlFunc(glMatrixMult3x2fNV, matrixMode, m)
#define glMatrixMult3x3fNV(matrixMode, m) wrapGlFunc(glMatrixMult3x3fNV, matrixMode, m)
#define glMatrixMultTranspose3x3fNV(matrixMode, m) wrapGlFunc(glMatrixMultTranspose3x3fNV, matrixMode, m)
#define glMatrixMultTransposedEXT(mode, m) wrapGlFunc(glMatrixMultTransposedEXT, mode, m)
#define glMatrixMultTransposefEXT(mode, m) wrapGlFunc(glMatrixMultTransposefEXT, mode, m)
#define glMatrixMultdEXT(mode, m) wrapGlFunc(glMatrixMultdEXT, mode, m)
#define glMatrixMultfEXT(mode, m) wrapGlFunc(glMatrixMultfEXT, mode, m)
#define glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar) wrapGlFunc(glMatrixOrthoEXT, mode, left, right, bottom, top, zNear, zFar)
#define glMatrixPopEXT(mode) wrapGlFunc(glMatrixPopEXT, mode)
#define glMatrixPushEXT(mode) wrapGlFunc(glMatrixPushEXT, mode)
#define glMatrixRotatedEXT(mode, angle, x, y, z) wrapGlFunc(glMatrixRotatedEXT, mode, angle, x, y, z)
#define glMatrixRotatefEXT(mode, angle, x, y, z) wrapGlFunc(glMatrixRotatefEXT, mode, angle, x, y, z)
#define glMatrixScaledEXT(mode, x, y, z) wrapGlFunc(glMatrixScaledEXT, mode, x, y, z)
#define glMatrixScalefEXT(mode, x, y, z) wrapGlFunc(glMatrixScalefEXT, mode, x, y, z)
#define glMatrixTranslatedEXT(mode, x, y, z) wrapGlFunc(glMatrixTranslatedEXT, mode, x, y, z)
#define glMatrixTranslatefEXT(mode, x, y, z) wrapGlFunc(glMatrixTranslatefEXT, mode, x, y, z)
#define glMaxShaderCompilerThreadsARB(count) wrapGlFunc(glMaxShaderCompilerThreadsARB, count)
#define glMemoryBarrier(barriers) wrapGlFunc(glMemoryBarrier, barriers)
#define glMemoryBarrierByRegion(barriers) wrapGlFunc(glMemoryBarrierByRegion, barriers)
#define glMemoryBarrierEXT(barriers) wrapGlFunc(glMemoryBarrierEXT, barriers)
#define glMinSampleShading(value) wrapGlFunc(glMinSampleShading, value)
#define glMinSampleShadingARB(value) wrapGlFunc(glMinSampleShadingARB, value)
#define glMinSampleShadingOES(value) wrapGlFunc(glMinSampleShadingOES, value)
#define glMinmax(target, internalformat, sink) wrapGlFunc(glMinmax, target, internalformat, sink)
#define glMinmaxEXT(target, internalformat, sink) wrapGlFunc(glMinmaxEXT, target, internalformat, sink)
#define glMultMatrixd(m) wrapGlFunc(glMultMatrixd, m)
#define glMultMatrixf(m) wrapGlFunc(glMultMatrixf, m)
#define glMultMatrixx(m) wrapGlFunc(glMultMatrixx, m)
#define glMultMatrixxOES(m) wrapGlFunc(glMultMatrixxOES, m)
#define glMultTransposeMatrixd(m) wrapGlFunc(glMultTransposeMatrixd, m)
#define glMultTransposeMatrixdARB(m) wrapGlFunc(glMultTransposeMatrixdARB, m)
#define glMultTransposeMatrixf(m) wrapGlFunc(glMultTransposeMatrixf, m)
#define glMultTransposeMatrixfARB(m) wrapGlFunc(glMultTransposeMatrixfARB, m)
#define glMultTransposeMatrixxOES(m) wrapGlFunc(glMultTransposeMatrixxOES, m)
#define glMultiDrawArrays(mode, first, count, drawcount) wrapGlFunc(glMultiDrawArrays, mode, first, count, drawcount)
#define glMultiDrawArraysEXT(mode, first, count, primcount) wrapGlFunc(glMultiDrawArraysEXT, mode, first, count, primcount)
#define glMultiDrawArraysIndirect(mode, indirect, drawcount, stride) wrapGlFunc(glMultiDrawArraysIndirect, mode, indirect, drawcount, stride)
#define glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride) wrapGlFunc(glMultiDrawArraysIndirectAMD, mode, indirect, primcount, stride)
#define glMultiDrawArraysIndirectBindlessCountNV(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount) wrapGlFunc(glMultiDrawArraysIndirectBindlessCountNV, mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
#define glMultiDrawArraysIndirectBindlessNV(mode, indirect, drawCount, stride, vertexBufferCount) wrapGlFunc(glMultiDrawArraysIndirectBindlessNV, mode, indirect, drawCount, stride, vertexBufferCount)
#define glMultiDrawArraysIndirectCountARB(mode, indirect, drawcount, maxdrawcount, stride) wrapGlFunc(glMultiDrawArraysIndirectCountARB, mode, indirect, drawcount, maxdrawcount, stride)
#define glMultiDrawArraysIndirectEXT(mode, indirect, drawcount, stride) wrapGlFunc(glMultiDrawArraysIndirectEXT, mode, indirect, drawcount, stride)
#define glMultiDrawElementArrayAPPLE(mode, first, count, primcount) wrapGlFunc(glMultiDrawElementArrayAPPLE, mode, first, count, primcount)
#define glMultiDrawElements(mode, count, type, indices, drawcount) wrapGlFunc(glMultiDrawElements, mode, count, type, indices, drawcount)
#define glMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex) wrapGlFunc(glMultiDrawElementsBaseVertex, mode, count, type, indices, drawcount, basevertex)
#define glMultiDrawElementsBaseVertexEXT(mode, count, type, indices, primcount, basevertex) wrapGlFunc(glMultiDrawElementsBaseVertexEXT, mode, count, type, indices, primcount, basevertex)
#define glMultiDrawElementsBaseVertexOES(mode, count, type, indices, primcount, basevertex) wrapGlFunc(glMultiDrawElementsBaseVertexOES, mode, count, type, indices, primcount, basevertex)
#define glMultiDrawElementsEXT(mode, count, type, indices, primcount) wrapGlFunc(glMultiDrawElementsEXT, mode, count, type, indices, primcount)
#define glMultiDrawElementsIndirect(mode, type, indirect, drawcount, stride) wrapGlFunc(glMultiDrawElementsIndirect, mode, type, indirect, drawcount, stride)
#define glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride) wrapGlFunc(glMultiDrawElementsIndirectAMD, mode, type, indirect, primcount, stride)
#define glMultiDrawElementsIndirectBindlessCountNV(mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount) wrapGlFunc(glMultiDrawElementsIndirectBindlessCountNV, mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount)
#define glMultiDrawElementsIndirectBindlessNV(mode, type, indirect, drawCount, stride, vertexBufferCount) wrapGlFunc(glMultiDrawElementsIndirectBindlessNV, mode, type, indirect, drawCount, stride, vertexBufferCount)
#define glMultiDrawElementsIndirectCountARB(mode, type, indirect, drawcount, maxdrawcount, stride) wrapGlFunc(glMultiDrawElementsIndirectCountARB, mode, type, indirect, drawcount, maxdrawcount, stride)
#define glMultiDrawElementsIndirectEXT(mode, type, indirect, drawcount, stride) wrapGlFunc(glMultiDrawElementsIndirectEXT, mode, type, indirect, drawcount, stride)
#define glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount) wrapGlFunc(glMultiDrawRangeElementArrayAPPLE, mode, start, end, first, count, primcount)
#define glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride) wrapGlFunc(glMultiModeDrawArraysIBM, mode, first, count, primcount, modestride)
#define glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride) wrapGlFunc(glMultiModeDrawElementsIBM, mode, count, type, indices, primcount, modestride)
#define glMultiTexBufferEXT(texunit, target, internalformat, buffer) wrapGlFunc(glMultiTexBufferEXT, texunit, target, internalformat, buffer)
#define glMultiTexCoord1bOES(texture, s) wrapGlFunc(glMultiTexCoord1bOES, texture, s)
#define glMultiTexCoord1bvOES(texture, coords) wrapGlFunc(glMultiTexCoord1bvOES, texture, coords)
#define glMultiTexCoord1d(target, s) wrapGlFunc(glMultiTexCoord1d, target, s)
#define glMultiTexCoord1dARB(target, s) wrapGlFunc(glMultiTexCoord1dARB, target, s)
#define glMultiTexCoord1dv(target, v) wrapGlFunc(glMultiTexCoord1dv, target, v)
#define glMultiTexCoord1dvARB(target, v) wrapGlFunc(glMultiTexCoord1dvARB, target, v)
#define glMultiTexCoord1f(target, s) wrapGlFunc(glMultiTexCoord1f, target, s)
#define glMultiTexCoord1fARB(target, s) wrapGlFunc(glMultiTexCoord1fARB, target, s)
#define glMultiTexCoord1fv(target, v) wrapGlFunc(glMultiTexCoord1fv, target, v)
#define glMultiTexCoord1fvARB(target, v) wrapGlFunc(glMultiTexCoord1fvARB, target, v)
#define glMultiTexCoord1hNV(target, s) wrapGlFunc(glMultiTexCoord1hNV, target, s)
#define glMultiTexCoord1hvNV(target, v) wrapGlFunc(glMultiTexCoord1hvNV, target, v)
#define glMultiTexCoord1i(target, s) wrapGlFunc(glMultiTexCoord1i, target, s)
#define glMultiTexCoord1iARB(target, s) wrapGlFunc(glMultiTexCoord1iARB, target, s)
#define glMultiTexCoord1iv(target, v) wrapGlFunc(glMultiTexCoord1iv, target, v)
#define glMultiTexCoord1ivARB(target, v) wrapGlFunc(glMultiTexCoord1ivARB, target, v)
#define glMultiTexCoord1s(target, s) wrapGlFunc(glMultiTexCoord1s, target, s)
#define glMultiTexCoord1sARB(target, s) wrapGlFunc(glMultiTexCoord1sARB, target, s)
#define glMultiTexCoord1sv(target, v) wrapGlFunc(glMultiTexCoord1sv, target, v)
#define glMultiTexCoord1svARB(target, v) wrapGlFunc(glMultiTexCoord1svARB, target, v)
#define glMultiTexCoord1xOES(texture, s) wrapGlFunc(glMultiTexCoord1xOES, texture, s)
#define glMultiTexCoord1xvOES(texture, coords) wrapGlFunc(glMultiTexCoord1xvOES, texture, coords)
#define glMultiTexCoord2bOES(texture, s, t) wrapGlFunc(glMultiTexCoord2bOES, texture, s, t)
#define glMultiTexCoord2bvOES(texture, coords) wrapGlFunc(glMultiTexCoord2bvOES, texture, coords)
#define glMultiTexCoord2d(target, s, t) wrapGlFunc(glMultiTexCoord2d, target, s, t)
#define glMultiTexCoord2dARB(target, s, t) wrapGlFunc(glMultiTexCoord2dARB, target, s, t)
#define glMultiTexCoord2dv(target, v) wrapGlFunc(glMultiTexCoord2dv, target, v)
#define glMultiTexCoord2dvARB(target, v) wrapGlFunc(glMultiTexCoord2dvARB, target, v)
#define glMultiTexCoord2f(target, s, t) wrapGlFunc(glMultiTexCoord2f, target, s, t)
#define glMultiTexCoord2fARB(target, s, t) wrapGlFunc(glMultiTexCoord2fARB, target, s, t)
#define glMultiTexCoord2fv(target, v) wrapGlFunc(glMultiTexCoord2fv, target, v)
#define glMultiTexCoord2fvARB(target, v) wrapGlFunc(glMultiTexCoord2fvARB, target, v)
#define glMultiTexCoord2hNV(target, s, t) wrapGlFunc(glMultiTexCoord2hNV, target, s, t)
#define glMultiTexCoord2hvNV(target, v) wrapGlFunc(glMultiTexCoord2hvNV, target, v)
#define glMultiTexCoord2i(target, s, t) wrapGlFunc(glMultiTexCoord2i, target, s, t)
#define glMultiTexCoord2iARB(target, s, t) wrapGlFunc(glMultiTexCoord2iARB, target, s, t)
#define glMultiTexCoord2iv(target, v) wrapGlFunc(glMultiTexCoord2iv, target, v)
#define glMultiTexCoord2ivARB(target, v) wrapGlFunc(glMultiTexCoord2ivARB, target, v)
#define glMultiTexCoord2s(target, s, t) wrapGlFunc(glMultiTexCoord2s, target, s, t)
#define glMultiTexCoord2sARB(target, s, t) wrapGlFunc(glMultiTexCoord2sARB, target, s, t)
#define glMultiTexCoord2sv(target, v) wrapGlFunc(glMultiTexCoord2sv, target, v)
#define glMultiTexCoord2svARB(target, v) wrapGlFunc(glMultiTexCoord2svARB, target, v)
#define glMultiTexCoord2xOES(texture, s, t) wrapGlFunc(glMultiTexCoord2xOES, texture, s, t)
#define glMultiTexCoord2xvOES(texture, coords) wrapGlFunc(glMultiTexCoord2xvOES, texture, coords)
#define glMultiTexCoord3bOES(texture, s, t, r) wrapGlFunc(glMultiTexCoord3bOES, texture, s, t, r)
#define glMultiTexCoord3bvOES(texture, coords) wrapGlFunc(glMultiTexCoord3bvOES, texture, coords)
#define glMultiTexCoord3d(target, s, t, r) wrapGlFunc(glMultiTexCoord3d, target, s, t, r)
#define glMultiTexCoord3dARB(target, s, t, r) wrapGlFunc(glMultiTexCoord3dARB, target, s, t, r)
#define glMultiTexCoord3dv(target, v) wrapGlFunc(glMultiTexCoord3dv, target, v)
#define glMultiTexCoord3dvARB(target, v) wrapGlFunc(glMultiTexCoord3dvARB, target, v)
#define glMultiTexCoord3f(target, s, t, r) wrapGlFunc(glMultiTexCoord3f, target, s, t, r)
#define glMultiTexCoord3fARB(target, s, t, r) wrapGlFunc(glMultiTexCoord3fARB, target, s, t, r)
#define glMultiTexCoord3fv(target, v) wrapGlFunc(glMultiTexCoord3fv, target, v)
#define glMultiTexCoord3fvARB(target, v) wrapGlFunc(glMultiTexCoord3fvARB, target, v)
#define glMultiTexCoord3hNV(target, s, t, r) wrapGlFunc(glMultiTexCoord3hNV, target, s, t, r)
#define glMultiTexCoord3hvNV(target, v) wrapGlFunc(glMultiTexCoord3hvNV, target, v)
#define glMultiTexCoord3i(target, s, t, r) wrapGlFunc(glMultiTexCoord3i, target, s, t, r)
#define glMultiTexCoord3iARB(target, s, t, r) wrapGlFunc(glMultiTexCoord3iARB, target, s, t, r)
#define glMultiTexCoord3iv(target, v) wrapGlFunc(glMultiTexCoord3iv, target, v)
#define glMultiTexCoord3ivARB(target, v) wrapGlFunc(glMultiTexCoord3ivARB, target, v)
#define glMultiTexCoord3s(target, s, t, r) wrapGlFunc(glMultiTexCoord3s, target, s, t, r)
#define glMultiTexCoord3sARB(target, s, t, r) wrapGlFunc(glMultiTexCoord3sARB, target, s, t, r)
#define glMultiTexCoord3sv(target, v) wrapGlFunc(glMultiTexCoord3sv, target, v)
#define glMultiTexCoord3svARB(target, v) wrapGlFunc(glMultiTexCoord3svARB, target, v)
#define glMultiTexCoord3xOES(texture, s, t, r) wrapGlFunc(glMultiTexCoord3xOES, texture, s, t, r)
#define glMultiTexCoord3xvOES(texture, coords) wrapGlFunc(glMultiTexCoord3xvOES, texture, coords)
#define glMultiTexCoord4bOES(texture, s, t, r, q) wrapGlFunc(glMultiTexCoord4bOES, texture, s, t, r, q)
#define glMultiTexCoord4bvOES(texture, coords) wrapGlFunc(glMultiTexCoord4bvOES, texture, coords)
#define glMultiTexCoord4d(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4d, target, s, t, r, q)
#define glMultiTexCoord4dARB(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4dARB, target, s, t, r, q)
#define glMultiTexCoord4dv(target, v) wrapGlFunc(glMultiTexCoord4dv, target, v)
#define glMultiTexCoord4dvARB(target, v) wrapGlFunc(glMultiTexCoord4dvARB, target, v)
#define glMultiTexCoord4f(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4f, target, s, t, r, q)
#define glMultiTexCoord4fARB(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4fARB, target, s, t, r, q)
#define glMultiTexCoord4fv(target, v) wrapGlFunc(glMultiTexCoord4fv, target, v)
#define glMultiTexCoord4fvARB(target, v) wrapGlFunc(glMultiTexCoord4fvARB, target, v)
#define glMultiTexCoord4hNV(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4hNV, target, s, t, r, q)
#define glMultiTexCoord4hvNV(target, v) wrapGlFunc(glMultiTexCoord4hvNV, target, v)
#define glMultiTexCoord4i(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4i, target, s, t, r, q)
#define glMultiTexCoord4iARB(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4iARB, target, s, t, r, q)
#define glMultiTexCoord4iv(target, v) wrapGlFunc(glMultiTexCoord4iv, target, v)
#define glMultiTexCoord4ivARB(target, v) wrapGlFunc(glMultiTexCoord4ivARB, target, v)
#define glMultiTexCoord4s(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4s, target, s, t, r, q)
#define glMultiTexCoord4sARB(target, s, t, r, q) wrapGlFunc(glMultiTexCoord4sARB, target, s, t, r, q)
#define glMultiTexCoord4sv(target, v) wrapGlFunc(glMultiTexCoord4sv, target, v)
#define glMultiTexCoord4svARB(target, v) wrapGlFunc(glMultiTexCoord4svARB, target, v)
#define glMultiTexCoord4x(texture, s, t, r, q) wrapGlFunc(glMultiTexCoord4x, texture, s, t, r, q)
#define glMultiTexCoord4xOES(texture, s, t, r, q) wrapGlFunc(glMultiTexCoord4xOES, texture, s, t, r, q)
#define glMultiTexCoord4xvOES(texture, coords) wrapGlFunc(glMultiTexCoord4xvOES, texture, coords)
#define glMultiTexCoordP1ui(texture, type, coords) wrapGlFunc(glMultiTexCoordP1ui, texture, type, coords)
#define glMultiTexCoordP1uiv(texture, type, coords) wrapGlFunc(glMultiTexCoordP1uiv, texture, type, coords)
#define glMultiTexCoordP2ui(texture, type, coords) wrapGlFunc(glMultiTexCoordP2ui, texture, type, coords)
#define glMultiTexCoordP2uiv(texture, type, coords) wrapGlFunc(glMultiTexCoordP2uiv, texture, type, coords)
#define glMultiTexCoordP3ui(texture, type, coords) wrapGlFunc(glMultiTexCoordP3ui, texture, type, coords)
#define glMultiTexCoordP3uiv(texture, type, coords) wrapGlFunc(glMultiTexCoordP3uiv, texture, type, coords)
#define glMultiTexCoordP4ui(texture, type, coords) wrapGlFunc(glMultiTexCoordP4ui, texture, type, coords)
#define glMultiTexCoordP4uiv(texture, type, coords) wrapGlFunc(glMultiTexCoordP4uiv, texture, type, coords)
#define glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer) wrapGlFunc(glMultiTexCoordPointerEXT, texunit, size, type, stride, pointer)
#define glMultiTexEnvfEXT(texunit, target, pname, param) wrapGlFunc(glMultiTexEnvfEXT, texunit, target, pname, param)
#define glMultiTexEnvfvEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexEnvfvEXT, texunit, target, pname, params)
#define glMultiTexEnviEXT(texunit, target, pname, param) wrapGlFunc(glMultiTexEnviEXT, texunit, target, pname, param)
#define glMultiTexEnvivEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexEnvivEXT, texunit, target, pname, params)
#define glMultiTexGendEXT(texunit, coord, pname, param) wrapGlFunc(glMultiTexGendEXT, texunit, coord, pname, param)
#define glMultiTexGendvEXT(texunit, coord, pname, params) wrapGlFunc(glMultiTexGendvEXT, texunit, coord, pname, params)
#define glMultiTexGenfEXT(texunit, coord, pname, param) wrapGlFunc(glMultiTexGenfEXT, texunit, coord, pname, param)
#define glMultiTexGenfvEXT(texunit, coord, pname, params) wrapGlFunc(glMultiTexGenfvEXT, texunit, coord, pname, params)
#define glMultiTexGeniEXT(texunit, coord, pname, param) wrapGlFunc(glMultiTexGeniEXT, texunit, coord, pname, param)
#define glMultiTexGenivEXT(texunit, coord, pname, params) wrapGlFunc(glMultiTexGenivEXT, texunit, coord, pname, params)
#define glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels) wrapGlFunc(glMultiTexImage1DEXT, texunit, target, level, internalformat, width, border, format, type, pixels)
#define glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels) wrapGlFunc(glMultiTexImage2DEXT, texunit, target, level, internalformat, width, height, border, format, type, pixels)
#define glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels) wrapGlFunc(glMultiTexImage3DEXT, texunit, target, level, internalformat, width, height, depth, border, format, type, pixels)
#define glMultiTexParameterIivEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexParameterIivEXT, texunit, target, pname, params)
#define glMultiTexParameterIuivEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexParameterIuivEXT, texunit, target, pname, params)
#define glMultiTexParameterfEXT(texunit, target, pname, param) wrapGlFunc(glMultiTexParameterfEXT, texunit, target, pname, param)
#define glMultiTexParameterfvEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexParameterfvEXT, texunit, target, pname, params)
#define glMultiTexParameteriEXT(texunit, target, pname, param) wrapGlFunc(glMultiTexParameteriEXT, texunit, target, pname, param)
#define glMultiTexParameterivEXT(texunit, target, pname, params) wrapGlFunc(glMultiTexParameterivEXT, texunit, target, pname, params)
#define glMultiTexRenderbufferEXT(texunit, target, renderbuffer) wrapGlFunc(glMultiTexRenderbufferEXT, texunit, target, renderbuffer)
#define glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels) wrapGlFunc(glMultiTexSubImage1DEXT, texunit, target, level, xoffset, width, format, type, pixels)
#define glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels) wrapGlFunc(glMultiTexSubImage2DEXT, texunit, target, level, xoffset, yoffset, width, height, format, type, pixels)
#define glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glMultiTexSubImage3DEXT, texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glNamedBufferData(buffer, size, data, usage) wrapGlFunc(glNamedBufferData, buffer, size, data, usage)
#define glNamedBufferDataEXT(buffer, size, data, usage) wrapGlFunc(glNamedBufferDataEXT, buffer, size, data, usage)
#define glNamedBufferPageCommitmentARB(buffer, offset, size, commit) wrapGlFunc(glNamedBufferPageCommitmentARB, buffer, offset, size, commit)
#define glNamedBufferPageCommitmentEXT(buffer, offset, size, commit) wrapGlFunc(glNamedBufferPageCommitmentEXT, buffer, offset, size, commit)
#define glNamedBufferStorage(buffer, size, data, flags) wrapGlFunc(glNamedBufferStorage, buffer, size, data, flags)
#define glNamedBufferStorageEXT(buffer, size, data, flags) wrapGlFunc(glNamedBufferStorageEXT, buffer, size, data, flags)
#define glNamedBufferSubData(buffer, offset, size, data) wrapGlFunc(glNamedBufferSubData, buffer, offset, size, data)
#define glNamedBufferSubDataEXT(buffer, offset, size, data) wrapGlFunc(glNamedBufferSubDataEXT, buffer, offset, size, data)
#define glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size) wrapGlFunc(glNamedCopyBufferSubDataEXT, readBuffer, writeBuffer, readOffset, writeOffset, size)
#define glNamedFramebufferDrawBuffer(framebuffer, buf) wrapGlFunc(glNamedFramebufferDrawBuffer, framebuffer, buf)
#define glNamedFramebufferDrawBuffers(framebuffer, n, bufs) wrapGlFunc(glNamedFramebufferDrawBuffers, framebuffer, n, bufs)
#define glNamedFramebufferParameteri(framebuffer, pname, param) wrapGlFunc(glNamedFramebufferParameteri, framebuffer, pname, param)
#define glNamedFramebufferParameteriEXT(framebuffer, pname, param) wrapGlFunc(glNamedFramebufferParameteriEXT, framebuffer, pname, param)
#define glNamedFramebufferReadBuffer(framebuffer, src) wrapGlFunc(glNamedFramebufferReadBuffer, framebuffer, src)
#define glNamedFramebufferRenderbuffer(framebuffer, attachment, renderbuffertarget, renderbuffer) wrapGlFunc(glNamedFramebufferRenderbuffer, framebuffer, attachment, renderbuffertarget, renderbuffer)
#define glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer) wrapGlFunc(glNamedFramebufferRenderbufferEXT, framebuffer, attachment, renderbuffertarget, renderbuffer)
#define glNamedFramebufferSampleLocationsfvARB(framebuffer, start, count, v) wrapGlFunc(glNamedFramebufferSampleLocationsfvARB, framebuffer, start, count, v)
#define glNamedFramebufferSampleLocationsfvNV(framebuffer, start, count, v) wrapGlFunc(glNamedFramebufferSampleLocationsfvNV, framebuffer, start, count, v)
#define glNamedFramebufferTexture(framebuffer, attachment, texture, level) wrapGlFunc(glNamedFramebufferTexture, framebuffer, attachment, texture, level)
#define glNamedFramebufferSamplePositionsfvAMD(framebuffer, numsamples, pixelindex, values) wrapGlFunc(glNamedFramebufferSamplePositionsfvAMD, framebuffer, numsamples, pixelindex, values)
#define glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level) wrapGlFunc(glNamedFramebufferTexture1DEXT, framebuffer, attachment, textarget, texture, level)
#define glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level) wrapGlFunc(glNamedFramebufferTexture2DEXT, framebuffer, attachment, textarget, texture, level)
#define glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset) wrapGlFunc(glNamedFramebufferTexture3DEXT, framebuffer, attachment, textarget, texture, level, zoffset)
#define glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level) wrapGlFunc(glNamedFramebufferTextureEXT, framebuffer, attachment, texture, level)
#define glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face) wrapGlFunc(glNamedFramebufferTextureFaceEXT, framebuffer, attachment, texture, level, face)
#define glNamedFramebufferTextureLayer(framebuffer, attachment, texture, level, layer) wrapGlFunc(glNamedFramebufferTextureLayer, framebuffer, attachment, texture, level, layer)
#define glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer) wrapGlFunc(glNamedFramebufferTextureLayerEXT, framebuffer, attachment, texture, level, layer)
#define glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w) wrapGlFunc(glNamedProgramLocalParameter4dEXT, program, target, index, x, y, z, w)
#define glNamedProgramLocalParameter4dvEXT(program, target, index, params) wrapGlFunc(glNamedProgramLocalParameter4dvEXT, program, target, index, params)
#define glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w) wrapGlFunc(glNamedProgramLocalParameter4fEXT, program, target, index, x, y, z, w)
#define glNamedProgramLocalParameter4fvEXT(program, target, index, params) wrapGlFunc(glNamedProgramLocalParameter4fvEXT, program, target, index, params)
#define glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w) wrapGlFunc(glNamedProgramLocalParameterI4iEXT, program, target, index, x, y, z, w)
#define glNamedProgramLocalParameterI4ivEXT(program, target, index, params) wrapGlFunc(glNamedProgramLocalParameterI4ivEXT, program, target, index, params)
#define glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w) wrapGlFunc(glNamedProgramLocalParameterI4uiEXT, program, target, index, x, y, z, w)
#define glNamedProgramLocalParameterI4uivEXT(program, target, index, params) wrapGlFunc(glNamedProgramLocalParameterI4uivEXT, program, target, index, params)
#define glNamedProgramLocalParameters4fvEXT(program, target, index, count, params) wrapGlFunc(glNamedProgramLocalParameters4fvEXT, program, target, index, count, params)
#define glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params) wrapGlFunc(glNamedProgramLocalParametersI4ivEXT, program, target, index, count, params)
#define glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params) wrapGlFunc(glNamedProgramLocalParametersI4uivEXT, program, target, index, count, params)
#define glNamedProgramStringEXT(program, target, format, len, string) wrapGlFunc(glNamedProgramStringEXT, program, target, format, len, string)
#define glNamedRenderbufferStorage(renderbuffer, internalformat, width, height) wrapGlFunc(glNamedRenderbufferStorage, renderbuffer, internalformat, width, height)
#define glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height) wrapGlFunc(glNamedRenderbufferStorageEXT, renderbuffer, internalformat, width, height)
#define glNamedRenderbufferStorageMultisample(renderbuffer, samples, internalformat, width, height) wrapGlFunc(glNamedRenderbufferStorageMultisample, renderbuffer, samples, internalformat, width, height)
#define glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height) wrapGlFunc(glNamedRenderbufferStorageMultisampleCoverageEXT, renderbuffer, coverageSamples, colorSamples, internalformat, width, height)
#define glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height) wrapGlFunc(glNamedRenderbufferStorageMultisampleEXT, renderbuffer, samples, internalformat, width, height)
#define glNamedStringARB(type, namelen, name, stringlen, string) wrapGlFunc(glNamedStringARB, type, namelen, name, stringlen, string)
#define glNewList(list, mode) wrapGlFunc(glNewList, list, mode)
#define glNormal3b(nx, ny, nz) wrapGlFunc(glNormal3b, nx, ny, nz)
#define glNormal3bv(v) wrapGlFunc(glNormal3bv, v)
#define glNormal3d(nx, ny, nz) wrapGlFunc(glNormal3d, nx, ny, nz)
#define glNormal3dv(v) wrapGlFunc(glNormal3dv, v)
#define glNormal3f(nx, ny, nz) wrapGlFunc(glNormal3f, nx, ny, nz)
#define glNormal3fVertex3fSUN(nx, ny, nz, x, y, z) wrapGlFunc(glNormal3fVertex3fSUN, nx, ny, nz, x, y, z)
#define glNormal3fVertex3fvSUN(n, v) wrapGlFunc(glNormal3fVertex3fvSUN, n, v)
#define glNormal3fv(v) wrapGlFunc(glNormal3fv, v)
#define glNormal3hNV(nx, ny, nz) wrapGlFunc(glNormal3hNV, nx, ny, nz)
#define glNormal3hvNV(v) wrapGlFunc(glNormal3hvNV, v)
#define glNormal3i(nx, ny, nz) wrapGlFunc(glNormal3i, nx, ny, nz)
#define glNormal3iv(v) wrapGlFunc(glNormal3iv, v)
#define glNormal3s(nx, ny, nz) wrapGlFunc(glNormal3s, nx, ny, nz)
#define glNormal3sv(v) wrapGlFunc(glNormal3sv, v)
#define glNormal3x(nx, ny, nz) wrapGlFunc(glNormal3x, nx, ny, nz)
#define glNormal3xOES(nx, ny, nz) wrapGlFunc(glNormal3xOES, nx, ny, nz)
#define glNormal3xvOES(coords) wrapGlFunc(glNormal3xvOES, coords)
#define glNormalFormatNV(type, stride) wrapGlFunc(glNormalFormatNV, type, stride)
#define glNormalP3ui(type, coords) wrapGlFunc(glNormalP3ui, type, coords)
#define glNormalP3uiv(type, coords) wrapGlFunc(glNormalP3uiv, type, coords)
#define glNormalPointer(type, stride, pointer) wrapGlFunc(glNormalPointer, type, stride, pointer)
#define glNormalPointerEXT(type, stride, count, pointer) wrapGlFunc(glNormalPointerEXT, type, stride, count, pointer)
#define glNormalPointerListIBM(type, stride, pointer, ptrstride) wrapGlFunc(glNormalPointerListIBM, type, stride, pointer, ptrstride)
#define glNormalPointervINTEL(type, pointer) wrapGlFunc(glNormalPointervINTEL, type, pointer)
#define glNormalStream3bATI(stream, nx, ny, nz) wrapGlFunc(glNormalStream3bATI, stream, nx, ny, nz)
#define glNormalStream3bvATI(stream, coords) wrapGlFunc(glNormalStream3bvATI, stream, coords)
#define glNormalStream3dATI(stream, nx, ny, nz) wrapGlFunc(glNormalStream3dATI, stream, nx, ny, nz)
#define glNormalStream3dvATI(stream, coords) wrapGlFunc(glNormalStream3dvATI, stream, coords)
#define glNormalStream3fATI(stream, nx, ny, nz) wrapGlFunc(glNormalStream3fATI, stream, nx, ny, nz)
#define glNormalStream3fvATI(stream, coords) wrapGlFunc(glNormalStream3fvATI, stream, coords)
#define glNormalStream3iATI(stream, nx, ny, nz) wrapGlFunc(glNormalStream3iATI, stream, nx, ny, nz)
#define glNormalStream3ivATI(stream, coords) wrapGlFunc(glNormalStream3ivATI, stream, coords)
#define glNormalStream3sATI(stream, nx, ny, nz) wrapGlFunc(glNormalStream3sATI, stream, nx, ny, nz)
#define glNormalStream3svATI(stream, coords) wrapGlFunc(glNormalStream3svATI, stream, coords)
#define glObjectLabel(identifier, name, length, label) wrapGlFunc(glObjectLabel, identifier, name, length, label)
#define glObjectLabelKHR(identifier, name, length, label) wrapGlFunc(glObjectLabelKHR, identifier, name, length, label)
#define glObjectPtrLabel(ptr, length, label) wrapGlFunc(glObjectPtrLabel, ptr, length, label)
#define glObjectPtrLabelKHR(ptr, length, label) wrapGlFunc(glObjectPtrLabelKHR, ptr, length, label)
#define glOrtho(left, right, bottom, top, zNear, zFar) wrapGlFunc(glOrtho, left, right, bottom, top, zNear, zFar)
#define glOrthof(l, r, b, t, n, f) wrapGlFunc(glOrthof, l, r, b, t, n, f)
#define glOrthofOES(l, r, b, t, n, f) wrapGlFunc(glOrthofOES, l, r, b, t, n, f)
#define glOrthox(l, r, b, t, n, f) wrapGlFunc(glOrthox, l, r, b, t, n, f)
#define glOrthoxOES(l, r, b, t, n, f) wrapGlFunc(glOrthoxOES, l, r, b, t, n, f)
#define glPNTrianglesfATI(pname, param) wrapGlFunc(glPNTrianglesfATI, pname, param)
#define glPNTrianglesiATI(pname, param) wrapGlFunc(glPNTrianglesiATI, pname, param)
#define glPassTexCoordATI(dst, coord, swizzle) wrapGlFunc(glPassTexCoordATI, dst, coord, swizzle)
#define glPassThrough(token) wrapGlFunc(glPassThrough, token)
#define glPassThroughxOES(token) wrapGlFunc(glPassThroughxOES, token)
#define glPatchParameterfv(pname, values) wrapGlFunc(glPatchParameterfv, pname, values)
#define glPatchParameteri(pname, value) wrapGlFunc(glPatchParameteri, pname, value)
#define glPatchParameteriEXT(pname, value) wrapGlFunc(glPatchParameteriEXT, pname, value)
#define glPatchParameteriOES(pname, value) wrapGlFunc(glPatchParameteriOES, pname, value)
#define glPathColorGenNV(color, genMode, colorFormat, coeffs) wrapGlFunc(glPathColorGenNV, color, genMode, colorFormat, coeffs)
#define glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords) wrapGlFunc(glPathCommandsNV, path, numCommands, commands, numCoords, coordType, coords)
#define glPathCoordsNV(path, numCoords, coordType, coords) wrapGlFunc(glPathCoordsNV, path, numCoords, coordType, coords)
#define glPathCoverDepthFuncNV(func) wrapGlFunc(glPathCoverDepthFuncNV, func)
#define glPathDashArrayNV(path, dashCount, dashArray) wrapGlFunc(glPathDashArrayNV, path, dashCount, dashArray)
#define glPathFogGenNV(genMode) wrapGlFunc(glPathFogGenNV, genMode)
#define glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale) wrapGlFunc(glPathGlyphRangeNV, firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale)
#define glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale) wrapGlFunc(glPathGlyphsNV, firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale)
#define glPathParameterfNV(path, pname, value) wrapGlFunc(glPathParameterfNV, path, pname, value)
#define glPathParameterfvNV(path, pname, value) wrapGlFunc(glPathParameterfvNV, path, pname, value)
#define glPathParameteriNV(path, pname, value) wrapGlFunc(glPathParameteriNV, path, pname, value)
#define glPathParameterivNV(path, pname, value) wrapGlFunc(glPathParameterivNV, path, pname, value)
#define glPathStencilDepthOffsetNV(factor, units) wrapGlFunc(glPathStencilDepthOffsetNV, factor, units)
#define glPathStencilFuncNV(func, ref, mask) wrapGlFunc(glPathStencilFuncNV, func, ref, mask)
#define glPathStringNV(path, format, length, pathString) wrapGlFunc(glPathStringNV, path, format, length, pathString)
#define glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords) wrapGlFunc(glPathSubCommandsNV, path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords)
#define glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords) wrapGlFunc(glPathSubCoordsNV, path, coordStart, numCoords, coordType, coords)
#define glPathTexGenNV(texCoordSet, genMode, components, coeffs) wrapGlFunc(glPathTexGenNV, texCoordSet, genMode, components, coeffs)
#define glPauseTransformFeedback() wrapGlFuncNoArgs(glPauseTransformFeedback)
#define glPauseTransformFeedbackNV() wrapGlFuncNoArgs(glPauseTransformFeedbackNV)
#define glPixelDataRangeNV(target, length, pointer) wrapGlFunc(glPixelDataRangeNV, target, length, pointer)
#define glPixelMapfv(map, mapsize, values) wrapGlFunc(glPixelMapfv, map, mapsize, values)
#define glPixelMapuiv(map, mapsize, values) wrapGlFunc(glPixelMapuiv, map, mapsize, values)
#define glPixelMapusv(map, mapsize, values) wrapGlFunc(glPixelMapusv, map, mapsize, values)
#define glPixelMapx(map, size, values) wrapGlFunc(glPixelMapx, map, size, values)
#define glPixelStoref(pname, param) wrapGlFunc(glPixelStoref, pname, param)
#define glPixelStorei(pname, param) wrapGlFunc(glPixelStorei, pname, param)
#define glPixelStorex(pname, param) wrapGlFunc(glPixelStorex, pname, param)
#define glPixelTexGenParameterfSGIS(pname, param) wrapGlFunc(glPixelTexGenParameterfSGIS, pname, param)
#define glPixelTexGenParameterfvSGIS(pname, params) wrapGlFunc(glPixelTexGenParameterfvSGIS, pname, params)
#define glPixelTexGenParameteriSGIS(pname, param) wrapGlFunc(glPixelTexGenParameteriSGIS, pname, param)
#define glPixelTexGenParameterivSGIS(pname, params) wrapGlFunc(glPixelTexGenParameterivSGIS, pname, params)
#define glPixelTexGenSGIX(mode) wrapGlFunc(glPixelTexGenSGIX, mode)
#define glPixelTransferf(pname, param) wrapGlFunc(glPixelTransferf, pname, param)
#define glPixelTransferi(pname, param) wrapGlFunc(glPixelTransferi, pname, param)
#define glPixelTransferxOES(pname, param) wrapGlFunc(glPixelTransferxOES, pname, param)
#define glPixelTransformParameterfEXT(target, pname, param) wrapGlFunc(glPixelTransformParameterfEXT, target, pname, param)
#define glPixelTransformParameterfvEXT(target, pname, params) wrapGlFunc(glPixelTransformParameterfvEXT, target, pname, params)
#define glPixelTransformParameteriEXT(target, pname, param) wrapGlFunc(glPixelTransformParameteriEXT, target, pname, param)
#define glPixelTransformParameterivEXT(target, pname, params) wrapGlFunc(glPixelTransformParameterivEXT, target, pname, params)
#define glPixelZoom(xfactor, yfactor) wrapGlFunc(glPixelZoom, xfactor, yfactor)
#define glPixelZoomxOES(xfactor, yfactor) wrapGlFunc(glPixelZoomxOES, xfactor, yfactor)
#define glPointParameterf(pname, param) wrapGlFunc(glPointParameterf, pname, param)
#define glPointParameterfARB(pname, param) wrapGlFunc(glPointParameterfARB, pname, param)
#define glPointParameterfEXT(pname, param) wrapGlFunc(glPointParameterfEXT, pname, param)
#define glPointParameterfSGIS(pname, param) wrapGlFunc(glPointParameterfSGIS, pname, param)
#define glPointParameterfv(pname, params) wrapGlFunc(glPointParameterfv, pname, params)
#define glPointParameterfvARB(pname, params) wrapGlFunc(glPointParameterfvARB, pname, params)
#define glPointParameterfvEXT(pname, params) wrapGlFunc(glPointParameterfvEXT, pname, params)
#define glPointParameterfvSGIS(pname, params) wrapGlFunc(glPointParameterfvSGIS, pname, params)
#define glPointParameteri(pname, param) wrapGlFunc(glPointParameteri, pname, param)
#define glPointParameteriNV(pname, param) wrapGlFunc(glPointParameteriNV, pname, param)
#define glPointParameteriv(pname, params) wrapGlFunc(glPointParameteriv, pname, params)
#define glPointParameterivNV(pname, params) wrapGlFunc(glPointParameterivNV, pname, params)
#define glPointParameterx(pname, param) wrapGlFunc(glPointParameterx, pname, param)
#define glPointParameterxOES(pname, param) wrapGlFunc(glPointParameterxOES, pname, param)
#define glPointParameterxv(pname, params) wrapGlFunc(glPointParameterxv, pname, params)
#define glPointParameterxvOES(pname, params) wrapGlFunc(glPointParameterxvOES, pname, params)
#define glPointSize(size) wrapGlFunc(glPointSize, size)
#define glPointSizePointerOES(type, stride, pointer) wrapGlFunc(glPointSizePointerOES, type, stride, pointer)
#define glPointSizex(size) wrapGlFunc(glPointSizex, size)
#define glPointSizexOES(size) wrapGlFunc(glPointSizexOES, size)
#define glPolygonMode(face, mode) wrapGlFunc(glPolygonMode, face, mode)
#define glPolygonModeNV(face, mode) wrapGlFunc(glPolygonModeNV, face, mode)
#define glPolygonOffset(factor, units) wrapGlFunc(glPolygonOffset, factor, units)
#define glPolygonOffsetClampEXT(factor, units, clamp) wrapGlFunc(glPolygonOffsetClampEXT, factor, units, clamp)
#define glPolygonOffsetEXT(factor, bias) wrapGlFunc(glPolygonOffsetEXT, factor, bias)
#define glPolygonOffsetx(factor, units) wrapGlFunc(glPolygonOffsetx, factor, units)
#define glPolygonOffsetxOES(factor, units) wrapGlFunc(glPolygonOffsetxOES, factor, units)
#define glPolygonStipple(mask) wrapGlFunc(glPolygonStipple, mask)
#define glPopAttrib() wrapGlFuncNoArgs(glPopAttrib)
#define glPopClientAttrib() wrapGlFuncNoArgs(glPopClientAttrib)
#define glPopDebugGroup() wrapGlFuncNoArgs(glPopDebugGroup)
#define glPopDebugGroupKHR() wrapGlFuncNoArgs(glPopDebugGroupKHR)
#define glPopGroupMarkerEXT() wrapGlFuncNoArgs(glPopGroupMarkerEXT)
#define glPopMatrix() wrapGlFuncNoArgs(glPopMatrix)
#define glPopName() wrapGlFuncNoArgs(glPopName)
#define glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3) wrapGlFunc(glPresentFrameDualFillNV, video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3)
#define glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1) wrapGlFunc(glPresentFrameKeyedNV, video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1)
#define glPrimitiveBoundingBox(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW) wrapGlFunc(glPrimitiveBoundingBox, minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
#define glPrimitiveBoundingBoxARB(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW) wrapGlFunc(glPrimitiveBoundingBoxARB, minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
#define glPrimitiveBoundingBoxEXT(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW) wrapGlFunc(glPrimitiveBoundingBoxEXT, minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
#define glPrimitiveBoundingBoxOES(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW) wrapGlFunc(glPrimitiveBoundingBoxOES, minX, minY, minZ, minW, maxX, maxY, maxZ, maxW)
#define glPrimitiveRestartIndex(index) wrapGlFunc(glPrimitiveRestartIndex, index)
#define glPrimitiveRestartIndexNV(index) wrapGlFunc(glPrimitiveRestartIndexNV, index)
#define glPrimitiveRestartNV() wrapGlFuncNoArgs(glPrimitiveRestartNV)
#define glPrioritizeTextures(n, textures, priorities) wrapGlFunc(glPrioritizeTextures, n, textures, priorities)
#define glPrioritizeTexturesEXT(n, textures, priorities) wrapGlFunc(glPrioritizeTexturesEXT, n, textures, priorities)
#define glPrioritizeTexturesxOES(n, textures, priorities) wrapGlFunc(glPrioritizeTexturesxOES, n, textures, priorities)
#define glProgramBinary(program, binaryFormat, binary, length) wrapGlFunc(glProgramBinary, program, binaryFormat, binary, length)
#define glProgramBinaryOES(program, binaryFormat, binary, length) wrapGlFunc(glProgramBinaryOES, program, binaryFormat, binary, length)
#define glProgramBufferParametersIivNV(target, bindingIndex, wordIndex, count, params) wrapGlFunc(glProgramBufferParametersIivNV, target, bindingIndex, wordIndex, count, params)
#define glProgramBufferParametersIuivNV(target, bindingIndex, wordIndex, count, params) wrapGlFunc(glProgramBufferParametersIuivNV, target, bindingIndex, wordIndex, count, params)
#define glProgramBufferParametersfvNV(target, bindingIndex, wordIndex, count, params) wrapGlFunc(glProgramBufferParametersfvNV, target, bindingIndex, wordIndex, count, params)
#define glProgramEnvParameter4dARB(target, index, x, y, z, w) wrapGlFunc(glProgramEnvParameter4dARB, target, index, x, y, z, w)
#define glProgramEnvParameter4dvARB(target, index, params) wrapGlFunc(glProgramEnvParameter4dvARB, target, index, params)
#define glProgramEnvParameter4fARB(target, index, x, y, z, w) wrapGlFunc(glProgramEnvParameter4fARB, target, index, x, y, z, w)
#define glProgramEnvParameter4fvARB(target, index, params) wrapGlFunc(glProgramEnvParameter4fvARB, target, index, params)
#define glProgramEnvParameterI4iNV(target, index, x, y, z, w) wrapGlFunc(glProgramEnvParameterI4iNV, target, index, x, y, z, w)
#define glProgramEnvParameterI4ivNV(target, index, params) wrapGlFunc(glProgramEnvParameterI4ivNV, target, index, params)
#define glProgramEnvParameterI4uiNV(target, index, x, y, z, w) wrapGlFunc(glProgramEnvParameterI4uiNV, target, index, x, y, z, w)
#define glProgramEnvParameterI4uivNV(target, index, params) wrapGlFunc(glProgramEnvParameterI4uivNV, target, index, params)
#define glProgramEnvParameters4fvEXT(target, index, count, params) wrapGlFunc(glProgramEnvParameters4fvEXT, target, index, count, params)
#define glProgramEnvParametersI4ivNV(target, index, count, params) wrapGlFunc(glProgramEnvParametersI4ivNV, target, index, count, params)
#define glProgramEnvParametersI4uivNV(target, index, count, params) wrapGlFunc(glProgramEnvParametersI4uivNV, target, index, count, params)
#define glProgramLocalParameter4dARB(target, index, x, y, z, w) wrapGlFunc(glProgramLocalParameter4dARB, target, index, x, y, z, w)
#define glProgramLocalParameter4dvARB(target, index, params) wrapGlFunc(glProgramLocalParameter4dvARB, target, index, params)
#define glProgramLocalParameter4fARB(target, index, x, y, z, w) wrapGlFunc(glProgramLocalParameter4fARB, target, index, x, y, z, w)
#define glProgramLocalParameter4fvARB(target, index, params) wrapGlFunc(glProgramLocalParameter4fvARB, target, index, params)
#define glProgramLocalParameterI4iNV(target, index, x, y, z, w) wrapGlFunc(glProgramLocalParameterI4iNV, target, index, x, y, z, w)
#define glProgramLocalParameterI4ivNV(target, index, params) wrapGlFunc(glProgramLocalParameterI4ivNV, target, index, params)
#define glProgramLocalParameterI4uiNV(target, index, x, y, z, w) wrapGlFunc(glProgramLocalParameterI4uiNV, target, index, x, y, z, w)
#define glProgramLocalParameterI4uivNV(target, index, params) wrapGlFunc(glProgramLocalParameterI4uivNV, target, index, params)
#define glProgramLocalParameters4fvEXT(target, index, count, params) wrapGlFunc(glProgramLocalParameters4fvEXT, target, index, count, params)
#define glProgramLocalParametersI4ivNV(target, index, count, params) wrapGlFunc(glProgramLocalParametersI4ivNV, target, index, count, params)
#define glProgramLocalParametersI4uivNV(target, index, count, params) wrapGlFunc(glProgramLocalParametersI4uivNV, target, index, count, params)
#define glProgramNamedParameter4dNV(id, len, name, x, y, z, w) wrapGlFunc(glProgramNamedParameter4dNV, id, len, name, x, y, z, w)
#define glProgramNamedParameter4dvNV(id, len, name, v) wrapGlFunc(glProgramNamedParameter4dvNV, id, len, name, v)
#define glProgramNamedParameter4fNV(id, len, name, x, y, z, w) wrapGlFunc(glProgramNamedParameter4fNV, id, len, name, x, y, z, w)
#define glProgramNamedParameter4fvNV(id, len, name, v) wrapGlFunc(glProgramNamedParameter4fvNV, id, len, name, v)
#define glProgramParameter4dNV(target, index, x, y, z, w) wrapGlFunc(glProgramParameter4dNV, target, index, x, y, z, w)
#define glProgramParameter4dvNV(target, index, v) wrapGlFunc(glProgramParameter4dvNV, target, index, v)
#define glProgramParameter4fNV(target, index, x, y, z, w) wrapGlFunc(glProgramParameter4fNV, target, index, x, y, z, w)
#define glProgramParameter4fvNV(target, index, v) wrapGlFunc(glProgramParameter4fvNV, target, index, v)
#define glProgramParameteri(program, pname, value) wrapGlFunc(glProgramParameteri, program, pname, value)
#define glProgramParameteriARB(program, pname, value) wrapGlFunc(glProgramParameteriARB, program, pname, value)
#define glProgramParameteriEXT(program, pname, value) wrapGlFunc(glProgramParameteriEXT, program, pname, value)
#define glProgramParameters4dvNV(target, index, count, v) wrapGlFunc(glProgramParameters4dvNV, target, index, count, v)
#define glProgramParameters4fvNV(target, index, count, v) wrapGlFunc(glProgramParameters4fvNV, target, index, count, v)
#define glProgramPathFragmentInputGenNV(program, location, genMode, components, coeffs) wrapGlFunc(glProgramPathFragmentInputGenNV, program, location, genMode, components, coeffs)
#define glProgramStringARB(target, format, len, string) wrapGlFunc(glProgramStringARB, target, format, len, string)
#define glProgramSubroutineParametersuivNV(target, count, params) wrapGlFunc(glProgramSubroutineParametersuivNV, target, count, params)
#define glProgramUniform1d(program, location, v0) wrapGlFunc(glProgramUniform1d, program, location, v0)
#define glProgramUniform1dEXT(program, location, x) wrapGlFunc(glProgramUniform1dEXT, program, location, x)
#define glProgramUniform1dv(program, location, count, value) wrapGlFunc(glProgramUniform1dv, program, location, count, value)
#define glProgramUniform1dvEXT(program, location, count, value) wrapGlFunc(glProgramUniform1dvEXT, program, location, count, value)
#define glProgramUniform1f(program, location, v0) wrapGlFunc(glProgramUniform1f, program, location, v0)
#define glProgramUniform1fEXT(program, location, v0) wrapGlFunc(glProgramUniform1fEXT, program, location, v0)
#define glProgramUniform1fv(program, location, count, value) wrapGlFunc(glProgramUniform1fv, program, location, count, value)
#define glProgramUniform1fvEXT(program, location, count, value) wrapGlFunc(glProgramUniform1fvEXT, program, location, count, value)
#define glProgramUniform1i(program, location, v0) wrapGlFunc(glProgramUniform1i, program, location, v0)
#define glProgramUniform1i64ARB(program, location, x) wrapGlFunc(glProgramUniform1i64ARB, program, location, x)
#define glProgramUniform1i64NV(program, location, x) wrapGlFunc(glProgramUniform1i64NV, program, location, x)
#define glProgramUniform1i64vARB(program, location, count, value) wrapGlFunc(glProgramUniform1i64vARB, program, location, count, value)
#define glProgramUniform1i64vNV(program, location, count, value) wrapGlFunc(glProgramUniform1i64vNV, program, location, count, value)
#define glProgramUniform1iEXT(program, location, v0) wrapGlFunc(glProgramUniform1iEXT, program, location, v0)
#define glProgramUniform1iv(program, location, count, value) wrapGlFunc(glProgramUniform1iv, program, location, count, value)
#define glProgramUniform1ivEXT(program, location, count, value) wrapGlFunc(glProgramUniform1ivEXT, program, location, count, value)
#define glProgramUniform1ui(program, location, v0) wrapGlFunc(glProgramUniform1ui, program, location, v0)
#define glProgramUniform1ui64ARB(program, location, x) wrapGlFunc(glProgramUniform1ui64ARB, program, location, x)
#define glProgramUniform1ui64NV(program, location, x) wrapGlFunc(glProgramUniform1ui64NV, program, location, x)
#define glProgramUniform1ui64vARB(program, location, count, value) wrapGlFunc(glProgramUniform1ui64vARB, program, location, count, value)
#define glProgramUniform1ui64vNV(program, location, count, value) wrapGlFunc(glProgramUniform1ui64vNV, program, location, count, value)
#define glProgramUniform1uiEXT(program, location, v0) wrapGlFunc(glProgramUniform1uiEXT, program, location, v0)
#define glProgramUniform1uiv(program, location, count, value) wrapGlFunc(glProgramUniform1uiv, program, location, count, value)
#define glProgramUniform1uivEXT(program, location, count, value) wrapGlFunc(glProgramUniform1uivEXT, program, location, count, value)
#define glProgramUniform2d(program, location, v0, v1) wrapGlFunc(glProgramUniform2d, program, location, v0, v1)
#define glProgramUniform2dEXT(program, location, x, y) wrapGlFunc(glProgramUniform2dEXT, program, location, x, y)
#define glProgramUniform2dv(program, location, count, value) wrapGlFunc(glProgramUniform2dv, program, location, count, value)
#define glProgramUniform2dvEXT(program, location, count, value) wrapGlFunc(glProgramUniform2dvEXT, program, location, count, value)
#define glProgramUniform2f(program, location, v0, v1) wrapGlFunc(glProgramUniform2f, program, location, v0, v1)
#define glProgramUniform2fEXT(program, location, v0, v1) wrapGlFunc(glProgramUniform2fEXT, program, location, v0, v1)
#define glProgramUniform2fv(program, location, count, value) wrapGlFunc(glProgramUniform2fv, program, location, count, value)
#define glProgramUniform2fvEXT(program, location, count, value) wrapGlFunc(glProgramUniform2fvEXT, program, location, count, value)
#define glProgramUniform2i(program, location, v0, v1) wrapGlFunc(glProgramUniform2i, program, location, v0, v1)
#define glProgramUniform2i64ARB(program, location, x, y) wrapGlFunc(glProgramUniform2i64ARB, program, location, x, y)
#define glProgramUniform2i64NV(program, location, x, y) wrapGlFunc(glProgramUniform2i64NV, program, location, x, y)
#define glProgramUniform2i64vARB(program, location, count, value) wrapGlFunc(glProgramUniform2i64vARB, program, location, count, value)
#define glProgramUniform2i64vNV(program, location, count, value) wrapGlFunc(glProgramUniform2i64vNV, program, location, count, value)
#define glProgramUniform2iEXT(program, location, v0, v1) wrapGlFunc(glProgramUniform2iEXT, program, location, v0, v1)
#define glProgramUniform2iv(program, location, count, value) wrapGlFunc(glProgramUniform2iv, program, location, count, value)
#define glProgramUniform2ivEXT(program, location, count, value) wrapGlFunc(glProgramUniform2ivEXT, program, location, count, value)
#define glProgramUniform2ui(program, location, v0, v1) wrapGlFunc(glProgramUniform2ui, program, location, v0, v1)
#define glProgramUniform2ui64ARB(program, location, x, y) wrapGlFunc(glProgramUniform2ui64ARB, program, location, x, y)
#define glProgramUniform2ui64NV(program, location, x, y) wrapGlFunc(glProgramUniform2ui64NV, program, location, x, y)
#define glProgramUniform2ui64vARB(program, location, count, value) wrapGlFunc(glProgramUniform2ui64vARB, program, location, count, value)
#define glProgramUniform2ui64vNV(program, location, count, value) wrapGlFunc(glProgramUniform2ui64vNV, program, location, count, value)
#define glProgramUniform2uiEXT(program, location, v0, v1) wrapGlFunc(glProgramUniform2uiEXT, program, location, v0, v1)
#define glProgramUniform2uiv(program, location, count, value) wrapGlFunc(glProgramUniform2uiv, program, location, count, value)
#define glProgramUniform2uivEXT(program, location, count, value) wrapGlFunc(glProgramUniform2uivEXT, program, location, count, value)
#define glProgramUniform3d(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3d, program, location, v0, v1, v2)
#define glProgramUniform3dEXT(program, location, x, y, z) wrapGlFunc(glProgramUniform3dEXT, program, location, x, y, z)
#define glProgramUniform3dv(program, location, count, value) wrapGlFunc(glProgramUniform3dv, program, location, count, value)
#define glProgramUniform3dvEXT(program, location, count, value) wrapGlFunc(glProgramUniform3dvEXT, program, location, count, value)
#define glProgramUniform3f(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3f, program, location, v0, v1, v2)
#define glProgramUniform3fEXT(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3fEXT, program, location, v0, v1, v2)
#define glProgramUniform3fv(program, location, count, value) wrapGlFunc(glProgramUniform3fv, program, location, count, value)
#define glProgramUniform3fvEXT(program, location, count, value) wrapGlFunc(glProgramUniform3fvEXT, program, location, count, value)
#define glProgramUniform3i(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3i, program, location, v0, v1, v2)
#define glProgramUniform3i64ARB(program, location, x, y, z) wrapGlFunc(glProgramUniform3i64ARB, program, location, x, y, z)
#define glProgramUniform3i64NV(program, location, x, y, z) wrapGlFunc(glProgramUniform3i64NV, program, location, x, y, z)
#define glProgramUniform3i64vARB(program, location, count, value) wrapGlFunc(glProgramUniform3i64vARB, program, location, count, value)
#define glProgramUniform3i64vNV(program, location, count, value) wrapGlFunc(glProgramUniform3i64vNV, program, location, count, value)
#define glProgramUniform3iEXT(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3iEXT, program, location, v0, v1, v2)
#define glProgramUniform3iv(program, location, count, value) wrapGlFunc(glProgramUniform3iv, program, location, count, value)
#define glProgramUniform3ivEXT(program, location, count, value) wrapGlFunc(glProgramUniform3ivEXT, program, location, count, value)
#define glProgramUniform3ui(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3ui, program, location, v0, v1, v2)
#define glProgramUniform3ui64ARB(program, location, x, y, z) wrapGlFunc(glProgramUniform3ui64ARB, program, location, x, y, z)
#define glProgramUniform3ui64NV(program, location, x, y, z) wrapGlFunc(glProgramUniform3ui64NV, program, location, x, y, z)
#define glProgramUniform3ui64vARB(program, location, count, value) wrapGlFunc(glProgramUniform3ui64vARB, program, location, count, value)
#define glProgramUniform3ui64vNV(program, location, count, value) wrapGlFunc(glProgramUniform3ui64vNV, program, location, count, value)
#define glProgramUniform3uiEXT(program, location, v0, v1, v2) wrapGlFunc(glProgramUniform3uiEXT, program, location, v0, v1, v2)
#define glProgramUniform3uiv(program, location, count, value) wrapGlFunc(glProgramUniform3uiv, program, location, count, value)
#define glProgramUniform3uivEXT(program, location, count, value) wrapGlFunc(glProgramUniform3uivEXT, program, location, count, value)
#define glProgramUniform4d(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4d, program, location, v0, v1, v2, v3)
#define glProgramUniform4dEXT(program, location, x, y, z, w) wrapGlFunc(glProgramUniform4dEXT, program, location, x, y, z, w)
#define glProgramUniform4dv(program, location, count, value) wrapGlFunc(glProgramUniform4dv, program, location, count, value)
#define glProgramUniform4dvEXT(program, location, count, value) wrapGlFunc(glProgramUniform4dvEXT, program, location, count, value)
#define glProgramUniform4f(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4f, program, location, v0, v1, v2, v3)
#define glProgramUniform4fEXT(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4fEXT, program, location, v0, v1, v2, v3)
#define glProgramUniform4fv(program, location, count, value) wrapGlFunc(glProgramUniform4fv, program, location, count, value)
#define glProgramUniform4fvEXT(program, location, count, value) wrapGlFunc(glProgramUniform4fvEXT, program, location, count, value)
#define glProgramUniform4i(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4i, program, location, v0, v1, v2, v3)
#define glProgramUniform4i64ARB(program, location, x, y, z, w) wrapGlFunc(glProgramUniform4i64ARB, program, location, x, y, z, w)
#define glProgramUniform4i64NV(program, location, x, y, z, w) wrapGlFunc(glProgramUniform4i64NV, program, location, x, y, z, w)
#define glProgramUniform4i64vARB(program, location, count, value) wrapGlFunc(glProgramUniform4i64vARB, program, location, count, value)
#define glProgramUniform4i64vNV(program, location, count, value) wrapGlFunc(glProgramUniform4i64vNV, program, location, count, value)
#define glProgramUniform4iEXT(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4iEXT, program, location, v0, v1, v2, v3)
#define glProgramUniform4iv(program, location, count, value) wrapGlFunc(glProgramUniform4iv, program, location, count, value)
#define glProgramUniform4ivEXT(program, location, count, value) wrapGlFunc(glProgramUniform4ivEXT, program, location, count, value)
#define glProgramUniform4ui(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4ui, program, location, v0, v1, v2, v3)
#define glProgramUniform4ui64ARB(program, location, x, y, z, w) wrapGlFunc(glProgramUniform4ui64ARB, program, location, x, y, z, w)
#define glProgramUniform4ui64NV(program, location, x, y, z, w) wrapGlFunc(glProgramUniform4ui64NV, program, location, x, y, z, w)
#define glProgramUniform4ui64vARB(program, location, count, value) wrapGlFunc(glProgramUniform4ui64vARB, program, location, count, value)
#define glProgramUniform4ui64vNV(program, location, count, value) wrapGlFunc(glProgramUniform4ui64vNV, program, location, count, value)
#define glProgramUniform4uiEXT(program, location, v0, v1, v2, v3) wrapGlFunc(glProgramUniform4uiEXT, program, location, v0, v1, v2, v3)
#define glProgramUniform4uiv(program, location, count, value) wrapGlFunc(glProgramUniform4uiv, program, location, count, value)
#define glProgramUniform4uivEXT(program, location, count, value) wrapGlFunc(glProgramUniform4uivEXT, program, location, count, value)
#define glProgramUniformHandleui64ARB(program, location, value) wrapGlFunc(glProgramUniformHandleui64ARB, program, location, value)
#define glProgramUniformHandleui64IMG(program, location, value) wrapGlFunc(glProgramUniformHandleui64IMG, program, location, value)
#define glProgramUniformHandleui64NV(program, location, value) wrapGlFunc(glProgramUniformHandleui64NV, program, location, value)
#define glProgramUniformHandleui64vARB(program, location, count, values) wrapGlFunc(glProgramUniformHandleui64vARB, program, location, count, values)
#define glProgramUniformHandleui64vIMG(program, location, count, values) wrapGlFunc(glProgramUniformHandleui64vIMG, program, location, count, values)
#define glProgramUniformHandleui64vNV(program, location, count, values) wrapGlFunc(glProgramUniformHandleui64vNV, program, location, count, values)
#define glProgramUniformMatrix2dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2dv, program, location, count, transpose, value)
#define glProgramUniformMatrix2dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix2fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2fv, program, location, count, transpose, value)
#define glProgramUniformMatrix2fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix2x3dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x3dv, program, location, count, transpose, value)
#define glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x3dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix2x3fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x3fv, program, location, count, transpose, value)
#define glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x3fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix2x4dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x4dv, program, location, count, transpose, value)
#define glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x4dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix2x4fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x4fv, program, location, count, transpose, value)
#define glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix2x4fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3dv, program, location, count, transpose, value)
#define glProgramUniformMatrix3dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3fv, program, location, count, transpose, value)
#define glProgramUniformMatrix3fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3x2dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x2dv, program, location, count, transpose, value)
#define glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x2dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3x2fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x2fv, program, location, count, transpose, value)
#define glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x2fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3x4dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x4dv, program, location, count, transpose, value)
#define glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x4dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix3x4fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x4fv, program, location, count, transpose, value)
#define glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix3x4fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4dv, program, location, count, transpose, value)
#define glProgramUniformMatrix4dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4fv, program, location, count, transpose, value)
#define glProgramUniformMatrix4fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4x2dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x2dv, program, location, count, transpose, value)
#define glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x2dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4x2fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x2fv, program, location, count, transpose, value)
#define glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x2fvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4x3dv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x3dv, program, location, count, transpose, value)
#define glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x3dvEXT, program, location, count, transpose, value)
#define glProgramUniformMatrix4x3fv(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x3fv, program, location, count, transpose, value)
#define glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value) wrapGlFunc(glProgramUniformMatrix4x3fvEXT, program, location, count, transpose, value)
#define glProgramUniformui64NV(program, location, value) wrapGlFunc(glProgramUniformui64NV, program, location, value)
#define glProgramUniformui64vNV(program, location, count, value) wrapGlFunc(glProgramUniformui64vNV, program, location, count, value)
#define glProgramVertexLimitNV(target, limit) wrapGlFunc(glProgramVertexLimitNV, target, limit)
#define glProvokingVertex(mode) wrapGlFunc(glProvokingVertex, mode)
#define glProvokingVertexEXT(mode) wrapGlFunc(glProvokingVertexEXT, mode)
#define glPushAttrib(mask) wrapGlFunc(glPushAttrib, mask)
#define glPushClientAttrib(mask) wrapGlFunc(glPushClientAttrib, mask)
#define glPushClientAttribDefaultEXT(mask) wrapGlFunc(glPushClientAttribDefaultEXT, mask)
#define glPushDebugGroup(source, id, length, message) wrapGlFunc(glPushDebugGroup, source, id, length, message)
#define glPushDebugGroupKHR(source, id, length, message) wrapGlFunc(glPushDebugGroupKHR, source, id, length, message)
#define glPushGroupMarkerEXT(length, marker) wrapGlFunc(glPushGroupMarkerEXT, length, marker)
#define glPushMatrix() wrapGlFuncNoArgs(glPushMatrix)
#define glPushName(name) wrapGlFunc(glPushName, name)
#define glQueryCounter(id, target) wrapGlFunc(glQueryCounter, id, target)
#define glQueryCounterEXT(id, target) wrapGlFunc(glQueryCounterEXT, id, target)
#define glQueryObjectParameteruiAMD(target, id, pname, param) wrapGlFunc(glQueryObjectParameteruiAMD, target, id, pname, param)
#define glRasterPos2d(x, y) wrapGlFunc(glRasterPos2d, x, y)
#define glRasterPos2dv(v) wrapGlFunc(glRasterPos2dv, v)
#define glRasterPos2f(x, y) wrapGlFunc(glRasterPos2f, x, y)
#define glRasterPos2fv(v) wrapGlFunc(glRasterPos2fv, v)
#define glRasterPos2i(x, y) wrapGlFunc(glRasterPos2i, x, y)
#define glRasterPos2iv(v) wrapGlFunc(glRasterPos2iv, v)
#define glRasterPos2s(x, y) wrapGlFunc(glRasterPos2s, x, y)
#define glRasterPos2sv(v) wrapGlFunc(glRasterPos2sv, v)
#define glRasterPos2xOES(x, y) wrapGlFunc(glRasterPos2xOES, x, y)
#define glRasterPos2xvOES(coords) wrapGlFunc(glRasterPos2xvOES, coords)
#define glRasterPos3d(x, y, z) wrapGlFunc(glRasterPos3d, x, y, z)
#define glRasterPos3dv(v) wrapGlFunc(glRasterPos3dv, v)
#define glRasterPos3f(x, y, z) wrapGlFunc(glRasterPos3f, x, y, z)
#define glRasterPos3fv(v) wrapGlFunc(glRasterPos3fv, v)
#define glRasterPos3i(x, y, z) wrapGlFunc(glRasterPos3i, x, y, z)
#define glRasterPos3iv(v) wrapGlFunc(glRasterPos3iv, v)
#define glRasterPos3s(x, y, z) wrapGlFunc(glRasterPos3s, x, y, z)
#define glRasterPos3sv(v) wrapGlFunc(glRasterPos3sv, v)
#define glRasterPos3xOES(x, y, z) wrapGlFunc(glRasterPos3xOES, x, y, z)
#define glRasterPos3xvOES(coords) wrapGlFunc(glRasterPos3xvOES, coords)
#define glRasterPos4d(x, y, z, w) wrapGlFunc(glRasterPos4d, x, y, z, w)
#define glRasterPos4dv(v) wrapGlFunc(glRasterPos4dv, v)
#define glRasterPos4f(x, y, z, w) wrapGlFunc(glRasterPos4f, x, y, z, w)
#define glRasterPos4fv(v) wrapGlFunc(glRasterPos4fv, v)
#define glRasterPos4i(x, y, z, w) wrapGlFunc(glRasterPos4i, x, y, z, w)
#define glRasterPos4iv(v) wrapGlFunc(glRasterPos4iv, v)
#define glRasterPos4s(x, y, z, w) wrapGlFunc(glRasterPos4s, x, y, z, w)
#define glRasterPos4sv(v) wrapGlFunc(glRasterPos4sv, v)
#define glRasterPos4xOES(x, y, z, w) wrapGlFunc(glRasterPos4xOES, x, y, z, w)
#define glRasterPos4xvOES(coords) wrapGlFunc(glRasterPos4xvOES, coords)
#define glRasterSamplesEXT(samples, fixedsamplelocations) wrapGlFunc(glRasterSamplesEXT, samples, fixedsamplelocations)
#define glReadBuffer(src) wrapGlFunc(glReadBuffer, src)
#define glReadBufferIndexedEXT(src, index) wrapGlFunc(glReadBufferIndexedEXT, src, index)
#define glReadBufferNV(mode) wrapGlFunc(glReadBufferNV, mode)
#define glReadInstrumentsSGIX(marker) wrapGlFunc(glReadInstrumentsSGIX, marker)
#define glReadPixels(x, y, width, height, format, type, pixels) wrapGlFunc(glReadPixels, x, y, width, height, format, type, pixels)
#define glReadnPixels(x, y, width, height, format, type, bufSize, data) wrapGlFunc(glReadnPixels, x, y, width, height, format, type, bufSize, data)
#define glReadnPixelsARB(x, y, width, height, format, type, bufSize, data) wrapGlFunc(glReadnPixelsARB, x, y, width, height, format, type, bufSize, data)
#define glReadnPixelsEXT(x, y, width, height, format, type, bufSize, data) wrapGlFunc(glReadnPixelsEXT, x, y, width, height, format, type, bufSize, data)
#define glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data) wrapGlFunc(glReadnPixelsKHR, x, y, width, height, format, type, bufSize, data)
#define glRectd(x1, y1, x2, y2) wrapGlFunc(glRectd, x1, y1, x2, y2)
#define glRectdv(v1, v2) wrapGlFunc(glRectdv, v1, v2)
#define glRectf(x1, y1, x2, y2) wrapGlFunc(glRectf, x1, y1, x2, y2)
#define glRectfv(v1, v2) wrapGlFunc(glRectfv, v1, v2)
#define glRecti(x1, y1, x2, y2) wrapGlFunc(glRecti, x1, y1, x2, y2)
#define glRectiv(v1, v2) wrapGlFunc(glRectiv, v1, v2)
#define glRects(x1, y1, x2, y2) wrapGlFunc(glRects, x1, y1, x2, y2)
#define glRectsv(v1, v2) wrapGlFunc(glRectsv, v1, v2)
#define glRectxOES(x1, y1, x2, y2) wrapGlFunc(glRectxOES, x1, y1, x2, y2)
#define glRectxvOES(v1, v2) wrapGlFunc(glRectxvOES, v1, v2)
#define glReferencePlaneSGIX(equation) wrapGlFunc(glReferencePlaneSGIX, equation)
#define glReleaseShaderCompiler() wrapGlFuncNoArgs(glReleaseShaderCompiler)
#define glRenderbufferStorage(target, internalformat, width, height) wrapGlFunc(glRenderbufferStorage, target, internalformat, width, height)
#define glRenderbufferStorageEXT(target, internalformat, width, height) wrapGlFunc(glRenderbufferStorageEXT, target, internalformat, width, height)
#define glRenderbufferStorageMultisample(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisample, target, samples, internalformat, width, height)
#define glRenderbufferStorageMultisampleANGLE(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleANGLE, target, samples, internalformat, width, height)
#define glRenderbufferStorageMultisampleAPPLE(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleAPPLE, target, samples, internalformat, width, height)
#define glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleCoverageNV, target, coverageSamples, colorSamples, internalformat, width, height)
#define glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleEXT, target, samples, internalformat, width, height)
#define glRenderbufferStorageMultisampleIMG(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleIMG, target, samples, internalformat, width, height)
#define glRenderbufferStorageMultisampleNV(target, samples, internalformat, width, height) wrapGlFunc(glRenderbufferStorageMultisampleNV, target, samples, internalformat, width, height)
#define glRenderbufferStorageOES(target, internalformat, width, height) wrapGlFunc(glRenderbufferStorageOES, target, internalformat, width, height)
#define glReplacementCodePointerSUN(type, stride, pointer) wrapGlFunc(glReplacementCodePointerSUN, type, stride, pointer)
#define glReplacementCodeubSUN(code) wrapGlFunc(glReplacementCodeubSUN, code)
#define glReplacementCodeubvSUN(code) wrapGlFunc(glReplacementCodeubvSUN, code)
#define glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z) wrapGlFunc(glReplacementCodeuiColor3fVertex3fSUN, rc, r, g, b, x, y, z)
#define glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v) wrapGlFunc(glReplacementCodeuiColor3fVertex3fvSUN, rc, c, v)
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z) wrapGlFunc(glReplacementCodeuiColor4fNormal3fVertex3fSUN, rc, r, g, b, a, nx, ny, nz, x, y, z)
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v) wrapGlFunc(glReplacementCodeuiColor4fNormal3fVertex3fvSUN, rc, c, n, v)
#define glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z) wrapGlFunc(glReplacementCodeuiColor4ubVertex3fSUN, rc, r, g, b, a, x, y, z)
#define glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v) wrapGlFunc(glReplacementCodeuiColor4ubVertex3fvSUN, rc, c, v)
#define glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z) wrapGlFunc(glReplacementCodeuiNormal3fVertex3fSUN, rc, nx, ny, nz, x, y, z)
#define glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v) wrapGlFunc(glReplacementCodeuiNormal3fVertex3fvSUN, rc, n, v)
#define glReplacementCodeuiSUN(code) wrapGlFunc(glReplacementCodeuiSUN, code)
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z) wrapGlFunc(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN, rc, s, t, r, g, b, a, nx, ny, nz, x, y, z)
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v) wrapGlFunc(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN, rc, tc, c, n, v)
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z) wrapGlFunc(glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN, rc, s, t, nx, ny, nz, x, y, z)
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v) wrapGlFunc(glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN, rc, tc, n, v)
#define glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z) wrapGlFunc(glReplacementCodeuiTexCoord2fVertex3fSUN, rc, s, t, x, y, z)
#define glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v) wrapGlFunc(glReplacementCodeuiTexCoord2fVertex3fvSUN, rc, tc, v)
#define glReplacementCodeuiVertex3fSUN(rc, x, y, z) wrapGlFunc(glReplacementCodeuiVertex3fSUN, rc, x, y, z)
#define glReplacementCodeuiVertex3fvSUN(rc, v) wrapGlFunc(glReplacementCodeuiVertex3fvSUN, rc, v)
#define glReplacementCodeuivSUN(code) wrapGlFunc(glReplacementCodeuivSUN, code)
#define glReplacementCodeusSUN(code) wrapGlFunc(glReplacementCodeusSUN, code)
#define glReplacementCodeusvSUN(code) wrapGlFunc(glReplacementCodeusvSUN, code)
#define glRequestResidentProgramsNV(n, programs) wrapGlFunc(glRequestResidentProgramsNV, n, programs)
#define glResetHistogram(target) wrapGlFunc(glResetHistogram, target)
#define glResetHistogramEXT(target) wrapGlFunc(glResetHistogramEXT, target)
#define glResetMinmax(target) wrapGlFunc(glResetMinmax, target)
#define glResetMinmaxEXT(target) wrapGlFunc(glResetMinmaxEXT, target)
#define glResizeBuffersMESA() wrapGlFuncNoArgs(glResizeBuffersMESA)
#define glResolveDepthValuesNV() wrapGlFuncNoArgs(glResolveDepthValuesNV)
#define glResolveMultisampleFramebufferAPPLE() wrapGlFuncNoArgs(glResolveMultisampleFramebufferAPPLE)
#define glResumeTransformFeedback() wrapGlFuncNoArgs(glResumeTransformFeedback)
#define glResumeTransformFeedbackNV() wrapGlFuncNoArgs(glResumeTransformFeedbackNV)
#define glRotated(angle, x, y, z) wrapGlFunc(glRotated, angle, x, y, z)
#define glRotatef(angle, x, y, z) wrapGlFunc(glRotatef, angle, x, y, z)
#define glRotatex(angle, x, y, z) wrapGlFunc(glRotatex, angle, x, y, z)
#define glRotatexOES(angle, x, y, z) wrapGlFunc(glRotatexOES, angle, x, y, z)
#define glSampleCoverage(value, invert) wrapGlFunc(glSampleCoverage, value, invert)
#define glSampleCoverageARB(value, invert) wrapGlFunc(glSampleCoverageARB, value, invert)
#define glSampleCoveragex(value, invert) wrapGlFunc(glSampleCoveragex, value, invert)
#define glSampleCoveragexOES(value, invert) wrapGlFunc(glSampleCoveragexOES, value, invert)
#define glSampleMapATI(dst, interp, swizzle) wrapGlFunc(glSampleMapATI, dst, interp, swizzle)
#define glSampleMaskEXT(value, invert) wrapGlFunc(glSampleMaskEXT, value, invert)
#define glSampleMaskIndexedNV(index, mask) wrapGlFunc(glSampleMaskIndexedNV, index, mask)
#define glSampleMaskSGIS(value, invert) wrapGlFunc(glSampleMaskSGIS, value, invert)
#define glSampleMaski(maskNumber, mask) wrapGlFunc(glSampleMaski, maskNumber, mask)
#define glSamplePatternEXT(pattern) wrapGlFunc(glSamplePatternEXT, pattern)
#define glSamplePatternSGIS(pattern) wrapGlFunc(glSamplePatternSGIS, pattern)
#define glSamplerParameterIiv(sampler, pname, param) wrapGlFunc(glSamplerParameterIiv, sampler, pname, param)
#define glSamplerParameterIivEXT(sampler, pname, param) wrapGlFunc(glSamplerParameterIivEXT, sampler, pname, param)
#define glSamplerParameterIivOES(sampler, pname, param) wrapGlFunc(glSamplerParameterIivOES, sampler, pname, param)
#define glSamplerParameterIuiv(sampler, pname, param) wrapGlFunc(glSamplerParameterIuiv, sampler, pname, param)
#define glSamplerParameterIuivEXT(sampler, pname, param) wrapGlFunc(glSamplerParameterIuivEXT, sampler, pname, param)
#define glSamplerParameterIuivOES(sampler, pname, param) wrapGlFunc(glSamplerParameterIuivOES, sampler, pname, param)
#define glSamplerParameterf(sampler, pname, param) wrapGlFunc(glSamplerParameterf, sampler, pname, param)
#define glSamplerParameterfv(sampler, pname, param) wrapGlFunc(glSamplerParameterfv, sampler, pname, param)
#define glSamplerParameteri(sampler, pname, param) wrapGlFunc(glSamplerParameteri, sampler, pname, param)
#define glSamplerParameteriv(sampler, pname, param) wrapGlFunc(glSamplerParameteriv, sampler, pname, param)
#define glScaled(x, y, z) wrapGlFunc(glScaled, x, y, z)
#define glScalef(x, y, z) wrapGlFunc(glScalef, x, y, z)
#define glScalex(x, y, z) wrapGlFunc(glScalex, x, y, z)
#define glScalexOES(x, y, z) wrapGlFunc(glScalexOES, x, y, z)
#define glScissor(x, y, width, height) wrapGlFunc(glScissor, x, y, width, height)
#define glScissorArrayv(first, count, v) wrapGlFunc(glScissorArrayv, first, count, v)
#define glScissorArrayvNV(first, count, v) wrapGlFunc(glScissorArrayvNV, first, count, v)
#define glScissorArrayvOES(first, count, v) wrapGlFunc(glScissorArrayvOES, first, count, v)
#define glScissorIndexed(index, left, bottom, width, height) wrapGlFunc(glScissorIndexed, index, left, bottom, width, height)
#define glScissorIndexedNV(index, left, bottom, width, height) wrapGlFunc(glScissorIndexedNV, index, left, bottom, width, height)
#define glScissorIndexedOES(index, left, bottom, width, height) wrapGlFunc(glScissorIndexedOES, index, left, bottom, width, height)
#define glScissorIndexedv(index, v) wrapGlFunc(glScissorIndexedv, index, v)
#define glScissorIndexedvNV(index, v) wrapGlFunc(glScissorIndexedvNV, index, v)
#define glScissorIndexedvOES(index, v) wrapGlFunc(glScissorIndexedvOES, index, v)
#define glSecondaryColor3b(red, green, blue) wrapGlFunc(glSecondaryColor3b, red, green, blue)
#define glSecondaryColor3bEXT(red, green, blue) wrapGlFunc(glSecondaryColor3bEXT, red, green, blue)
#define glSecondaryColor3bv(v) wrapGlFunc(glSecondaryColor3bv, v)
#define glSecondaryColor3bvEXT(v) wrapGlFunc(glSecondaryColor3bvEXT, v)
#define glSecondaryColor3d(red, green, blue) wrapGlFunc(glSecondaryColor3d, red, green, blue)
#define glSecondaryColor3dEXT(red, green, blue) wrapGlFunc(glSecondaryColor3dEXT, red, green, blue)
#define glSecondaryColor3dv(v) wrapGlFunc(glSecondaryColor3dv, v)
#define glSecondaryColor3dvEXT(v) wrapGlFunc(glSecondaryColor3dvEXT, v)
#define glSecondaryColor3f(red, green, blue) wrapGlFunc(glSecondaryColor3f, red, green, blue)
#define glSecondaryColor3fEXT(red, green, blue) wrapGlFunc(glSecondaryColor3fEXT, red, green, blue)
#define glSecondaryColor3fv(v) wrapGlFunc(glSecondaryColor3fv, v)
#define glSecondaryColor3fvEXT(v) wrapGlFunc(glSecondaryColor3fvEXT, v)
#define glSecondaryColor3hNV(red, green, blue) wrapGlFunc(glSecondaryColor3hNV, red, green, blue)
#define glSecondaryColor3hvNV(v) wrapGlFunc(glSecondaryColor3hvNV, v)
#define glSecondaryColor3i(red, green, blue) wrapGlFunc(glSecondaryColor3i, red, green, blue)
#define glSecondaryColor3iEXT(red, green, blue) wrapGlFunc(glSecondaryColor3iEXT, red, green, blue)
#define glSecondaryColor3iv(v) wrapGlFunc(glSecondaryColor3iv, v)
#define glSecondaryColor3ivEXT(v) wrapGlFunc(glSecondaryColor3ivEXT, v)
#define glSecondaryColor3s(red, green, blue) wrapGlFunc(glSecondaryColor3s, red, green, blue)
#define glSecondaryColor3sEXT(red, green, blue) wrapGlFunc(glSecondaryColor3sEXT, red, green, blue)
#define glSecondaryColor3sv(v) wrapGlFunc(glSecondaryColor3sv, v)
#define glSecondaryColor3svEXT(v) wrapGlFunc(glSecondaryColor3svEXT, v)
#define glSecondaryColor3ub(red, green, blue) wrapGlFunc(glSecondaryColor3ub, red, green, blue)
#define glSecondaryColor3ubEXT(red, green, blue) wrapGlFunc(glSecondaryColor3ubEXT, red, green, blue)
#define glSecondaryColor3ubv(v) wrapGlFunc(glSecondaryColor3ubv, v)
#define glSecondaryColor3ubvEXT(v) wrapGlFunc(glSecondaryColor3ubvEXT, v)
#define glSecondaryColor3ui(red, green, blue) wrapGlFunc(glSecondaryColor3ui, red, green, blue)
#define glSecondaryColor3uiEXT(red, green, blue) wrapGlFunc(glSecondaryColor3uiEXT, red, green, blue)
#define glSecondaryColor3uiv(v) wrapGlFunc(glSecondaryColor3uiv, v)
#define glSecondaryColor3uivEXT(v) wrapGlFunc(glSecondaryColor3uivEXT, v)
#define glSecondaryColor3us(red, green, blue) wrapGlFunc(glSecondaryColor3us, red, green, blue)
#define glSecondaryColor3usEXT(red, green, blue) wrapGlFunc(glSecondaryColor3usEXT, red, green, blue)
#define glSecondaryColor3usv(v) wrapGlFunc(glSecondaryColor3usv, v)
#define glSecondaryColor3usvEXT(v) wrapGlFunc(glSecondaryColor3usvEXT, v)
#define glSecondaryColorFormatNV(size, type, stride) wrapGlFunc(glSecondaryColorFormatNV, size, type, stride)
#define glSecondaryColorP3ui(type, color) wrapGlFunc(glSecondaryColorP3ui, type, color)
#define glSecondaryColorP3uiv(type, color) wrapGlFunc(glSecondaryColorP3uiv, type, color)
#define glSecondaryColorPointer(size, type, stride, pointer) wrapGlFunc(glSecondaryColorPointer, size, type, stride, pointer)
#define glSecondaryColorPointerEXT(size, type, stride, pointer) wrapGlFunc(glSecondaryColorPointerEXT, size, type, stride, pointer)
#define glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride) wrapGlFunc(glSecondaryColorPointerListIBM, size, type, stride, pointer, ptrstride)
#define glSelectBuffer(size, buffer) wrapGlFunc(glSelectBuffer, size, buffer)
#define glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList) wrapGlFunc(glSelectPerfMonitorCountersAMD, monitor, enable, group, numCounters, counterList)
#define glSeparableFilter2D(target, internalformat, width, height, format, type, row, column) wrapGlFunc(glSeparableFilter2D, target, internalformat, width, height, format, type, row, column)
#define glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column) wrapGlFunc(glSeparableFilter2DEXT, target, internalformat, width, height, format, type, row, column)
#define glSetFenceAPPLE(fence) wrapGlFunc(glSetFenceAPPLE, fence)
#define glSetFenceNV(fence, condition) wrapGlFunc(glSetFenceNV, fence, condition)
#define glSetFragmentShaderConstantATI(dst, value) wrapGlFunc(glSetFragmentShaderConstantATI, dst, value)
#define glSetInvariantEXT(id, type, addr) wrapGlFunc(glSetInvariantEXT, id, type, addr)
#define glSetLocalConstantEXT(id, type, addr) wrapGlFunc(glSetLocalConstantEXT, id, type, addr)
#define glSetMultisamplefvAMD(pname, index, val) wrapGlFunc(glSetMultisamplefvAMD, pname, index, val)
#define glShadeModel(mode) wrapGlFunc(glShadeModel, mode)
#define glShaderBinary(count, shaders, binaryformat, binary, length) wrapGlFunc(glShaderBinary, count, shaders, binaryformat, binary, length)
#define glShaderOp1EXT(op, res, arg1) wrapGlFunc(glShaderOp1EXT, op, res, arg1)
#define glShaderOp2EXT(op, res, arg1, arg2) wrapGlFunc(glShaderOp2EXT, op, res, arg1, arg2)
#define glShaderOp3EXT(op, res, arg1, arg2, arg3) wrapGlFunc(glShaderOp3EXT, op, res, arg1, arg2, arg3)
#define glShaderSource(shader, count, string, length) wrapGlFunc(glShaderSource, shader, count, string, length)
#define glShaderSourceARB(shaderObj, count, string, length) wrapGlFunc(glShaderSourceARB, shaderObj, count, string, length)
#define glShaderStorageBlockBinding(program, storageBlockIndex, storageBlockBinding) wrapGlFunc(glShaderStorageBlockBinding, program, storageBlockIndex, storageBlockBinding)
#define glSharpenTexFuncSGIS(target, n, points) wrapGlFunc(glSharpenTexFuncSGIS, target, n, points)
#define glSpriteParameterfSGIX(pname, param) wrapGlFunc(glSpriteParameterfSGIX, pname, param)
#define glSpriteParameterfvSGIX(pname, params) wrapGlFunc(glSpriteParameterfvSGIX, pname, params)
#define glSpriteParameteriSGIX(pname, param) wrapGlFunc(glSpriteParameteriSGIX, pname, param)
#define glSpriteParameterivSGIX(pname, params) wrapGlFunc(glSpriteParameterivSGIX, pname, params)
#define glStartInstrumentsSGIX() wrapGlFuncNoArgs(glStartInstrumentsSGIX)
#define glStartTilingQCOM(x, y, width, height, preserveMask) wrapGlFunc(glStartTilingQCOM, x, y, width, height, preserveMask)
#define glStateCaptureNV(state, mode) wrapGlFunc(glStateCaptureNV, state, mode)
#define glStencilClearTagEXT(stencilTagBits, stencilClearTag) wrapGlFunc(glStencilClearTagEXT, stencilTagBits, stencilClearTag)
#define glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues) wrapGlFunc(glStencilFillPathInstancedNV, numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues)
#define glStencilFillPathNV(path, fillMode, mask) wrapGlFunc(glStencilFillPathNV, path, fillMode, mask)
#define glStencilFunc(func, ref, mask) wrapGlFunc(glStencilFunc, func, ref, mask)
#define glStencilFuncSeparate(face, func, ref, mask) wrapGlFunc(glStencilFuncSeparate, face, func, ref, mask)
#define glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask) wrapGlFunc(glStencilFuncSeparateATI, frontfunc, backfunc, ref, mask)
#define glStencilMask(mask) wrapGlFunc(glStencilMask, mask)
#define glStencilMaskSeparate(face, mask) wrapGlFunc(glStencilMaskSeparate, face, mask)
#define glStencilOp(fail, zfail, zpass) wrapGlFunc(glStencilOp, fail, zfail, zpass)
#define glStencilOpSeparate(face, sfail, dpfail, dppass) wrapGlFunc(glStencilOpSeparate, face, sfail, dpfail, dppass)
#define glStencilOpSeparateATI(face, sfail, dpfail, dppass) wrapGlFunc(glStencilOpSeparateATI, face, sfail, dpfail, dppass)
#define glStencilOpValueAMD(face, value) wrapGlFunc(glStencilOpValueAMD, face, value)
#define glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues) wrapGlFunc(glStencilStrokePathInstancedNV, numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues)
#define glStencilStrokePathNV(path, reference, mask) wrapGlFunc(glStencilStrokePathNV, path, reference, mask)
#define glStencilThenCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues) wrapGlFunc(glStencilThenCoverFillPathInstancedNV, numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues)
#define glStencilThenCoverFillPathNV(path, fillMode, mask, coverMode) wrapGlFunc(glStencilThenCoverFillPathNV, path, fillMode, mask, coverMode)
#define glStencilThenCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues) wrapGlFunc(glStencilThenCoverStrokePathInstancedNV, numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues)
#define glStencilThenCoverStrokePathNV(path, reference, mask, coverMode) wrapGlFunc(glStencilThenCoverStrokePathNV, path, reference, mask, coverMode)
#define glStopInstrumentsSGIX(marker) wrapGlFunc(glStopInstrumentsSGIX, marker)
#define glStringMarkerGREMEDY(len, string) wrapGlFunc(glStringMarkerGREMEDY, len, string)
#define glSubpixelPrecisionBiasNV(xbits, ybits) wrapGlFunc(glSubpixelPrecisionBiasNV, xbits, ybits)
#define glSwizzleEXT(res, in, outX, outY, outZ, outW) wrapGlFunc(glSwizzleEXT, res, in, outX, outY, outZ, outW)
#define glSyncTextureINTEL(texture) wrapGlFunc(glSyncTextureINTEL, texture)
#define glTagSampleBufferSGIX() wrapGlFuncNoArgs(glTagSampleBufferSGIX)
#define glTangent3bEXT(tx, ty, tz) wrapGlFunc(glTangent3bEXT, tx, ty, tz)
#define glTangent3bvEXT(v) wrapGlFunc(glTangent3bvEXT, v)
#define glTangent3dEXT(tx, ty, tz) wrapGlFunc(glTangent3dEXT, tx, ty, tz)
#define glTangent3dvEXT(v) wrapGlFunc(glTangent3dvEXT, v)
#define glTangent3fEXT(tx, ty, tz) wrapGlFunc(glTangent3fEXT, tx, ty, tz)
#define glTangent3fvEXT(v) wrapGlFunc(glTangent3fvEXT, v)
#define glTangent3iEXT(tx, ty, tz) wrapGlFunc(glTangent3iEXT, tx, ty, tz)
#define glTangent3ivEXT(v) wrapGlFunc(glTangent3ivEXT, v)
#define glTangent3sEXT(tx, ty, tz) wrapGlFunc(glTangent3sEXT, tx, ty, tz)
#define glTangent3svEXT(v) wrapGlFunc(glTangent3svEXT, v)
#define glTangentPointerEXT(type, stride, pointer) wrapGlFunc(glTangentPointerEXT, type, stride, pointer)
#define glTbufferMask3DFX(mask) wrapGlFunc(glTbufferMask3DFX, mask)
#define glTessellationFactorAMD(factor) wrapGlFunc(glTessellationFactorAMD, factor)
#define glTessellationModeAMD(mode) wrapGlFunc(glTessellationModeAMD, mode)
#define glTexBuffer(target, internalformat, buffer) wrapGlFunc(glTexBuffer, target, internalformat, buffer)
#define glTexBufferARB(target, internalformat, buffer) wrapGlFunc(glTexBufferARB, target, internalformat, buffer)
#define glTexBufferEXT(target, internalformat, buffer) wrapGlFunc(glTexBufferEXT, target, internalformat, buffer)
#define glTexBufferOES(target, internalformat, buffer) wrapGlFunc(glTexBufferOES, target, internalformat, buffer)
#define glTexBufferRange(target, internalformat, buffer, offset, size) wrapGlFunc(glTexBufferRange, target, internalformat, buffer, offset, size)
#define glTexBufferRangeEXT(target, internalformat, buffer, offset, size) wrapGlFunc(glTexBufferRangeEXT, target, internalformat, buffer, offset, size)
#define glTexBufferRangeOES(target, internalformat, buffer, offset, size) wrapGlFunc(glTexBufferRangeOES, target, internalformat, buffer, offset, size)
#define glTexBumpParameterfvATI(pname, param) wrapGlFunc(glTexBumpParameterfvATI, pname, param)
#define glTexBumpParameterivATI(pname, param) wrapGlFunc(glTexBumpParameterivATI, pname, param)
#define glTexCoord1bOES(s) wrapGlFunc(glTexCoord1bOES, s)
#define glTexCoord1bvOES(coords) wrapGlFunc(glTexCoord1bvOES, coords)
#define glTexCoord1d(s) wrapGlFunc(glTexCoord1d, s)
#define glTexCoord1dv(v) wrapGlFunc(glTexCoord1dv, v)
#define glTexCoord1f(s) wrapGlFunc(glTexCoord1f, s)
#define glTexCoord1fv(v) wrapGlFunc(glTexCoord1fv, v)
#define glTexCoord1hNV(s) wrapGlFunc(glTexCoord1hNV, s)
#define glTexCoord1hvNV(v) wrapGlFunc(glTexCoord1hvNV, v)
#define glTexCoord1i(s) wrapGlFunc(glTexCoord1i, s)
#define glTexCoord1iv(v) wrapGlFunc(glTexCoord1iv, v)
#define glTexCoord1s(s) wrapGlFunc(glTexCoord1s, s)
#define glTexCoord1sv(v) wrapGlFunc(glTexCoord1sv, v)
#define glTexCoord1xOES(s) wrapGlFunc(glTexCoord1xOES, s)
#define glTexCoord1xvOES(coords) wrapGlFunc(glTexCoord1xvOES, coords)
#define glTexCoord2bOES(s, t) wrapGlFunc(glTexCoord2bOES, s, t)
#define glTexCoord2bvOES(coords) wrapGlFunc(glTexCoord2bvOES, coords)
#define glTexCoord2d(s, t) wrapGlFunc(glTexCoord2d, s, t)
#define glTexCoord2dv(v) wrapGlFunc(glTexCoord2dv, v)
#define glTexCoord2f(s, t) wrapGlFunc(glTexCoord2f, s, t)
#define glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z) wrapGlFunc(glTexCoord2fColor3fVertex3fSUN, s, t, r, g, b, x, y, z)
#define glTexCoord2fColor3fVertex3fvSUN(tc, c, v) wrapGlFunc(glTexCoord2fColor3fVertex3fvSUN, tc, c, v)
#define glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z) wrapGlFunc(glTexCoord2fColor4fNormal3fVertex3fSUN, s, t, r, g, b, a, nx, ny, nz, x, y, z)
#define glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v) wrapGlFunc(glTexCoord2fColor4fNormal3fVertex3fvSUN, tc, c, n, v)
#define glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z) wrapGlFunc(glTexCoord2fColor4ubVertex3fSUN, s, t, r, g, b, a, x, y, z)
#define glTexCoord2fColor4ubVertex3fvSUN(tc, c, v) wrapGlFunc(glTexCoord2fColor4ubVertex3fvSUN, tc, c, v)
#define glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z) wrapGlFunc(glTexCoord2fNormal3fVertex3fSUN, s, t, nx, ny, nz, x, y, z)
#define glTexCoord2fNormal3fVertex3fvSUN(tc, n, v) wrapGlFunc(glTexCoord2fNormal3fVertex3fvSUN, tc, n, v)
#define glTexCoord2fVertex3fSUN(s, t, x, y, z) wrapGlFunc(glTexCoord2fVertex3fSUN, s, t, x, y, z)
#define glTexCoord2fVertex3fvSUN(tc, v) wrapGlFunc(glTexCoord2fVertex3fvSUN, tc, v)
#define glTexCoord2fv(v) wrapGlFunc(glTexCoord2fv, v)
#define glTexCoord2hNV(s, t) wrapGlFunc(glTexCoord2hNV, s, t)
#define glTexCoord2hvNV(v) wrapGlFunc(glTexCoord2hvNV, v)
#define glTexCoord2i(s, t) wrapGlFunc(glTexCoord2i, s, t)
#define glTexCoord2iv(v) wrapGlFunc(glTexCoord2iv, v)
#define glTexCoord2s(s, t) wrapGlFunc(glTexCoord2s, s, t)
#define glTexCoord2sv(v) wrapGlFunc(glTexCoord2sv, v)
#define glTexCoord2xOES(s, t) wrapGlFunc(glTexCoord2xOES, s, t)
#define glTexCoord2xvOES(coords) wrapGlFunc(glTexCoord2xvOES, coords)
#define glTexCoord3bOES(s, t, r) wrapGlFunc(glTexCoord3bOES, s, t, r)
#define glTexCoord3bvOES(coords) wrapGlFunc(glTexCoord3bvOES, coords)
#define glTexCoord3d(s, t, r) wrapGlFunc(glTexCoord3d, s, t, r)
#define glTexCoord3dv(v) wrapGlFunc(glTexCoord3dv, v)
#define glTexCoord3f(s, t, r) wrapGlFunc(glTexCoord3f, s, t, r)
#define glTexCoord3fv(v) wrapGlFunc(glTexCoord3fv, v)
#define glTexCoord3hNV(s, t, r) wrapGlFunc(glTexCoord3hNV, s, t, r)
#define glTexCoord3hvNV(v) wrapGlFunc(glTexCoord3hvNV, v)
#define glTexCoord3i(s, t, r) wrapGlFunc(glTexCoord3i, s, t, r)
#define glTexCoord3iv(v) wrapGlFunc(glTexCoord3iv, v)
#define glTexCoord3s(s, t, r) wrapGlFunc(glTexCoord3s, s, t, r)
#define glTexCoord3sv(v) wrapGlFunc(glTexCoord3sv, v)
#define glTexCoord3xOES(s, t, r) wrapGlFunc(glTexCoord3xOES, s, t, r)
#define glTexCoord3xvOES(coords) wrapGlFunc(glTexCoord3xvOES, coords)
#define glTexCoord4bOES(s, t, r, q) wrapGlFunc(glTexCoord4bOES, s, t, r, q)
#define glTexCoord4bvOES(coords) wrapGlFunc(glTexCoord4bvOES, coords)
#define glTexCoord4d(s, t, r, q) wrapGlFunc(glTexCoord4d, s, t, r, q)
#define glTexCoord4dv(v) wrapGlFunc(glTexCoord4dv, v)
#define glTexCoord4f(s, t, r, q) wrapGlFunc(glTexCoord4f, s, t, r, q)
#define glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w) wrapGlFunc(glTexCoord4fColor4fNormal3fVertex4fSUN, s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w)
#define glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v) wrapGlFunc(glTexCoord4fColor4fNormal3fVertex4fvSUN, tc, c, n, v)
#define glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w) wrapGlFunc(glTexCoord4fVertex4fSUN, s, t, p, q, x, y, z, w)
#define glTexCoord4fVertex4fvSUN(tc, v) wrapGlFunc(glTexCoord4fVertex4fvSUN, tc, v)
#define glTexCoord4fv(v) wrapGlFunc(glTexCoord4fv, v)
#define glTexCoord4hNV(s, t, r, q) wrapGlFunc(glTexCoord4hNV, s, t, r, q)
#define glTexCoord4hvNV(v) wrapGlFunc(glTexCoord4hvNV, v)
#define glTexCoord4i(s, t, r, q) wrapGlFunc(glTexCoord4i, s, t, r, q)
#define glTexCoord4iv(v) wrapGlFunc(glTexCoord4iv, v)
#define glTexCoord4s(s, t, r, q) wrapGlFunc(glTexCoord4s, s, t, r, q)
#define glTexCoord4sv(v) wrapGlFunc(glTexCoord4sv, v)
#define glTexCoord4xOES(s, t, r, q) wrapGlFunc(glTexCoord4xOES, s, t, r, q)
#define glTexCoord4xvOES(coords) wrapGlFunc(glTexCoord4xvOES, coords)
#define glTexCoordFormatNV(size, type, stride) wrapGlFunc(glTexCoordFormatNV, size, type, stride)
#define glTexCoordP1ui(type, coords) wrapGlFunc(glTexCoordP1ui, type, coords)
#define glTexCoordP1uiv(type, coords) wrapGlFunc(glTexCoordP1uiv, type, coords)
#define glTexCoordP2ui(type, coords) wrapGlFunc(glTexCoordP2ui, type, coords)
#define glTexCoordP2uiv(type, coords) wrapGlFunc(glTexCoordP2uiv, type, coords)
#define glTexCoordP3ui(type, coords) wrapGlFunc(glTexCoordP3ui, type, coords)
#define glTexCoordP3uiv(type, coords) wrapGlFunc(glTexCoordP3uiv, type, coords)
#define glTexCoordP4ui(type, coords) wrapGlFunc(glTexCoordP4ui, type, coords)
#define glTexCoordP4uiv(type, coords) wrapGlFunc(glTexCoordP4uiv, type, coords)
#define glTexCoordPointer(size, type, stride, pointer) wrapGlFunc(glTexCoordPointer, size, type, stride, pointer)
#define glTexCoordPointerEXT(size, type, stride, count, pointer) wrapGlFunc(glTexCoordPointerEXT, size, type, stride, count, pointer)
#define glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride) wrapGlFunc(glTexCoordPointerListIBM, size, type, stride, pointer, ptrstride)
#define glTexCoordPointervINTEL(size, type, pointer) wrapGlFunc(glTexCoordPointervINTEL, size, type, pointer)
#define glTexEnvf(target, pname, param) wrapGlFunc(glTexEnvf, target, pname, param)
#define glTexEnvfv(target, pname, params) wrapGlFunc(glTexEnvfv, target, pname, params)
#define glTexEnvi(target, pname, param) wrapGlFunc(glTexEnvi, target, pname, param)
#define glTexEnviv(target, pname, params) wrapGlFunc(glTexEnviv, target, pname, params)
#define glTexEnvx(target, pname, param) wrapGlFunc(glTexEnvx, target, pname, param)
#define glTexEnvxOES(target, pname, param) wrapGlFunc(glTexEnvxOES, target, pname, param)
#define glTexEnvxv(target, pname, params) wrapGlFunc(glTexEnvxv, target, pname, params)
#define glTexEnvxvOES(target, pname, params) wrapGlFunc(glTexEnvxvOES, target, pname, params)
#define glTexFilterFuncSGIS(target, filter, n, weights) wrapGlFunc(glTexFilterFuncSGIS, target, filter, n, weights)
#define glTexGend(coord, pname, param) wrapGlFunc(glTexGend, coord, pname, param)
#define glTexGendv(coord, pname, params) wrapGlFunc(glTexGendv, coord, pname, params)
#define glTexGenf(coord, pname, param) wrapGlFunc(glTexGenf, coord, pname, param)
#define glTexGenfOES(coord, pname, param) wrapGlFunc(glTexGenfOES, coord, pname, param)
#define glTexGenfv(coord, pname, params) wrapGlFunc(glTexGenfv, coord, pname, params)
#define glTexGenfvOES(coord, pname, params) wrapGlFunc(glTexGenfvOES, coord, pname, params)
#define glTexGeni(coord, pname, param) wrapGlFunc(glTexGeni, coord, pname, param)
#define glTexGeniOES(coord, pname, param) wrapGlFunc(glTexGeniOES, coord, pname, param)
#define glTexGeniv(coord, pname, params) wrapGlFunc(glTexGeniv, coord, pname, params)
#define glTexGenivOES(coord, pname, params) wrapGlFunc(glTexGenivOES, coord, pname, params)
#define glTexGenxOES(coord, pname, param) wrapGlFunc(glTexGenxOES, coord, pname, param)
#define glTexGenxvOES(coord, pname, params) wrapGlFunc(glTexGenxvOES, coord, pname, params)
#define glTexImage1D(target, level, internalformat, width, border, format, type, pixels) wrapGlFunc(glTexImage1D, target, level, internalformat, width, border, format, type, pixels)
#define glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels) wrapGlFunc(glTexImage2D, target, level, internalformat, width, height, border, format, type, pixels)
#define glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations) wrapGlFunc(glTexImage2DMultisample, target, samples, internalformat, width, height, fixedsamplelocations)
#define glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations) wrapGlFunc(glTexImage2DMultisampleCoverageNV, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
#define glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels) wrapGlFunc(glTexImage3D, target, level, internalformat, width, height, depth, border, format, type, pixels)
#define glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels) wrapGlFunc(glTexImage3DEXT, target, level, internalformat, width, height, depth, border, format, type, pixels)
#define glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations) wrapGlFunc(glTexImage3DMultisample, target, samples, internalformat, width, height, depth, fixedsamplelocations)
#define glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations) wrapGlFunc(glTexImage3DMultisampleCoverageNV, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
#define glTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels) wrapGlFunc(glTexImage3DOES, target, level, internalformat, width, height, depth, border, format, type, pixels)
#define glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels) wrapGlFunc(glTexImage4DSGIS, target, level, internalformat, width, height, depth, size4d, border, format, type, pixels)
#define glTexPageCommitmentARB(target, level, xoffset, yoffset, zoffset, width, height, depth, commit) wrapGlFunc(glTexPageCommitmentARB, target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
#define glTexPageCommitmentEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, commit) wrapGlFunc(glTexPageCommitmentEXT, target, level, xoffset, yoffset, zoffset, width, height, depth, commit)
#define glTexParameterIiv(target, pname, params) wrapGlFunc(glTexParameterIiv, target, pname, params)
#define glTexParameterIivEXT(target, pname, params) wrapGlFunc(glTexParameterIivEXT, target, pname, params)
#define glTexParameterIivOES(target, pname, params) wrapGlFunc(glTexParameterIivOES, target, pname, params)
#define glTexParameterIuiv(target, pname, params) wrapGlFunc(glTexParameterIuiv, target, pname, params)
#define glTexParameterIuivEXT(target, pname, params) wrapGlFunc(glTexParameterIuivEXT, target, pname, params)
#define glTexParameterIuivOES(target, pname, params) wrapGlFunc(glTexParameterIuivOES, target, pname, params)
#define glTexParameterf(target, pname, param) wrapGlFunc(glTexParameterf, target, pname, param)
#define glTexParameterfv(target, pname, params) wrapGlFunc(glTexParameterfv, target, pname, params)
#define glTexParameteri(target, pname, param) wrapGlFunc(glTexParameteri, target, pname, param)
#define glTexParameteriv(target, pname, params) wrapGlFunc(glTexParameteriv, target, pname, params)
#define glTexParameterx(target, pname, param) wrapGlFunc(glTexParameterx, target, pname, param)
#define glTexParameterxOES(target, pname, param) wrapGlFunc(glTexParameterxOES, target, pname, param)
#define glTexParameterxv(target, pname, params) wrapGlFunc(glTexParameterxv, target, pname, params)
#define glTexParameterxvOES(target, pname, params) wrapGlFunc(glTexParameterxvOES, target, pname, params)
#define glTexRenderbufferNV(target, renderbuffer) wrapGlFunc(glTexRenderbufferNV, target, renderbuffer)
#define glTexStorage1D(target, levels, internalformat, width) wrapGlFunc(glTexStorage1D, target, levels, internalformat, width)
#define glTexStorage1DEXT(target, levels, internalformat, width) wrapGlFunc(glTexStorage1DEXT, target, levels, internalformat, width)
#define glTexStorage2D(target, levels, internalformat, width, height) wrapGlFunc(glTexStorage2D, target, levels, internalformat, width, height)
#define glTexStorage2DEXT(target, levels, internalformat, width, height) wrapGlFunc(glTexStorage2DEXT, target, levels, internalformat, width, height)
#define glTexStorage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations) wrapGlFunc(glTexStorage2DMultisample, target, samples, internalformat, width, height, fixedsamplelocations)
#define glTexStorage3D(target, levels, internalformat, width, height, depth) wrapGlFunc(glTexStorage3D, target, levels, internalformat, width, height, depth)
#define glTexStorage3DEXT(target, levels, internalformat, width, height, depth) wrapGlFunc(glTexStorage3DEXT, target, levels, internalformat, width, height, depth)
#define glTexStorage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations) wrapGlFunc(glTexStorage3DMultisample, target, samples, internalformat, width, height, depth, fixedsamplelocations)
#define glTexStorage3DMultisampleOES(target, samples, internalformat, width, height, depth, fixedsamplelocations) wrapGlFunc(glTexStorage3DMultisampleOES, target, samples, internalformat, width, height, depth, fixedsamplelocations)
#define glTexStorageSparseAMD(target, internalFormat, width, height, depth, layers, flags) wrapGlFunc(glTexStorageSparseAMD, target, internalFormat, width, height, depth, layers, flags)
#define glTexSubImage1D(target, level, xoffset, width, format, type, pixels) wrapGlFunc(glTexSubImage1D, target, level, xoffset, width, format, type, pixels)
#define glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels) wrapGlFunc(glTexSubImage1DEXT, target, level, xoffset, width, format, type, pixels)
#define glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) wrapGlFunc(glTexSubImage2D, target, level, xoffset, yoffset, width, height, format, type, pixels)
#define glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels) wrapGlFunc(glTexSubImage2DEXT, target, level, xoffset, yoffset, width, height, format, type, pixels)
#define glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glTexSubImage3D, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glTexSubImage3DEXT, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glTexSubImage3DOES(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glTexSubImage3DOES, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels) wrapGlFunc(glTexSubImage4DSGIS, target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels)
#define glTextureBarrier() wrapGlFuncNoArgs(glTextureBarrier)
#define glTextureBarrierNV() wrapGlFuncNoArgs(glTextureBarrierNV)
#define glTextureBuffer(texture, internalformat, buffer) wrapGlFunc(glTextureBuffer, texture, internalformat, buffer)
#define glTextureBufferEXT(texture, target, internalformat, buffer) wrapGlFunc(glTextureBufferEXT, texture, target, internalformat, buffer)
#define glTextureBufferRange(texture, internalformat, buffer, offset, size) wrapGlFunc(glTextureBufferRange, texture, internalformat, buffer, offset, size)
#define glTextureBufferRangeEXT(texture, target, internalformat, buffer, offset, size) wrapGlFunc(glTextureBufferRangeEXT, texture, target, internalformat, buffer, offset, size)
#define glTextureColorMaskSGIS(red, green, blue, alpha) wrapGlFunc(glTextureColorMaskSGIS, red, green, blue, alpha)
#define glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels) wrapGlFunc(glTextureImage1DEXT, texture, target, level, internalformat, width, border, format, type, pixels)
#define glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels) wrapGlFunc(glTextureImage2DEXT, texture, target, level, internalformat, width, height, border, format, type, pixels)
#define glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations) wrapGlFunc(glTextureImage2DMultisampleCoverageNV, texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations)
#define glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations) wrapGlFunc(glTextureImage2DMultisampleNV, texture, target, samples, internalFormat, width, height, fixedSampleLocations)
#define glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels) wrapGlFunc(glTextureImage3DEXT, texture, target, level, internalformat, width, height, depth, border, format, type, pixels)
#define glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations) wrapGlFunc(glTextureImage3DMultisampleCoverageNV, texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations)
#define glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations) wrapGlFunc(glTextureImage3DMultisampleNV, texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations)
#define glTextureLightEXT(pname) wrapGlFunc(glTextureLightEXT, pname)
#define glTextureMaterialEXT(face, mode) wrapGlFunc(glTextureMaterialEXT, face, mode)
#define glTextureNormalEXT(mode) wrapGlFunc(glTextureNormalEXT, mode)
#define glTexturePageCommitmentEXT(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit) wrapGlFunc(glTexturePageCommitmentEXT, texture, level, xoffset, yoffset, zoffset, width, height, depth, commit)
#define glTextureParameterIiv(texture, pname, params) wrapGlFunc(glTextureParameterIiv, texture, pname, params)
#define glTextureParameterIivEXT(texture, target, pname, params) wrapGlFunc(glTextureParameterIivEXT, texture, target, pname, params)
#define glTextureParameterIuiv(texture, pname, params) wrapGlFunc(glTextureParameterIuiv, texture, pname, params)
#define glTextureParameterIuivEXT(texture, target, pname, params) wrapGlFunc(glTextureParameterIuivEXT, texture, target, pname, params)
#define glTextureParameterf(texture, pname, param) wrapGlFunc(glTextureParameterf, texture, pname, param)
#define glTextureParameterfEXT(texture, target, pname, param) wrapGlFunc(glTextureParameterfEXT, texture, target, pname, param)
#define glTextureParameterfv(texture, pname, param) wrapGlFunc(glTextureParameterfv, texture, pname, param)
#define glTextureParameterfvEXT(texture, target, pname, params) wrapGlFunc(glTextureParameterfvEXT, texture, target, pname, params)
#define glTextureParameteri(texture, pname, param) wrapGlFunc(glTextureParameteri, texture, pname, param)
#define glTextureParameteriEXT(texture, target, pname, param) wrapGlFunc(glTextureParameteriEXT, texture, target, pname, param)
#define glTextureParameteriv(texture, pname, param) wrapGlFunc(glTextureParameteriv, texture, pname, param)
#define glTextureParameterivEXT(texture, target, pname, params) wrapGlFunc(glTextureParameterivEXT, texture, target, pname, params)
#define glTextureRangeAPPLE(target, length, pointer) wrapGlFunc(glTextureRangeAPPLE, target, length, pointer)
#define glTextureRenderbufferEXT(texture, target, renderbuffer) wrapGlFunc(glTextureRenderbufferEXT, texture, target, renderbuffer)
#define glTextureStorage1D(texture, levels, internalformat, width) wrapGlFunc(glTextureStorage1D, texture, levels, internalformat, width)
#define glTextureStorage1DEXT(texture, target, levels, internalformat, width) wrapGlFunc(glTextureStorage1DEXT, texture, target, levels, internalformat, width)
#define glTextureStorage2D(texture, levels, internalformat, width, height) wrapGlFunc(glTextureStorage2D, texture, levels, internalformat, width, height)
#define glTextureStorage2DEXT(texture, target, levels, internalformat, width, height) wrapGlFunc(glTextureStorage2DEXT, texture, target, levels, internalformat, width, height)
#define glTextureStorage2DMultisample(texture, samples, internalformat, width, height, fixedsamplelocations) wrapGlFunc(glTextureStorage2DMultisample, texture, samples, internalformat, width, height, fixedsamplelocations)
#define glTextureStorage2DMultisampleEXT(texture, target, samples, internalformat, width, height, fixedsamplelocations) wrapGlFunc(glTextureStorage2DMultisampleEXT, texture, target, samples, internalformat, width, height, fixedsamplelocations)
#define glTextureStorage3D(texture, levels, internalformat, width, height, depth) wrapGlFunc(glTextureStorage3D, texture, levels, internalformat, width, height, depth)
#define glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth) wrapGlFunc(glTextureStorage3DEXT, texture, target, levels, internalformat, width, height, depth)
#define glTextureStorage3DMultisample(texture, samples, internalformat, width, height, depth, fixedsamplelocations) wrapGlFunc(glTextureStorage3DMultisample, texture, samples, internalformat, width, height, depth, fixedsamplelocations)
#define glTextureStorage3DMultisampleEXT(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations) wrapGlFunc(glTextureStorage3DMultisampleEXT, texture, target, samples, internalformat, width, height, depth, fixedsamplelocations)
#define glTextureStorageSparseAMD(texture, target, internalFormat, width, height, depth, layers, flags) wrapGlFunc(glTextureStorageSparseAMD, texture, target, internalFormat, width, height, depth, layers, flags)
#define glTextureSubImage1D(texture, level, xoffset, width, format, type, pixels) wrapGlFunc(glTextureSubImage1D, texture, level, xoffset, width, format, type, pixels)
#define glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels) wrapGlFunc(glTextureSubImage1DEXT, texture, target, level, xoffset, width, format, type, pixels)
#define glTextureSubImage2D(texture, level, xoffset, yoffset, width, height, format, type, pixels) wrapGlFunc(glTextureSubImage2D, texture, level, xoffset, yoffset, width, height, format, type, pixels)
#define glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels) wrapGlFunc(glTextureSubImage2DEXT, texture, target, level, xoffset, yoffset, width, height, format, type, pixels)
#define glTextureSubImage3D(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glTextureSubImage3D, texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) wrapGlFunc(glTextureSubImage3DEXT, texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)
#define glTextureView(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers) wrapGlFunc(glTextureView, texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
#define glTextureViewEXT(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers) wrapGlFunc(glTextureViewEXT, texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
#define glTextureViewOES(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers) wrapGlFunc(glTextureViewOES, texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers)
#define glTrackMatrixNV(target, address, matrix, transform) wrapGlFunc(glTrackMatrixNV, target, address, matrix, transform)
#define glTransformFeedbackAttribsNV(count, attribs, bufferMode) wrapGlFunc(glTransformFeedbackAttribsNV, count, attribs, bufferMode)
#define glTransformFeedbackBufferBase(xfb, index, buffer) wrapGlFunc(glTransformFeedbackBufferBase, xfb, index, buffer)
#define glTransformFeedbackBufferRange(xfb, index, buffer, offset, size) wrapGlFunc(glTransformFeedbackBufferRange, xfb, index, buffer, offset, size)
#define glTransformFeedbackStreamAttribsNV(count, attribs, nbuffers, bufstreams, bufferMode) wrapGlFunc(glTransformFeedbackStreamAttribsNV, count, attribs, nbuffers, bufstreams, bufferMode)
#define glTransformFeedbackVaryings(program, count, varyings, bufferMode) wrapGlFunc(glTransformFeedbackVaryings, program, count, varyings, bufferMode)
#define glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode) wrapGlFunc(glTransformFeedbackVaryingsEXT, program, count, varyings, bufferMode)
#define glTransformFeedbackVaryingsNV(program, count, locations, bufferMode) wrapGlFunc(glTransformFeedbackVaryingsNV, program, count, locations, bufferMode)
#define glTransformPathNV(resultPath, srcPath, transformType, transformValues) wrapGlFunc(glTransformPathNV, resultPath, srcPath, transformType, transformValues)
#define glTranslated(x, y, z) wrapGlFunc(glTranslated, x, y, z)
#define glTranslatef(x, y, z) wrapGlFunc(glTranslatef, x, y, z)
#define glTranslatex(x, y, z) wrapGlFunc(glTranslatex, x, y, z)
#define glTranslatexOES(x, y, z) wrapGlFunc(glTranslatexOES, x, y, z)
#define glUniform1d(location, x) wrapGlFunc(glUniform1d, location, x)
#define glUniform1dv(location, count, value) wrapGlFunc(glUniform1dv, location, count, value)
#define glUniform1f(location, v0) wrapGlFunc(glUniform1f, location, v0)
#define glUniform1fARB(location, v0) wrapGlFunc(glUniform1fARB, location, v0)
#define glUniform1fv(location, count, value) wrapGlFunc(glUniform1fv, location, count, value)
#define glUniform1fvARB(location, count, value) wrapGlFunc(glUniform1fvARB, location, count, value)
#define glUniform1i(location, v0) wrapGlFunc(glUniform1i, location, v0)
#define glUniform1i64ARB(location, x) wrapGlFunc(glUniform1i64ARB, location, x)
#define glUniform1i64NV(location, x) wrapGlFunc(glUniform1i64NV, location, x)
#define glUniform1i64vARB(location, count, value) wrapGlFunc(glUniform1i64vARB, location, count, value)
#define glUniform1i64vNV(location, count, value) wrapGlFunc(glUniform1i64vNV, location, count, value)
#define glUniform1iARB(location, v0) wrapGlFunc(glUniform1iARB, location, v0)
#define glUniform1iv(location, count, value) wrapGlFunc(glUniform1iv, location, count, value)
#define glUniform1ivARB(location, count, value) wrapGlFunc(glUniform1ivARB, location, count, value)
#define glUniform1ui(location, v0) wrapGlFunc(glUniform1ui, location, v0)
#define glUniform1ui64ARB(location, x) wrapGlFunc(glUniform1ui64ARB, location, x)
#define glUniform1ui64NV(location, x) wrapGlFunc(glUniform1ui64NV, location, x)
#define glUniform1ui64vARB(location, count, value) wrapGlFunc(glUniform1ui64vARB, location, count, value)
#define glUniform1ui64vNV(location, count, value) wrapGlFunc(glUniform1ui64vNV, location, count, value)
#define glUniform1uiEXT(location, v0) wrapGlFunc(glUniform1uiEXT, location, v0)
#define glUniform1uiv(location, count, value) wrapGlFunc(glUniform1uiv, location, count, value)
#define glUniform1uivEXT(location, count, value) wrapGlFunc(glUniform1uivEXT, location, count, value)
#define glUniform2d(location, x, y) wrapGlFunc(glUniform2d, location, x, y)
#define glUniform2dv(location, count, value) wrapGlFunc(glUniform2dv, location, count, value)
#define glUniform2f(location, v0, v1) wrapGlFunc(glUniform2f, location, v0, v1)
#define glUniform2fARB(location, v0, v1) wrapGlFunc(glUniform2fARB, location, v0, v1)
#define glUniform2fv(location, count, value) wrapGlFunc(glUniform2fv, location, count, value)
#define glUniform2fvARB(location, count, value) wrapGlFunc(glUniform2fvARB, location, count, value)
#define glUniform2i(location, v0, v1) wrapGlFunc(glUniform2i, location, v0, v1)
#define glUniform2i64ARB(location, x, y) wrapGlFunc(glUniform2i64ARB, location, x, y)
#define glUniform2i64NV(location, x, y) wrapGlFunc(glUniform2i64NV, location, x, y)
#define glUniform2i64vARB(location, count, value) wrapGlFunc(glUniform2i64vARB, location, count, value)
#define glUniform2i64vNV(location, count, value) wrapGlFunc(glUniform2i64vNV, location, count, value)
#define glUniform2iARB(location, v0, v1) wrapGlFunc(glUniform2iARB, location, v0, v1)
#define glUniform2iv(location, count, value) wrapGlFunc(glUniform2iv, location, count, value)
#define glUniform2ivARB(location, count, value) wrapGlFunc(glUniform2ivARB, location, count, value)
#define glUniform2ui(location, v0, v1) wrapGlFunc(glUniform2ui, location, v0, v1)
#define glUniform2ui64ARB(location, x, y) wrapGlFunc(glUniform2ui64ARB, location, x, y)
#define glUniform2ui64NV(location, x, y) wrapGlFunc(glUniform2ui64NV, location, x, y)
#define glUniform2ui64vARB(location, count, value) wrapGlFunc(glUniform2ui64vARB, location, count, value)
#define glUniform2ui64vNV(location, count, value) wrapGlFunc(glUniform2ui64vNV, location, count, value)
#define glUniform2uiEXT(location, v0, v1) wrapGlFunc(glUniform2uiEXT, location, v0, v1)
#define glUniform2uiv(location, count, value) wrapGlFunc(glUniform2uiv, location, count, value)
#define glUniform2uivEXT(location, count, value) wrapGlFunc(glUniform2uivEXT, location, count, value)
#define glUniform3d(location, x, y, z) wrapGlFunc(glUniform3d, location, x, y, z)
#define glUniform3dv(location, count, value) wrapGlFunc(glUniform3dv, location, count, value)
#define glUniform3f(location, v0, v1, v2) wrapGlFunc(glUniform3f, location, v0, v1, v2)
#define glUniform3fARB(location, v0, v1, v2) wrapGlFunc(glUniform3fARB, location, v0, v1, v2)
#define glUniform3fv(location, count, value) wrapGlFunc(glUniform3fv, location, count, value)
#define glUniform3fvARB(location, count, value) wrapGlFunc(glUniform3fvARB, location, count, value)
#define glUniform3i(location, v0, v1, v2) wrapGlFunc(glUniform3i, location, v0, v1, v2)
#define glUniform3i64ARB(location, x, y, z) wrapGlFunc(glUniform3i64ARB, location, x, y, z)
#define glUniform3i64NV(location, x, y, z) wrapGlFunc(glUniform3i64NV, location, x, y, z)
#define glUniform3i64vARB(location, count, value) wrapGlFunc(glUniform3i64vARB, location, count, value)
#define glUniform3i64vNV(location, count, value) wrapGlFunc(glUniform3i64vNV, location, count, value)
#define glUniform3iARB(location, v0, v1, v2) wrapGlFunc(glUniform3iARB, location, v0, v1, v2)
#define glUniform3iv(location, count, value) wrapGlFunc(glUniform3iv, location, count, value)
#define glUniform3ivARB(location, count, value) wrapGlFunc(glUniform3ivARB, location, count, value)
#define glUniform3ui(location, v0, v1, v2) wrapGlFunc(glUniform3ui, location, v0, v1, v2)
#define glUniform3ui64ARB(location, x, y, z) wrapGlFunc(glUniform3ui64ARB, location, x, y, z)
#define glUniform3ui64NV(location, x, y, z) wrapGlFunc(glUniform3ui64NV, location, x, y, z)
#define glUniform3ui64vARB(location, count, value) wrapGlFunc(glUniform3ui64vARB, location, count, value)
#define glUniform3ui64vNV(location, count, value) wrapGlFunc(glUniform3ui64vNV, location, count, value)
#define glUniform3uiEXT(location, v0, v1, v2) wrapGlFunc(glUniform3uiEXT, location, v0, v1, v2)
#define glUniform3uiv(location, count, value) wrapGlFunc(glUniform3uiv, location, count, value)
#define glUniform3uivEXT(location, count, value) wrapGlFunc(glUniform3uivEXT, location, count, value)
#define glUniform4d(location, x, y, z, w) wrapGlFunc(glUniform4d, location, x, y, z, w)
#define glUniform4dv(location, count, value) wrapGlFunc(glUniform4dv, location, count, value)
#define glUniform4f(location, v0, v1, v2, v3) wrapGlFunc(glUniform4f, location, v0, v1, v2, v3)
#define glUniform4fARB(location, v0, v1, v2, v3) wrapGlFunc(glUniform4fARB, location, v0, v1, v2, v3)
#define glUniform4fv(location, count, value) wrapGlFunc(glUniform4fv, location, count, value)
#define glUniform4fvARB(location, count, value) wrapGlFunc(glUniform4fvARB, location, count, value)
#define glUniform4i(location, v0, v1, v2, v3) wrapGlFunc(glUniform4i, location, v0, v1, v2, v3)
#define glUniform4i64ARB(location, x, y, z, w) wrapGlFunc(glUniform4i64ARB, location, x, y, z, w)
#define glUniform4i64NV(location, x, y, z, w) wrapGlFunc(glUniform4i64NV, location, x, y, z, w)
#define glUniform4i64vARB(location, count, value) wrapGlFunc(glUniform4i64vARB, location, count, value)
#define glUniform4i64vNV(location, count, value) wrapGlFunc(glUniform4i64vNV, location, count, value)
#define glUniform4iARB(location, v0, v1, v2, v3) wrapGlFunc(glUniform4iARB, location, v0, v1, v2, v3)
#define glUniform4iv(location, count, value) wrapGlFunc(glUniform4iv, location, count, value)
#define glUniform4ivARB(location, count, value) wrapGlFunc(glUniform4ivARB, location, count, value)
#define glUniform4ui(location, v0, v1, v2, v3) wrapGlFunc(glUniform4ui, location, v0, v1, v2, v3)
#define glUniform4ui64ARB(location, x, y, z, w) wrapGlFunc(glUniform4ui64ARB, location, x, y, z, w)
#define glUniform4ui64NV(location, x, y, z, w) wrapGlFunc(glUniform4ui64NV, location, x, y, z, w)
#define glUniform4ui64vARB(location, count, value) wrapGlFunc(glUniform4ui64vARB, location, count, value)
#define glUniform4ui64vNV(location, count, value) wrapGlFunc(glUniform4ui64vNV, location, count, value)
#define glUniform4uiEXT(location, v0, v1, v2, v3) wrapGlFunc(glUniform4uiEXT, location, v0, v1, v2, v3)
#define glUniform4uiv(location, count, value) wrapGlFunc(glUniform4uiv, location, count, value)
#define glUniform4uivEXT(location, count, value) wrapGlFunc(glUniform4uivEXT, location, count, value)
#define glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding) wrapGlFunc(glUniformBlockBinding, program, uniformBlockIndex, uniformBlockBinding)
#define glUniformBufferEXT(program, location, buffer) wrapGlFunc(glUniformBufferEXT, program, location, buffer)
#define glUniformHandleui64ARB(location, value) wrapGlFunc(glUniformHandleui64ARB, location, value)
#define glUniformHandleui64IMG(location, value) wrapGlFunc(glUniformHandleui64IMG, location, value)
#define glUniformHandleui64NV(location, value) wrapGlFunc(glUniformHandleui64NV, location, value)
#define glUniformHandleui64vARB(location, count, value) wrapGlFunc(glUniformHandleui64vARB, location, count, value)
#define glUniformHandleui64vIMG(location, count, value) wrapGlFunc(glUniformHandleui64vIMG, location, count, value)
#define glUniformHandleui64vNV(location, count, value) wrapGlFunc(glUniformHandleui64vNV, location, count, value)
#define glUniformMatrix2dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2dv, location, count, transpose, value)
#define glUniformMatrix2fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2fv, location, count, transpose, value)
#define glUniformMatrix2fvARB(location, count, transpose, value) wrapGlFunc(glUniformMatrix2fvARB, location, count, transpose, value)
#define glUniformMatrix2x3dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x3dv, location, count, transpose, value)
#define glUniformMatrix2x3fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x3fv, location, count, transpose, value)
#define glUniformMatrix2x3fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x3fvNV, location, count, transpose, value)
#define glUniformMatrix2x4dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x4dv, location, count, transpose, value)
#define glUniformMatrix2x4fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x4fv, location, count, transpose, value)
#define glUniformMatrix2x4fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix2x4fvNV, location, count, transpose, value)
#define glUniformMatrix3dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3dv, location, count, transpose, value)
#define glUniformMatrix3fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3fv, location, count, transpose, value)
#define glUniformMatrix3fvARB(location, count, transpose, value) wrapGlFunc(glUniformMatrix3fvARB, location, count, transpose, value)
#define glUniformMatrix3x2dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x2dv, location, count, transpose, value)
#define glUniformMatrix3x2fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x2fv, location, count, transpose, value)
#define glUniformMatrix3x2fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x2fvNV, location, count, transpose, value)
#define glUniformMatrix3x4dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x4dv, location, count, transpose, value)
#define glUniformMatrix3x4fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x4fv, location, count, transpose, value)
#define glUniformMatrix3x4fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix3x4fvNV, location, count, transpose, value)
#define glUniformMatrix4dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4dv, location, count, transpose, value)
#define glUniformMatrix4fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4fv, location, count, transpose, value)
#define glUniformMatrix4fvARB(location, count, transpose, value) wrapGlFunc(glUniformMatrix4fvARB, location, count, transpose, value)
#define glUniformMatrix4x2dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x2dv, location, count, transpose, value)
#define glUniformMatrix4x2fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x2fv, location, count, transpose, value)
#define glUniformMatrix4x2fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x2fvNV, location, count, transpose, value)
#define glUniformMatrix4x3dv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x3dv, location, count, transpose, value)
#define glUniformMatrix4x3fv(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x3fv, location, count, transpose, value)
#define glUniformMatrix4x3fvNV(location, count, transpose, value) wrapGlFunc(glUniformMatrix4x3fvNV, location, count, transpose, value)
#define glUniformSubroutinesuiv(shadertype, count, indices) wrapGlFunc(glUniformSubroutinesuiv, shadertype, count, indices)
#define glUniformui64NV(location, value) wrapGlFunc(glUniformui64NV, location, value)
#define glUniformui64vNV(location, count, value) wrapGlFunc(glUniformui64vNV, location, count, value)
#define glUnlockArraysEXT() wrapGlFuncNoArgs(glUnlockArraysEXT)
#define glUnmapObjectBufferATI(buffer) wrapGlFunc(glUnmapObjectBufferATI, buffer)
#define glUnmapTexture2DINTEL(texture, level) wrapGlFunc(glUnmapTexture2DINTEL, texture, level)
#define glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve) wrapGlFunc(glUpdateObjectBufferATI, buffer, offset, size, pointer, preserve)
#define glUseProgram(program) wrapGlFunc(glUseProgram, program)
#define glUseProgramObjectARB(programObj) wrapGlFunc(glUseProgramObjectARB, programObj)
#define glUseProgramStages(pipeline, stages, program) wrapGlFunc(glUseProgramStages, pipeline, stages, program)
#define glUseProgramStagesEXT(pipeline, stages, program) wrapGlFunc(glUseProgramStagesEXT, pipeline, stages, program)
#define glUseShaderProgramEXT(type, program) wrapGlFunc(glUseShaderProgramEXT, type, program)
#define glVDPAUFiniNV() wrapGlFuncNoArgs(glVDPAUFiniNV)
#define glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values) wrapGlFunc(glVDPAUGetSurfaceivNV, surface, pname, bufSize, length, values)
#define glVDPAUInitNV(vdpDevice, getProcAddress) wrapGlFunc(glVDPAUInitNV, vdpDevice, getProcAddress)
#define glVDPAUMapSurfacesNV(numSurfaces, surfaces) wrapGlFunc(glVDPAUMapSurfacesNV, numSurfaces, surfaces)
#define glVDPAUSurfaceAccessNV(surface, access) wrapGlFunc(glVDPAUSurfaceAccessNV, surface, access)
#define glVDPAUUnmapSurfacesNV(numSurface, surfaces) wrapGlFunc(glVDPAUUnmapSurfacesNV, numSurface, surfaces)
#define glVDPAUUnregisterSurfaceNV(surface) wrapGlFunc(glVDPAUUnregisterSurfaceNV, surface)
#define glValidateProgram(program) wrapGlFunc(glValidateProgram, program)
#define glValidateProgramARB(programObj) wrapGlFunc(glValidateProgramARB, programObj)
#define glValidateProgramPipeline(pipeline) wrapGlFunc(glValidateProgramPipeline, pipeline)
#define glValidateProgramPipelineEXT(pipeline) wrapGlFunc(glValidateProgramPipelineEXT, pipeline)
#define glVariantArrayObjectATI(id, type, stride, buffer, offset) wrapGlFunc(glVariantArrayObjectATI, id, type, stride, buffer, offset)
#define glVariantPointerEXT(id, type, stride, addr) wrapGlFunc(glVariantPointerEXT, id, type, stride, addr)
#define glVariantbvEXT(id, addr) wrapGlFunc(glVariantbvEXT, id, addr)
#define glVariantdvEXT(id, addr) wrapGlFunc(glVariantdvEXT, id, addr)
#define glVariantfvEXT(id, addr) wrapGlFunc(glVariantfvEXT, id, addr)
#define glVariantivEXT(id, addr) wrapGlFunc(glVariantivEXT, id, addr)
#define glVariantsvEXT(id, addr) wrapGlFunc(glVariantsvEXT, id, addr)
#define glVariantubvEXT(id, addr) wrapGlFunc(glVariantubvEXT, id, addr)
#define glVariantuivEXT(id, addr) wrapGlFunc(glVariantuivEXT, id, addr)
#define glVariantusvEXT(id, addr) wrapGlFunc(glVariantusvEXT, id, addr)
#define glVertex2bOES(x, y) wrapGlFunc(glVertex2bOES, x, y)
#define glVertex2bvOES(coords) wrapGlFunc(glVertex2bvOES, coords)
#define glVertex2d(x, y) wrapGlFunc(glVertex2d, x, y)
#define glVertex2dv(v) wrapGlFunc(glVertex2dv, v)
#define glVertex2f(x, y) wrapGlFunc(glVertex2f, x, y)
#define glVertex2fv(v) wrapGlFunc(glVertex2fv, v)
#define glVertex2hNV(x, y) wrapGlFunc(glVertex2hNV, x, y)
#define glVertex2hvNV(v) wrapGlFunc(glVertex2hvNV, v)
#define glVertex2i(x, y) wrapGlFunc(glVertex2i, x, y)
#define glVertex2iv(v) wrapGlFunc(glVertex2iv, v)
#define glVertex2s(x, y) wrapGlFunc(glVertex2s, x, y)
#define glVertex2sv(v) wrapGlFunc(glVertex2sv, v)
#define glVertex2xOES(x) wrapGlFunc(glVertex2xOES, x)
#define glVertex2xvOES(coords) wrapGlFunc(glVertex2xvOES, coords)
#define glVertex3bOES(x, y, z) wrapGlFunc(glVertex3bOES, x, y, z)
#define glVertex3bvOES(coords) wrapGlFunc(glVertex3bvOES, coords)
#define glVertex3d(x, y, z) wrapGlFunc(glVertex3d, x, y, z)
#define glVertex3dv(v) wrapGlFunc(glVertex3dv, v)
#define glVertex3f(x, y, z) wrapGlFunc(glVertex3f, x, y, z)
#define glVertex3fv(v) wrapGlFunc(glVertex3fv, v)
#define glVertex3hNV(x, y, z) wrapGlFunc(glVertex3hNV, x, y, z)
#define glVertex3hvNV(v) wrapGlFunc(glVertex3hvNV, v)
#define glVertex3i(x, y, z) wrapGlFunc(glVertex3i, x, y, z)
#define glVertex3iv(v) wrapGlFunc(glVertex3iv, v)
#define glVertex3s(x, y, z) wrapGlFunc(glVertex3s, x, y, z)
#define glVertex3sv(v) wrapGlFunc(glVertex3sv, v)
#define glVertex3xOES(x, y) wrapGlFunc(glVertex3xOES, x, y)
#define glVertex3xvOES(coords) wrapGlFunc(glVertex3xvOES, coords)
#define glVertex4bOES(x, y, z, w) wrapGlFunc(glVertex4bOES, x, y, z, w)
#define glVertex4bvOES(coords) wrapGlFunc(glVertex4bvOES, coords)
#define glVertex4d(x, y, z, w) wrapGlFunc(glVertex4d, x, y, z, w)
#define glVertex4dv(v) wrapGlFunc(glVertex4dv, v)
#define glVertex4f(x, y, z, w) wrapGlFunc(glVertex4f, x, y, z, w)
#define glVertex4fv(v) wrapGlFunc(glVertex4fv, v)
#define glVertex4hNV(x, y, z, w) wrapGlFunc(glVertex4hNV, x, y, z, w)
#define glVertex4hvNV(v) wrapGlFunc(glVertex4hvNV, v)
#define glVertex4i(x, y, z, w) wrapGlFunc(glVertex4i, x, y, z, w)
#define glVertex4iv(v) wrapGlFunc(glVertex4iv, v)
#define glVertex4s(x, y, z, w) wrapGlFunc(glVertex4s, x, y, z, w)
#define glVertex4sv(v) wrapGlFunc(glVertex4sv, v)
#define glVertex4xOES(x, y, z) wrapGlFunc(glVertex4xOES, x, y, z)
#define glVertex4xvOES(coords) wrapGlFunc(glVertex4xvOES, coords)
#define glVertexArrayAttribBinding(vaobj, attribindex, bindingindex) wrapGlFunc(glVertexArrayAttribBinding, vaobj, attribindex, bindingindex)
#define glVertexArrayAttribFormat(vaobj, attribindex, size, type, normalized, relativeoffset) wrapGlFunc(glVertexArrayAttribFormat, vaobj, attribindex, size, type, normalized, relativeoffset)
#define glVertexArrayAttribIFormat(vaobj, attribindex, size, type, relativeoffset) wrapGlFunc(glVertexArrayAttribIFormat, vaobj, attribindex, size, type, relativeoffset)
#define glVertexArrayAttribLFormat(vaobj, attribindex, size, type, relativeoffset) wrapGlFunc(glVertexArrayAttribLFormat, vaobj, attribindex, size, type, relativeoffset)
#define glVertexArrayBindVertexBufferEXT(vaobj, bindingindex, buffer, offset, stride) wrapGlFunc(glVertexArrayBindVertexBufferEXT, vaobj, bindingindex, buffer, offset, stride)
#define glVertexArrayBindingDivisor(vaobj, bindingindex, divisor) wrapGlFunc(glVertexArrayBindingDivisor, vaobj, bindingindex, divisor)
#define glVertexArrayColorOffsetEXT(vaobj, buffer, size, type, stride, offset) wrapGlFunc(glVertexArrayColorOffsetEXT, vaobj, buffer, size, type, stride, offset)
#define glVertexArrayEdgeFlagOffsetEXT(vaobj, buffer, stride, offset) wrapGlFunc(glVertexArrayEdgeFlagOffsetEXT, vaobj, buffer, stride, offset)
#define glVertexArrayElementBuffer(vaobj, buffer) wrapGlFunc(glVertexArrayElementBuffer, vaobj, buffer)
#define glVertexArrayFogCoordOffsetEXT(vaobj, buffer, type, stride, offset) wrapGlFunc(glVertexArrayFogCoordOffsetEXT, vaobj, buffer, type, stride, offset)
#define glVertexArrayIndexOffsetEXT(vaobj, buffer, type, stride, offset) wrapGlFunc(glVertexArrayIndexOffsetEXT, vaobj, buffer, type, stride, offset)
#define glVertexArrayMultiTexCoordOffsetEXT(vaobj, buffer, texunit, size, type, stride, offset) wrapGlFunc(glVertexArrayMultiTexCoordOffsetEXT, vaobj, buffer, texunit, size, type, stride, offset)
#define glVertexArrayNormalOffsetEXT(vaobj, buffer, type, stride, offset) wrapGlFunc(glVertexArrayNormalOffsetEXT, vaobj, buffer, type, stride, offset)
#define glVertexArrayParameteriAPPLE(pname, param) wrapGlFunc(glVertexArrayParameteriAPPLE, pname, param)
#define glVertexArrayRangeAPPLE(length, pointer) wrapGlFunc(glVertexArrayRangeAPPLE, length, pointer)
#define glVertexArrayRangeNV(length, pointer) wrapGlFunc(glVertexArrayRangeNV, length, pointer)
#define glVertexArraySecondaryColorOffsetEXT(vaobj, buffer, size, type, stride, offset) wrapGlFunc(glVertexArraySecondaryColorOffsetEXT, vaobj, buffer, size, type, stride, offset)
#define glVertexArrayTexCoordOffsetEXT(vaobj, buffer, size, type, stride, offset) wrapGlFunc(glVertexArrayTexCoordOffsetEXT, vaobj, buffer, size, type, stride, offset)
#define glVertexArrayVertexAttribBindingEXT(vaobj, attribindex, bindingindex) wrapGlFunc(glVertexArrayVertexAttribBindingEXT, vaobj, attribindex, bindingindex)
#define glVertexArrayVertexAttribDivisorEXT(vaobj, index, divisor) wrapGlFunc(glVertexArrayVertexAttribDivisorEXT, vaobj, index, divisor)
#define glVertexArrayVertexAttribFormatEXT(vaobj, attribindex, size, type, normalized, relativeoffset) wrapGlFunc(glVertexArrayVertexAttribFormatEXT, vaobj, attribindex, size, type, normalized, relativeoffset)
#define glVertexArrayVertexAttribIFormatEXT(vaobj, attribindex, size, type, relativeoffset) wrapGlFunc(glVertexArrayVertexAttribIFormatEXT, vaobj, attribindex, size, type, relativeoffset)
#define glVertexArrayVertexAttribIOffsetEXT(vaobj, buffer, index, size, type, stride, offset) wrapGlFunc(glVertexArrayVertexAttribIOffsetEXT, vaobj, buffer, index, size, type, stride, offset)
#define glVertexArrayVertexAttribLFormatEXT(vaobj, attribindex, size, type, relativeoffset) wrapGlFunc(glVertexArrayVertexAttribLFormatEXT, vaobj, attribindex, size, type, relativeoffset)
#define glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset) wrapGlFunc(glVertexArrayVertexAttribLOffsetEXT, vaobj, buffer, index, size, type, stride, offset)
#define glVertexArrayVertexAttribOffsetEXT(vaobj, buffer, index, size, type, normalized, stride, offset) wrapGlFunc(glVertexArrayVertexAttribOffsetEXT, vaobj, buffer, index, size, type, normalized, stride, offset)
#define glVertexArrayVertexBindingDivisorEXT(vaobj, bindingindex, divisor) wrapGlFunc(glVertexArrayVertexBindingDivisorEXT, vaobj, bindingindex, divisor)
#define glVertexArrayVertexBuffer(vaobj, bindingindex, buffer, offset, stride) wrapGlFunc(glVertexArrayVertexBuffer, vaobj, bindingindex, buffer, offset, stride)
#define glVertexArrayVertexBuffers(vaobj, first, count, buffers, offsets, strides) wrapGlFunc(glVertexArrayVertexBuffers, vaobj, first, count, buffers, offsets, strides)
#define glVertexArrayVertexOffsetEXT(vaobj, buffer, size, type, stride, offset) wrapGlFunc(glVertexArrayVertexOffsetEXT, vaobj, buffer, size, type, stride, offset)
#define glVertexAttrib1d(index, x) wrapGlFunc(glVertexAttrib1d, index, x)
#define glVertexAttrib1dARB(index, x) wrapGlFunc(glVertexAttrib1dARB, index, x)
#define glVertexAttrib1dNV(index, x) wrapGlFunc(glVertexAttrib1dNV, index, x)
#define glVertexAttrib1dv(index, v) wrapGlFunc(glVertexAttrib1dv, index, v)
#define glVertexAttrib1dvARB(index, v) wrapGlFunc(glVertexAttrib1dvARB, index, v)
#define glVertexAttrib1dvNV(index, v) wrapGlFunc(glVertexAttrib1dvNV, index, v)
#define glVertexAttrib1f(index, x) wrapGlFunc(glVertexAttrib1f, index, x)
#define glVertexAttrib1fARB(index, x) wrapGlFunc(glVertexAttrib1fARB, index, x)
#define glVertexAttrib1fNV(index, x) wrapGlFunc(glVertexAttrib1fNV, index, x)
#define glVertexAttrib1fv(index, v) wrapGlFunc(glVertexAttrib1fv, index, v)
#define glVertexAttrib1fvARB(index, v) wrapGlFunc(glVertexAttrib1fvARB, index, v)
#define glVertexAttrib1fvNV(index, v) wrapGlFunc(glVertexAttrib1fvNV, index, v)
#define glVertexAttrib1hNV(index, x) wrapGlFunc(glVertexAttrib1hNV, index, x)
#define glVertexAttrib1hvNV(index, v) wrapGlFunc(glVertexAttrib1hvNV, index, v)
#define glVertexAttrib1s(index, x) wrapGlFunc(glVertexAttrib1s, index, x)
#define glVertexAttrib1sARB(index, x) wrapGlFunc(glVertexAttrib1sARB, index, x)
#define glVertexAttrib1sNV(index, x) wrapGlFunc(glVertexAttrib1sNV, index, x)
#define glVertexAttrib1sv(index, v) wrapGlFunc(glVertexAttrib1sv, index, v)
#define glVertexAttrib1svARB(index, v) wrapGlFunc(glVertexAttrib1svARB, index, v)
#define glVertexAttrib1svNV(index, v) wrapGlFunc(glVertexAttrib1svNV, index, v)
#define glVertexAttrib2d(index, x, y) wrapGlFunc(glVertexAttrib2d, index, x, y)
#define glVertexAttrib2dARB(index, x, y) wrapGlFunc(glVertexAttrib2dARB, index, x, y)
#define glVertexAttrib2dNV(index, x, y) wrapGlFunc(glVertexAttrib2dNV, index, x, y)
#define glVertexAttrib2dv(index, v) wrapGlFunc(glVertexAttrib2dv, index, v)
#define glVertexAttrib2dvARB(index, v) wrapGlFunc(glVertexAttrib2dvARB, index, v)
#define glVertexAttrib2dvNV(index, v) wrapGlFunc(glVertexAttrib2dvNV, index, v)
#define glVertexAttrib2f(index, x, y) wrapGlFunc(glVertexAttrib2f, index, x, y)
#define glVertexAttrib2fARB(index, x, y) wrapGlFunc(glVertexAttrib2fARB, index, x, y)
#define glVertexAttrib2fNV(index, x, y) wrapGlFunc(glVertexAttrib2fNV, index, x, y)
#define glVertexAttrib2fv(index, v) wrapGlFunc(glVertexAttrib2fv, index, v)
#define glVertexAttrib2fvARB(index, v) wrapGlFunc(glVertexAttrib2fvARB, index, v)
#define glVertexAttrib2fvNV(index, v) wrapGlFunc(glVertexAttrib2fvNV, index, v)
#define glVertexAttrib2hNV(index, x, y) wrapGlFunc(glVertexAttrib2hNV, index, x, y)
#define glVertexAttrib2hvNV(index, v) wrapGlFunc(glVertexAttrib2hvNV, index, v)
#define glVertexAttrib2s(index, x, y) wrapGlFunc(glVertexAttrib2s, index, x, y)
#define glVertexAttrib2sARB(index, x, y) wrapGlFunc(glVertexAttrib2sARB, index, x, y)
#define glVertexAttrib2sNV(index, x, y) wrapGlFunc(glVertexAttrib2sNV, index, x, y)
#define glVertexAttrib2sv(index, v) wrapGlFunc(glVertexAttrib2sv, index, v)
#define glVertexAttrib2svARB(index, v) wrapGlFunc(glVertexAttrib2svARB, index, v)
#define glVertexAttrib2svNV(index, v) wrapGlFunc(glVertexAttrib2svNV, index, v)
#define glVertexAttrib3d(index, x, y, z) wrapGlFunc(glVertexAttrib3d, index, x, y, z)
#define glVertexAttrib3dARB(index, x, y, z) wrapGlFunc(glVertexAttrib3dARB, index, x, y, z)
#define glVertexAttrib3dNV(index, x, y, z) wrapGlFunc(glVertexAttrib3dNV, index, x, y, z)
#define glVertexAttrib3dv(index, v) wrapGlFunc(glVertexAttrib3dv, index, v)
#define glVertexAttrib3dvARB(index, v) wrapGlFunc(glVertexAttrib3dvARB, index, v)
#define glVertexAttrib3dvNV(index, v) wrapGlFunc(glVertexAttrib3dvNV, index, v)
#define glVertexAttrib3f(index, x, y, z) wrapGlFunc(glVertexAttrib3f, index, x, y, z)
#define glVertexAttrib3fARB(index, x, y, z) wrapGlFunc(glVertexAttrib3fARB, index, x, y, z)
#define glVertexAttrib3fNV(index, x, y, z) wrapGlFunc(glVertexAttrib3fNV, index, x, y, z)
#define glVertexAttrib3fv(index, v) wrapGlFunc(glVertexAttrib3fv, index, v)
#define glVertexAttrib3fvARB(index, v) wrapGlFunc(glVertexAttrib3fvARB, index, v)
#define glVertexAttrib3fvNV(index, v) wrapGlFunc(glVertexAttrib3fvNV, index, v)
#define glVertexAttrib3hNV(index, x, y, z) wrapGlFunc(glVertexAttrib3hNV, index, x, y, z)
#define glVertexAttrib3hvNV(index, v) wrapGlFunc(glVertexAttrib3hvNV, index, v)
#define glVertexAttrib3s(index, x, y, z) wrapGlFunc(glVertexAttrib3s, index, x, y, z)
#define glVertexAttrib3sARB(index, x, y, z) wrapGlFunc(glVertexAttrib3sARB, index, x, y, z)
#define glVertexAttrib3sNV(index, x, y, z) wrapGlFunc(glVertexAttrib3sNV, index, x, y, z)
#define glVertexAttrib3sv(index, v) wrapGlFunc(glVertexAttrib3sv, index, v)
#define glVertexAttrib3svARB(index, v) wrapGlFunc(glVertexAttrib3svARB, index, v)
#define glVertexAttrib3svNV(index, v) wrapGlFunc(glVertexAttrib3svNV, index, v)
#define glVertexAttrib4Nbv(index, v) wrapGlFunc(glVertexAttrib4Nbv, index, v)
#define glVertexAttrib4NbvARB(index, v) wrapGlFunc(glVertexAttrib4NbvARB, index, v)
#define glVertexAttrib4Niv(index, v) wrapGlFunc(glVertexAttrib4Niv, index, v)
#define glVertexAttrib4NivARB(index, v) wrapGlFunc(glVertexAttrib4NivARB, index, v)
#define glVertexAttrib4Nsv(index, v) wrapGlFunc(glVertexAttrib4Nsv, index, v)
#define glVertexAttrib4NsvARB(index, v) wrapGlFunc(glVertexAttrib4NsvARB, index, v)
#define glVertexAttrib4Nub(index, x, y, z, w) wrapGlFunc(glVertexAttrib4Nub, index, x, y, z, w)
#define glVertexAttrib4NubARB(index, x, y, z, w) wrapGlFunc(glVertexAttrib4NubARB, index, x, y, z, w)
#define glVertexAttrib4Nubv(index, v) wrapGlFunc(glVertexAttrib4Nubv, index, v)
#define glVertexAttrib4NubvARB(index, v) wrapGlFunc(glVertexAttrib4NubvARB, index, v)
#define glVertexAttrib4Nuiv(index, v) wrapGlFunc(glVertexAttrib4Nuiv, index, v)
#define glVertexAttrib4NuivARB(index, v) wrapGlFunc(glVertexAttrib4NuivARB, index, v)
#define glVertexAttrib4Nusv(index, v) wrapGlFunc(glVertexAttrib4Nusv, index, v)
#define glVertexAttrib4NusvARB(index, v) wrapGlFunc(glVertexAttrib4NusvARB, index, v)
#define glVertexAttrib4bv(index, v) wrapGlFunc(glVertexAttrib4bv, index, v)
#define glVertexAttrib4bvARB(index, v) wrapGlFunc(glVertexAttrib4bvARB, index, v)
#define glVertexAttrib4d(index, x, y, z, w) wrapGlFunc(glVertexAttrib4d, index, x, y, z, w)
#define glVertexAttrib4dARB(index, x, y, z, w) wrapGlFunc(glVertexAttrib4dARB, index, x, y, z, w)
#define glVertexAttrib4dNV(index, x, y, z, w) wrapGlFunc(glVertexAttrib4dNV, index, x, y, z, w)
#define glVertexAttrib4dv(index, v) wrapGlFunc(glVertexAttrib4dv, index, v)
#define glVertexAttrib4dvARB(index, v) wrapGlFunc(glVertexAttrib4dvARB, index, v)
#define glVertexAttrib4dvNV(index, v) wrapGlFunc(glVertexAttrib4dvNV, index, v)
#define glVertexAttrib4f(index, x, y, z, w) wrapGlFunc(glVertexAttrib4f, index, x, y, z, w)
#define glVertexAttrib4fARB(index, x, y, z, w) wrapGlFunc(glVertexAttrib4fARB, index, x, y, z, w)
#define glVertexAttrib4fNV(index, x, y, z, w) wrapGlFunc(glVertexAttrib4fNV, index, x, y, z, w)
#define glVertexAttrib4fv(index, v) wrapGlFunc(glVertexAttrib4fv, index, v)
#define glVertexAttrib4fvARB(index, v) wrapGlFunc(glVertexAttrib4fvARB, index, v)
#define glVertexAttrib4fvNV(index, v) wrapGlFunc(glVertexAttrib4fvNV, index, v)
#define glVertexAttrib4hNV(index, x, y, z, w) wrapGlFunc(glVertexAttrib4hNV, index, x, y, z, w)
#define glVertexAttrib4hvNV(index, v) wrapGlFunc(glVertexAttrib4hvNV, index, v)
#define glVertexAttrib4iv(index, v) wrapGlFunc(glVertexAttrib4iv, index, v)
#define glVertexAttrib4ivARB(index, v) wrapGlFunc(glVertexAttrib4ivARB, index, v)
#define glVertexAttrib4s(index, x, y, z, w) wrapGlFunc(glVertexAttrib4s, index, x, y, z, w)
#define glVertexAttrib4sARB(index, x, y, z, w) wrapGlFunc(glVertexAttrib4sARB, index, x, y, z, w)
#define glVertexAttrib4sNV(index, x, y, z, w) wrapGlFunc(glVertexAttrib4sNV, index, x, y, z, w)
#define glVertexAttrib4sv(index, v) wrapGlFunc(glVertexAttrib4sv, index, v)
#define glVertexAttrib4svARB(index, v) wrapGlFunc(glVertexAttrib4svARB, index, v)
#define glVertexAttrib4svNV(index, v) wrapGlFunc(glVertexAttrib4svNV, index, v)
#define glVertexAttrib4ubNV(index, x, y, z, w) wrapGlFunc(glVertexAttrib4ubNV, index, x, y, z, w)
#define glVertexAttrib4ubv(index, v) wrapGlFunc(glVertexAttrib4ubv, index, v)
#define glVertexAttrib4ubvARB(index, v) wrapGlFunc(glVertexAttrib4ubvARB, index, v)
#define glVertexAttrib4ubvNV(index, v) wrapGlFunc(glVertexAttrib4ubvNV, index, v)
#define glVertexAttrib4uiv(index, v) wrapGlFunc(glVertexAttrib4uiv, index, v)
#define glVertexAttrib4uivARB(index, v) wrapGlFunc(glVertexAttrib4uivARB, index, v)
#define glVertexAttrib4usv(index, v) wrapGlFunc(glVertexAttrib4usv, index, v)
#define glVertexAttrib4usvARB(index, v) wrapGlFunc(glVertexAttrib4usvARB, index, v)
#define glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset) wrapGlFunc(glVertexAttribArrayObjectATI, index, size, type, normalized, stride, buffer, offset)
#define glVertexAttribBinding(attribindex, bindingindex) wrapGlFunc(glVertexAttribBinding, attribindex, bindingindex)
#define glVertexAttribDivisor(index, divisor) wrapGlFunc(glVertexAttribDivisor, index, divisor)
#define glVertexAttribDivisorANGLE(index, divisor) wrapGlFunc(glVertexAttribDivisorANGLE, index, divisor)
#define glVertexAttribDivisorARB(index, divisor) wrapGlFunc(glVertexAttribDivisorARB, index, divisor)
#define glVertexAttribDivisorEXT(index, divisor) wrapGlFunc(glVertexAttribDivisorEXT, index, divisor)
#define glVertexAttribDivisorNV(index, divisor) wrapGlFunc(glVertexAttribDivisorNV, index, divisor)
#define glVertexAttribFormat(attribindex, size, type, normalized, relativeoffset) wrapGlFunc(glVertexAttribFormat, attribindex, size, type, normalized, relativeoffset)
#define glVertexAttribFormatNV(index, size, type, normalized, stride) wrapGlFunc(glVertexAttribFormatNV, index, size, type, normalized, stride)
#define glVertexAttribI1i(index, x) wrapGlFunc(glVertexAttribI1i, index, x)
#define glVertexAttribI1iEXT(index, x) wrapGlFunc(glVertexAttribI1iEXT, index, x)
#define glVertexAttribI1iv(index, v) wrapGlFunc(glVertexAttribI1iv, index, v)
#define glVertexAttribI1ivEXT(index, v) wrapGlFunc(glVertexAttribI1ivEXT, index, v)
#define glVertexAttribI1ui(index, x) wrapGlFunc(glVertexAttribI1ui, index, x)
#define glVertexAttribI1uiEXT(index, x) wrapGlFunc(glVertexAttribI1uiEXT, index, x)
#define glVertexAttribI1uiv(index, v) wrapGlFunc(glVertexAttribI1uiv, index, v)
#define glVertexAttribI1uivEXT(index, v) wrapGlFunc(glVertexAttribI1uivEXT, index, v)
#define glVertexAttribI2i(index, x, y) wrapGlFunc(glVertexAttribI2i, index, x, y)
#define glVertexAttribI2iEXT(index, x, y) wrapGlFunc(glVertexAttribI2iEXT, index, x, y)
#define glVertexAttribI2iv(index, v) wrapGlFunc(glVertexAttribI2iv, index, v)
#define glVertexAttribI2ivEXT(index, v) wrapGlFunc(glVertexAttribI2ivEXT, index, v)
#define glVertexAttribI2ui(index, x, y) wrapGlFunc(glVertexAttribI2ui, index, x, y)
#define glVertexAttribI2uiEXT(index, x, y) wrapGlFunc(glVertexAttribI2uiEXT, index, x, y)
#define glVertexAttribI2uiv(index, v) wrapGlFunc(glVertexAttribI2uiv, index, v)
#define glVertexAttribI2uivEXT(index, v) wrapGlFunc(glVertexAttribI2uivEXT, index, v)
#define glVertexAttribI3i(index, x, y, z) wrapGlFunc(glVertexAttribI3i, index, x, y, z)
#define glVertexAttribI3iEXT(index, x, y, z) wrapGlFunc(glVertexAttribI3iEXT, index, x, y, z)
#define glVertexAttribI3iv(index, v) wrapGlFunc(glVertexAttribI3iv, index, v)
#define glVertexAttribI3ivEXT(index, v) wrapGlFunc(glVertexAttribI3ivEXT, index, v)
#define glVertexAttribI3ui(index, x, y, z) wrapGlFunc(glVertexAttribI3ui, index, x, y, z)
#define glVertexAttribI3uiEXT(index, x, y, z) wrapGlFunc(glVertexAttribI3uiEXT, index, x, y, z)
#define glVertexAttribI3uiv(index, v) wrapGlFunc(glVertexAttribI3uiv, index, v)
#define glVertexAttribI3uivEXT(index, v) wrapGlFunc(glVertexAttribI3uivEXT, index, v)
#define glVertexAttribI4bv(index, v) wrapGlFunc(glVertexAttribI4bv, index, v)
#define glVertexAttribI4bvEXT(index, v) wrapGlFunc(glVertexAttribI4bvEXT, index, v)
#define glVertexAttribI4i(index, x, y, z, w) wrapGlFunc(glVertexAttribI4i, index, x, y, z, w)
#define glVertexAttribI4iEXT(index, x, y, z, w) wrapGlFunc(glVertexAttribI4iEXT, index, x, y, z, w)
#define glVertexAttribI4iv(index, v) wrapGlFunc(glVertexAttribI4iv, index, v)
#define glVertexAttribI4ivEXT(index, v) wrapGlFunc(glVertexAttribI4ivEXT, index, v)
#define glVertexAttribI4sv(index, v) wrapGlFunc(glVertexAttribI4sv, index, v)
#define glVertexAttribI4svEXT(index, v) wrapGlFunc(glVertexAttribI4svEXT, index, v)
#define glVertexAttribI4ubv(index, v) wrapGlFunc(glVertexAttribI4ubv, index, v)
#define glVertexAttribI4ubvEXT(index, v) wrapGlFunc(glVertexAttribI4ubvEXT, index, v)
#define glVertexAttribI4ui(index, x, y, z, w) wrapGlFunc(glVertexAttribI4ui, index, x, y, z, w)
#define glVertexAttribI4uiEXT(index, x, y, z, w) wrapGlFunc(glVertexAttribI4uiEXT, index, x, y, z, w)
#define glVertexAttribI4uiv(index, v) wrapGlFunc(glVertexAttribI4uiv, index, v)
#define glVertexAttribI4uivEXT(index, v) wrapGlFunc(glVertexAttribI4uivEXT, index, v)
#define glVertexAttribI4usv(index, v) wrapGlFunc(glVertexAttribI4usv, index, v)
#define glVertexAttribI4usvEXT(index, v) wrapGlFunc(glVertexAttribI4usvEXT, index, v)
#define glVertexAttribIFormat(attribindex, size, type, relativeoffset) wrapGlFunc(glVertexAttribIFormat, attribindex, size, type, relativeoffset)
#define glVertexAttribIFormatNV(index, size, type, stride) wrapGlFunc(glVertexAttribIFormatNV, index, size, type, stride)
#define glVertexAttribIPointer(index, size, type, stride, pointer) wrapGlFunc(glVertexAttribIPointer, index, size, type, stride, pointer)
#define glVertexAttribIPointerEXT(index, size, type, stride, pointer) wrapGlFunc(glVertexAttribIPointerEXT, index, size, type, stride, pointer)
#define glVertexAttribL1d(index, x) wrapGlFunc(glVertexAttribL1d, index, x)
#define glVertexAttribL1dEXT(index, x) wrapGlFunc(glVertexAttribL1dEXT, index, x)
#define glVertexAttribL1dv(index, v) wrapGlFunc(glVertexAttribL1dv, index, v)
#define glVertexAttribL1dvEXT(index, v) wrapGlFunc(glVertexAttribL1dvEXT, index, v)
#define glVertexAttribL1i64NV(index, x) wrapGlFunc(glVertexAttribL1i64NV, index, x)
#define glVertexAttribL1i64vNV(index, v) wrapGlFunc(glVertexAttribL1i64vNV, index, v)
#define glVertexAttribL1ui64ARB(index, x) wrapGlFunc(glVertexAttribL1ui64ARB, index, x)
#define glVertexAttribL1ui64NV(index, x) wrapGlFunc(glVertexAttribL1ui64NV, index, x)
#define glVertexAttribL1ui64vARB(index, v) wrapGlFunc(glVertexAttribL1ui64vARB, index, v)
#define glVertexAttribL1ui64vNV(index, v) wrapGlFunc(glVertexAttribL1ui64vNV, index, v)
#define glVertexAttribL2d(index, x, y) wrapGlFunc(glVertexAttribL2d, index, x, y)
#define glVertexAttribL2dEXT(index, x, y) wrapGlFunc(glVertexAttribL2dEXT, index, x, y)
#define glVertexAttribL2dv(index, v) wrapGlFunc(glVertexAttribL2dv, index, v)
#define glVertexAttribL2dvEXT(index, v) wrapGlFunc(glVertexAttribL2dvEXT, index, v)
#define glVertexAttribL2i64NV(index, x, y) wrapGlFunc(glVertexAttribL2i64NV, index, x, y)
#define glVertexAttribL2i64vNV(index, v) wrapGlFunc(glVertexAttribL2i64vNV, index, v)
#define glVertexAttribL2ui64NV(index, x, y) wrapGlFunc(glVertexAttribL2ui64NV, index, x, y)
#define glVertexAttribL2ui64vNV(index, v) wrapGlFunc(glVertexAttribL2ui64vNV, index, v)
#define glVertexAttribL3d(index, x, y, z) wrapGlFunc(glVertexAttribL3d, index, x, y, z)
#define glVertexAttribL3dEXT(index, x, y, z) wrapGlFunc(glVertexAttribL3dEXT, index, x, y, z)
#define glVertexAttribL3dv(index, v) wrapGlFunc(glVertexAttribL3dv, index, v)
#define glVertexAttribL3dvEXT(index, v) wrapGlFunc(glVertexAttribL3dvEXT, index, v)
#define glVertexAttribL3i64NV(index, x, y, z) wrapGlFunc(glVertexAttribL3i64NV, index, x, y, z)
#define glVertexAttribL3i64vNV(index, v) wrapGlFunc(glVertexAttribL3i64vNV, index, v)
#define glVertexAttribL3ui64NV(index, x, y, z) wrapGlFunc(glVertexAttribL3ui64NV, index, x, y, z)
#define glVertexAttribL3ui64vNV(index, v) wrapGlFunc(glVertexAttribL3ui64vNV, index, v)
#define glVertexAttribL4d(index, x, y, z, w) wrapGlFunc(glVertexAttribL4d, index, x, y, z, w)
#define glVertexAttribL4dEXT(index, x, y, z, w) wrapGlFunc(glVertexAttribL4dEXT, index, x, y, z, w)
#define glVertexAttribL4dv(index, v) wrapGlFunc(glVertexAttribL4dv, index, v)
#define glVertexAttribL4dvEXT(index, v) wrapGlFunc(glVertexAttribL4dvEXT, index, v)
#define glVertexAttribL4i64NV(index, x, y, z, w) wrapGlFunc(glVertexAttribL4i64NV, index, x, y, z, w)
#define glVertexAttribL4i64vNV(index, v) wrapGlFunc(glVertexAttribL4i64vNV, index, v)
#define glVertexAttribL4ui64NV(index, x, y, z, w) wrapGlFunc(glVertexAttribL4ui64NV, index, x, y, z, w)
#define glVertexAttribL4ui64vNV(index, v) wrapGlFunc(glVertexAttribL4ui64vNV, index, v)
#define glVertexAttribLFormat(attribindex, size, type, relativeoffset) wrapGlFunc(glVertexAttribLFormat, attribindex, size, type, relativeoffset)
#define glVertexAttribLFormatNV(index, size, type, stride) wrapGlFunc(glVertexAttribLFormatNV, index, size, type, stride)
#define glVertexAttribLPointer(index, size, type, stride, pointer) wrapGlFunc(glVertexAttribLPointer, index, size, type, stride, pointer)
#define glVertexAttribLPointerEXT(index, size, type, stride, pointer) wrapGlFunc(glVertexAttribLPointerEXT, index, size, type, stride, pointer)
#define glVertexAttribP1ui(index, type, normalized, value) wrapGlFunc(glVertexAttribP1ui, index, type, normalized, value)
#define glVertexAttribP1uiv(index, type, normalized, value) wrapGlFunc(glVertexAttribP1uiv, index, type, normalized, value)
#define glVertexAttribP2ui(index, type, normalized, value) wrapGlFunc(glVertexAttribP2ui, index, type, normalized, value)
#define glVertexAttribP2uiv(index, type, normalized, value) wrapGlFunc(glVertexAttribP2uiv, index, type, normalized, value)
#define glVertexAttribP3ui(index, type, normalized, value) wrapGlFunc(glVertexAttribP3ui, index, type, normalized, value)
#define glVertexAttribP3uiv(index, type, normalized, value) wrapGlFunc(glVertexAttribP3uiv, index, type, normalized, value)
#define glVertexAttribP4ui(index, type, normalized, value) wrapGlFunc(glVertexAttribP4ui, index, type, normalized, value)
#define glVertexAttribP4uiv(index, type, normalized, value) wrapGlFunc(glVertexAttribP4uiv, index, type, normalized, value)
#define glVertexAttribParameteriAMD(index, pname, param) wrapGlFunc(glVertexAttribParameteriAMD, index, pname, param)
#define glVertexAttribPointer(index, size, type, normalized, stride, pointer) wrapGlFunc(glVertexAttribPointer, index, size, type, normalized, stride, pointer)
#define glVertexAttribPointerARB(index, size, type, normalized, stride, pointer) wrapGlFunc(glVertexAttribPointerARB, index, size, type, normalized, stride, pointer)
#define glVertexAttribPointerNV(index, fsize, type, stride, pointer) wrapGlFunc(glVertexAttribPointerNV, index, fsize, type, stride, pointer)
#define glVertexAttribs1dvNV(index, count, v) wrapGlFunc(glVertexAttribs1dvNV, index, count, v)
#define glVertexAttribs1fvNV(index, count, v) wrapGlFunc(glVertexAttribs1fvNV, index, count, v)
#define glVertexAttribs1hvNV(index, n, v) wrapGlFunc(glVertexAttribs1hvNV, index, n, v)
#define glVertexAttribs1svNV(index, count, v) wrapGlFunc(glVertexAttribs1svNV, index, count, v)
#define glVertexAttribs2dvNV(index, count, v) wrapGlFunc(glVertexAttribs2dvNV, index, count, v)
#define glVertexAttribs2fvNV(index, count, v) wrapGlFunc(glVertexAttribs2fvNV, index, count, v)
#define glVertexAttribs2hvNV(index, n, v) wrapGlFunc(glVertexAttribs2hvNV, index, n, v)
#define glVertexAttribs2svNV(index, count, v) wrapGlFunc(glVertexAttribs2svNV, index, count, v)
#define glVertexAttribs3dvNV(index, count, v) wrapGlFunc(glVertexAttribs3dvNV, index, count, v)
#define glVertexAttribs3fvNV(index, count, v) wrapGlFunc(glVertexAttribs3fvNV, index, count, v)
#define glVertexAttribs3hvNV(index, n, v) wrapGlFunc(glVertexAttribs3hvNV, index, n, v)
#define glVertexAttribs3svNV(index, count, v) wrapGlFunc(glVertexAttribs3svNV, index, count, v)
#define glVertexAttribs4dvNV(index, count, v) wrapGlFunc(glVertexAttribs4dvNV, index, count, v)
#define glVertexAttribs4fvNV(index, count, v) wrapGlFunc(glVertexAttribs4fvNV, index, count, v)
#define glVertexAttribs4hvNV(index, n, v) wrapGlFunc(glVertexAttribs4hvNV, index, n, v)
#define glVertexAttribs4svNV(index, count, v) wrapGlFunc(glVertexAttribs4svNV, index, count, v)
#define glVertexAttribs4ubvNV(index, count, v) wrapGlFunc(glVertexAttribs4ubvNV, index, count, v)
#define glVertexBindingDivisor(bindingindex, divisor) wrapGlFunc(glVertexBindingDivisor, bindingindex, divisor)
#define glVertexBlendARB(count) wrapGlFunc(glVertexBlendARB, count)
#define glVertexBlendEnvfATI(pname, param) wrapGlFunc(glVertexBlendEnvfATI, pname, param)
#define glVertexBlendEnviATI(pname, param) wrapGlFunc(glVertexBlendEnviATI, pname, param)
#define glVertexFormatNV(size, type, stride) wrapGlFunc(glVertexFormatNV, size, type, stride)
#define glVertexP2ui(type, value) wrapGlFunc(glVertexP2ui, type, value)
#define glVertexP2uiv(type, value) wrapGlFunc(glVertexP2uiv, type, value)
#define glVertexP3ui(type, value) wrapGlFunc(glVertexP3ui, type, value)
#define glVertexP3uiv(type, value) wrapGlFunc(glVertexP3uiv, type, value)
#define glVertexP4ui(type, value) wrapGlFunc(glVertexP4ui, type, value)
#define glVertexP4uiv(type, value) wrapGlFunc(glVertexP4uiv, type, value)
#define glVertexPointer(size, type, stride, pointer) wrapGlFunc(glVertexPointer, size, type, stride, pointer)
#define glVertexPointerEXT(size, type, stride, count, pointer) wrapGlFunc(glVertexPointerEXT, size, type, stride, count, pointer)
#define glVertexPointerListIBM(size, type, stride, pointer, ptrstride) wrapGlFunc(glVertexPointerListIBM, size, type, stride, pointer, ptrstride)
#define glVertexPointervINTEL(size, type, pointer) wrapGlFunc(glVertexPointervINTEL, size, type, pointer)
#define glVertexStream1dATI(stream, x) wrapGlFunc(glVertexStream1dATI, stream, x)
#define glVertexStream1dvATI(stream, coords) wrapGlFunc(glVertexStream1dvATI, stream, coords)
#define glVertexStream1fATI(stream, x) wrapGlFunc(glVertexStream1fATI, stream, x)
#define glVertexStream1fvATI(stream, coords) wrapGlFunc(glVertexStream1fvATI, stream, coords)
#define glVertexStream1iATI(stream, x) wrapGlFunc(glVertexStream1iATI, stream, x)
#define glVertexStream1ivATI(stream, coords) wrapGlFunc(glVertexStream1ivATI, stream, coords)
#define glVertexStream1sATI(stream, x) wrapGlFunc(glVertexStream1sATI, stream, x)
#define glVertexStream1svATI(stream, coords) wrapGlFunc(glVertexStream1svATI, stream, coords)
#define glVertexStream2dATI(stream, x, y) wrapGlFunc(glVertexStream2dATI, stream, x, y)
#define glVertexStream2dvATI(stream, coords) wrapGlFunc(glVertexStream2dvATI, stream, coords)
#define glVertexStream2fATI(stream, x, y) wrapGlFunc(glVertexStream2fATI, stream, x, y)
#define glVertexStream2fvATI(stream, coords) wrapGlFunc(glVertexStream2fvATI, stream, coords)
#define glVertexStream2iATI(stream, x, y) wrapGlFunc(glVertexStream2iATI, stream, x, y)
#define glVertexStream2ivATI(stream, coords) wrapGlFunc(glVertexStream2ivATI, stream, coords)
#define glVertexStream2sATI(stream, x, y) wrapGlFunc(glVertexStream2sATI, stream, x, y)
#define glVertexStream2svATI(stream, coords) wrapGlFunc(glVertexStream2svATI, stream, coords)
#define glVertexStream3dATI(stream, x, y, z) wrapGlFunc(glVertexStream3dATI, stream, x, y, z)
#define glVertexStream3dvATI(stream, coords) wrapGlFunc(glVertexStream3dvATI, stream, coords)
#define glVertexStream3fATI(stream, x, y, z) wrapGlFunc(glVertexStream3fATI, stream, x, y, z)
#define glVertexStream3fvATI(stream, coords) wrapGlFunc(glVertexStream3fvATI, stream, coords)
#define glVertexStream3iATI(stream, x, y, z) wrapGlFunc(glVertexStream3iATI, stream, x, y, z)
#define glVertexStream3ivATI(stream, coords) wrapGlFunc(glVertexStream3ivATI, stream, coords)
#define glVertexStream3sATI(stream, x, y, z) wrapGlFunc(glVertexStream3sATI, stream, x, y, z)
#define glVertexStream3svATI(stream, coords) wrapGlFunc(glVertexStream3svATI, stream, coords)
#define glVertexStream4dATI(stream, x, y, z, w) wrapGlFunc(glVertexStream4dATI, stream, x, y, z, w)
#define glVertexStream4dvATI(stream, coords) wrapGlFunc(glVertexStream4dvATI, stream, coords)
#define glVertexStream4fATI(stream, x, y, z, w) wrapGlFunc(glVertexStream4fATI, stream, x, y, z, w)
#define glVertexStream4fvATI(stream, coords) wrapGlFunc(glVertexStream4fvATI, stream, coords)
#define glVertexStream4iATI(stream, x, y, z, w) wrapGlFunc(glVertexStream4iATI, stream, x, y, z, w)
#define glVertexStream4ivATI(stream, coords) wrapGlFunc(glVertexStream4ivATI, stream, coords)
#define glVertexStream4sATI(stream, x, y, z, w) wrapGlFunc(glVertexStream4sATI, stream, x, y, z, w)
#define glVertexStream4svATI(stream, coords) wrapGlFunc(glVertexStream4svATI, stream, coords)
#define glVertexWeightPointerEXT(size, type, stride, pointer) wrapGlFunc(glVertexWeightPointerEXT, size, type, stride, pointer)
#define glVertexWeightfEXT(weight) wrapGlFunc(glVertexWeightfEXT, weight)
#define glVertexWeightfvEXT(weight) wrapGlFunc(glVertexWeightfvEXT, weight)
#define glVertexWeighthNV(weight) wrapGlFunc(glVertexWeighthNV, weight)
#define glVertexWeighthvNV(weight) wrapGlFunc(glVertexWeighthvNV, weight)
#define glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params) wrapGlFunc(glVideoCaptureStreamParameterdvNV, video_capture_slot, stream, pname, params)
#define glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params) wrapGlFunc(glVideoCaptureStreamParameterfvNV, video_capture_slot, stream, pname, params)
#define glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params) wrapGlFunc(glVideoCaptureStreamParameterivNV, video_capture_slot, stream, pname, params)
#define glViewport(x, y, width, height) wrapGlFunc(glViewport, x, y, width, height)
#define glViewportArrayv(first, count, v) wrapGlFunc(glViewportArrayv, first, count, v)
#define glViewportArrayvNV(first, count, v) wrapGlFunc(glViewportArrayvNV, first, count, v)
#define glViewportArrayvOES(first, count, v) wrapGlFunc(glViewportArrayvOES, first, count, v)
#define glViewportIndexedf(index, x, y, w, h) wrapGlFunc(glViewportIndexedf, index, x, y, w, h)
#define glViewportIndexedfOES(index, x, y, w, h) wrapGlFunc(glViewportIndexedfOES, index, x, y, w, h)
#define glViewportIndexedfNV(index, x, y, w, h) wrapGlFunc(glViewportIndexedfNV, index, x, y, w, h)
#define glViewportIndexedfv(index, v) wrapGlFunc(glViewportIndexedfv, index, v)
#define glViewportIndexedfvOES(index, v) wrapGlFunc(glViewportIndexedfvOES, index, v)
#define glViewportIndexedfvNV(index, v) wrapGlFunc(glViewportIndexedfvNV, index, v)
#define glViewportPositionWScaleNV(index, xcoeff, ycoeff) wrapGlFunc(glViewportPositionWScaleNV, index, xcoeff, ycoeff)
#define glViewportSwizzleNV(index, swizzlex, swizzley, swizzlez, swizzlew) wrapGlFunc(glViewportSwizzleNV, index, swizzlex, swizzley, swizzlez, swizzlew)
#define glWaitSync(sync, flags, timeout) wrapGlFunc(glWaitSync, sync, flags, timeout)
#define glWaitSyncAPPLE(sync, flags, timeout) wrapGlFunc(glWaitSyncAPPLE, sync, flags, timeout)
#define glWeightPathsNV(resultPath, numPaths, paths, weights) wrapGlFunc(glWeightPathsNV, resultPath, numPaths, paths, weights)
#define glWeightPointerARB(size, type, stride, pointer) wrapGlFunc(glWeightPointerARB, size, type, stride, pointer)
#define glWeightPointerOES(size, type, stride, pointer) wrapGlFunc(glWeightPointerOES, size, type, stride, pointer)
#define glWeightbvARB(size, weights) wrapGlFunc(glWeightbvARB, size, weights)
#define glWeightdvARB(size, weights) wrapGlFunc(glWeightdvARB, size, weights)
#define glWeightfvARB(size, weights) wrapGlFunc(glWeightfvARB, size, weights)
#define glWeightivARB(size, weights) wrapGlFunc(glWeightivARB, size, weights)
#define glWeightsvARB(size, weights) wrapGlFunc(glWeightsvARB, size, weights)
#define glWeightubvARB(size, weights) wrapGlFunc(glWeightubvARB, size, weights)
#define glWeightuivARB(size, weights) wrapGlFunc(glWeightuivARB, size, weights)
#define glWeightusvARB(size, weights) wrapGlFunc(glWeightusvARB, size, weights)
#define glWindowPos2d(x, y) wrapGlFunc(glWindowPos2d, x, y)
#define glWindowPos2dARB(x, y) wrapGlFunc(glWindowPos2dARB, x, y)
#define glWindowPos2dMESA(x, y) wrapGlFunc(glWindowPos2dMESA, x, y)
#define glWindowPos2dv(v) wrapGlFunc(glWindowPos2dv, v)
#define glWindowPos2dvARB(v) wrapGlFunc(glWindowPos2dvARB, v)
#define glWindowPos2dvMESA(v) wrapGlFunc(glWindowPos2dvMESA, v)
#define glWindowPos2f(x, y) wrapGlFunc(glWindowPos2f, x, y)
#define glWindowPos2fARB(x, y) wrapGlFunc(glWindowPos2fARB, x, y)
#define glWindowPos2fMESA(x, y) wrapGlFunc(glWindowPos2fMESA, x, y)
#define glWindowPos2fv(v) wrapGlFunc(glWindowPos2fv, v)
#define glWindowPos2fvARB(v) wrapGlFunc(glWindowPos2fvARB, v)
#define glWindowPos2fvMESA(v) wrapGlFunc(glWindowPos2fvMESA, v)
#define glWindowPos2i(x, y) wrapGlFunc(glWindowPos2i, x, y)
#define glWindowPos2iARB(x, y) wrapGlFunc(glWindowPos2iARB, x, y)
#define glWindowPos2iMESA(x, y) wrapGlFunc(glWindowPos2iMESA, x, y)
#define glWindowPos2iv(v) wrapGlFunc(glWindowPos2iv, v)
#define glWindowPos2ivARB(v) wrapGlFunc(glWindowPos2ivARB, v)
#define glWindowPos2ivMESA(v) wrapGlFunc(glWindowPos2ivMESA, v)
#define glWindowPos2s(x, y) wrapGlFunc(glWindowPos2s, x, y)
#define glWindowPos2sARB(x, y) wrapGlFunc(glWindowPos2sARB, x, y)
#define glWindowPos2sMESA(x, y) wrapGlFunc(glWindowPos2sMESA, x, y)
#define glWindowPos2sv(v) wrapGlFunc(glWindowPos2sv, v)
#define glWindowPos2svARB(v) wrapGlFunc(glWindowPos2svARB, v)
#define glWindowPos2svMESA(v) wrapGlFunc(glWindowPos2svMESA, v)
#define glWindowPos3d(x, y, z) wrapGlFunc(glWindowPos3d, x, y, z)
#define glWindowPos3dARB(x, y, z) wrapGlFunc(glWindowPos3dARB, x, y, z)
#define glWindowPos3dMESA(x, y, z) wrapGlFunc(glWindowPos3dMESA, x, y, z)
#define glWindowPos3dv(v) wrapGlFunc(glWindowPos3dv, v)
#define glWindowPos3dvARB(v) wrapGlFunc(glWindowPos3dvARB, v)
#define glWindowPos3dvMESA(v) wrapGlFunc(glWindowPos3dvMESA, v)
#define glWindowPos3f(x, y, z) wrapGlFunc(glWindowPos3f, x, y, z)
#define glWindowPos3fARB(x, y, z) wrapGlFunc(glWindowPos3fARB, x, y, z)
#define glWindowPos3fMESA(x, y, z) wrapGlFunc(glWindowPos3fMESA, x, y, z)
#define glWindowPos3fv(v) wrapGlFunc(glWindowPos3fv, v)
#define glWindowPos3fvARB(v) wrapGlFunc(glWindowPos3fvARB, v)
#define glWindowPos3fvMESA(v) wrapGlFunc(glWindowPos3fvMESA, v)
#define glWindowPos3i(x, y, z) wrapGlFunc(glWindowPos3i, x, y, z)
#define glWindowPos3iARB(x, y, z) wrapGlFunc(glWindowPos3iARB, x, y, z)
#define glWindowPos3iMESA(x, y, z) wrapGlFunc(glWindowPos3iMESA, x, y, z)
#define glWindowPos3iv(v) wrapGlFunc(glWindowPos3iv, v)
#define glWindowPos3ivARB(v) wrapGlFunc(glWindowPos3ivARB, v)
#define glWindowPos3ivMESA(v) wrapGlFunc(glWindowPos3ivMESA, v)
#define glWindowPos3s(x, y, z) wrapGlFunc(glWindowPos3s, x, y, z)
#define glWindowPos3sARB(x, y, z) wrapGlFunc(glWindowPos3sARB, x, y, z)
#define glWindowPos3sMESA(x, y, z) wrapGlFunc(glWindowPos3sMESA, x, y, z)
#define glWindowPos3sv(v) wrapGlFunc(glWindowPos3sv, v)
#define glWindowPos3svARB(v) wrapGlFunc(glWindowPos3svARB, v)
#define glWindowPos3svMESA(v) wrapGlFunc(glWindowPos3svMESA, v)
#define glWindowPos4dMESA(x, y, z, w) wrapGlFunc(glWindowPos4dMESA, x, y, z, w)
#define glWindowPos4dvMESA(v) wrapGlFunc(glWindowPos4dvMESA, v)
#define glWindowPos4fMESA(x, y, z, w) wrapGlFunc(glWindowPos4fMESA, x, y, z, w)
#define glWindowPos4fvMESA(v) wrapGlFunc(glWindowPos4fvMESA, v)
#define glWindowPos4iMESA(x, y, z, w) wrapGlFunc(glWindowPos4iMESA, x, y, z, w)
#define glWindowPos4ivMESA(v) wrapGlFunc(glWindowPos4ivMESA, v)
#define glWindowPos4sMESA(x, y, z, w) wrapGlFunc(glWindowPos4sMESA, x, y, z, w)
#define glWindowPos4svMESA(v) wrapGlFunc(glWindowPos4svMESA, v)
#define glWindowRectanglesEXT(mode, count, box) wrapGlFunc(glWindowRectanglesEXT, mode, count, box)
#define glWriteMaskEXT(res, in, outX, outY, outZ, outW) wrapGlFunc(glWriteMaskEXT, res, in, outX, outY, outZ, outW)
